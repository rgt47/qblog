---
title: "Install Linux Mint on macbook Pro"
description: "step by step description of howto install and customize a Mint instance for data science workflow"
categories: [Mint, R, Python, Julia]
image: "img/mint.png"
subtitle: "A set of tips for install and post install"
date: last-modified
---


```{r init, include=FALSE}


options(dplyr.print_max = 1e9)
library(pacman)

p_load(jpeg,  rmarkdown, tidyverse,  broom,  tidyr,  purrr,readr,knitr, 
       dplyr,  lubridate, zoo,  ggplot2, printr, lsmeans, ggthemes,  knitr,
       nlme, pwr)

opts_chunk$set(warning = F, message = F, echo=F, fig.width=3.2,
	       fig.height=3,  results='asis', dev='pdf',
	       opts_chunk$set(cache.path = "cache/"))
source('~/shr/zz.tools.R')
options(scipen = 1, digits = 2)
```

# Introduction

## Install Mint onto a macbook pro 

The target MacBook is a 13-inch, 2016, Four Thunderbolt 3 Ports. 

Get an iso file from the Mint website

ISO file is 2.5 GB in size. 

The Linux Mint 21.1 Vera download site is [here](https://www.linuxmint.com/edition.php?id=302)

Download torrent file from website [here](https://www.linuxmint.com/torrents/)

Use app on macbook pro running macos, say `Transmission` to open torrent file and
download. Takes about 6 minutes via ethernet connection. 

Transfer iso file to USB drive, "burn". 
use balanaEtcher. Download [here](https://etcher.balena.io/)

Insert the USB flash drive into the target mac and reboot. 
Hold the ALT key to allow booting from the external USB drive. 

From the `Grub` menu choose "Start Linux Mint 21.1 Cinnamon 64-bit"

A `linux mint` desktop will appear. There is one icon on the screen
lfbeled "install Linux Mint". Double click it. 

A setup dialog will start. 

*	First Language, 
*	then Network, 
*	then codexes, 
*	then options for a fresh install or "something else". 
*	next Location, 
*	then name a root user and assign a password. 

Thats it. Reboot and login. 

Use Panda Wireless modem for internet access. Mint 21.1 has `Ralink RT5372` drivers installed. 

Add second monitor. Cinema display 27". 

Open Display menu. Select 2560x1440 for resolution for both monitors. Monitor
scale 150\%. 

Turn on Timeshift to provide hourly snapshots

Turn on "Tap to click" and "Reverse scroll". Open "Mouse and Touchpad". 

sudo apt-get update ; sudo apt-get upgrade

# Next steps...

Basics install utilities `git`, `wget`, `curl`, `zsh`

```sh
sudo apt update
sudo apt install wget curl git -y
Install zsh
sudo apt install zsh
```

Install oh-my-zsh
```sh
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
```

Install Dropbox and Texlive-full. 
The easiest way to install Dropbox and Tex is with Mint software manager. 


Install qutebrowser. 
```sh
sudo apt install qutebrowser
```

Install zotero. 
[github site](https://github.com/retorquere/zotero-deb)

```sh
sh -c "$(curl -fsSL https://raw.githubusercontent.com/retorquere/zotero-deb/master/install.sh)"
sudo apt update
sudo apt install zotero
```

Install Tex

# Install Ubuntu on Parallels

* step one set up parallels tools. Use "Actions" menu to select "install
 parallels tools. This will point CD/DVD device at the iso image. Open the DVD
in "Files". Open install parallel tool-gui. 

* macbook harddrive will be available under share
* Firefox is installed. Add vinium-ff extension. 

Idea:
Could I use Docker?

This seems like genius:
```sh
alias nvim="docker run -it -v `pwd`:/mnt/volume --workdir=/mnt/volume anatolelucet/neovim:stable"
alias nvim="docker run -it -v `pwd`:/mnt/volume --workdir=/mnt/volume anatolelucet/neovim:nightly"

```

## Script to set up links from local OS to Dropbox

```sh

#!/bin/sh
for P in .*
do
    # skip setup
    if [ "$P" = ".DS_Store" ]; then continue; fi
	echo $P
    # ensure permissions
    #chmod -R o-rwx,g-rwx $P
# 
    ## skip existing links
    if [ -h "$HOME/$P" ]; then 
	    echo " ";
	    echo $P; 
	    echo "already exists at home";
	    echo " ";
    fi
# 
    # move existing dir out of the way
    if [ -e "$HOME/$P" ]; then
	if [ -e "$HOME/$P.bak" ]; then
	    echo "want to override $HOME/$P but backup exists"
	    continue;
	fi
# 
	echo -n "Backup "
	mv -v "$HOME/$P" "$HOME/$P.bak"
    fi
# 
    echo "create in Home a link for"
	    echo $P; 
    ln -v -s "$HOME/Dropbox/dotfiles/$P" "$HOME/$P"
done

if [ ! -d $HOME/sandbox ]
	then 
		echo "sandbox does not exist so create link"
		ln -v -s $HOME/Dropbox/sandbox/ $HOME/sandbox; 
fi
if [ ! -d $HOME/bin ]
	then 
		echo "bin does not exist so create link"
		ln -v -s $HOME/Dropbox/bin/ $HOME/bin; 
fi
if [ ! -d $HOME/docs ]
	then 
		echo "docs does not exist so create link"
		ln -v -s $HOME/Dropbox/docs/ $HOME/docs; 
fi
if [ ! -d $HOME/prj ]
	then 
		echo "prj does not exist so create link"
		ln -v -s $HOME/Dropbox/prj/ $HOME/prj; 
fi
if [ ! -d $HOME/work ]
	then 
		echo "work does not exist so create link"
		ln -v -s $HOME/Dropbox/work/ $HOME/work; 
fi
if [ ! -d $HOME/shr ]
	then 
		echo "shr does not exist so create link"
		ln -v -s $HOME/Dropbox/shr/ $HOME/shr; 
fi
```

