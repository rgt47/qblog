{
  "hash": "91c82ff9c18899c39e67065c838fbf21",
  "result": {
    "markdown": "---\ntitle: \"Install Linux Mint on macbook Pro\"\ndescription: \"step by step description of howto install and customize a Mint instance for data science workflow\"\ncategories: [Mint, R, Python, Julia]\nimage: \"img/mint.png\"\nsubtitle: \"A set of tips for installation and post install\"\ndate: last-modified\n---\n\n\n\n\n\n# Introduction\n\n## Install Mint onto a macbook pro \n\nThe target machine is a 2016 13-inch MacBook with four Thunderbolt 3 Ports. \n\nGet an iso file from the Mint website. \nThe Linux Mint 21.1 Vera download site is [here](https://www.linuxmint.com/edition.php?id=302).\n\nThe ISO file is 2.5 GB in size. The download torrent file is  [here](https://www.linuxmint.com/torrents/)\n\nUse an app on macbook pro running macos, we suggest `Transmission`, to open torrent file and\ndownload \"iso\". Takes about 6 minutes via ethernet connection. \n\nTransfer (\"burn\") iso file to USB drive. \nOn Macos we suggest using `balanaEtcher`. Download  `balanaEtcher` [here](https://etcher.balena.io/)\n\nInsert the USB flash drive into the target mac and reboot. \nHold the ALT key to allow booting from the external USB drive. \n\nFrom the `Grub` menu choose \"Start Linux Mint 21.1 Cinnamon 64-bit\"\n\nA `linux mint` desktop will appear. There is one icon on the screen\nlfbeled \"install Linux Mint\". Double click it. \n\nA setup dialog will start. \n\n*\tFirst Language, \n*\tthen Network, \n*\tthen codexes, \n*\tthen options for a fresh install or \"something else\". \n*\tnext Location, \n*\tthen name a root user and assign a password. \n\nThats it. Reboot and login. \n\nUse Panda Wireless modem for internet access. Mint 21.1 has `Ralink RT5372` drivers installed. \n\nAdd second monitor. Cinema display 27\". \n\nOpen Display menu. Select 2560x1440 for resolution for both monitors. Monitor\nscale 150\\%. \n\nTurn on Timeshift to provide hourly snapshots\n\nOpen \"Mouse and Touchpad\". Turn on \"Tap to click\" and \"Reverse scroll\". \n\nUpdate base software.\n```sh\nsudo apt-get update ; sudo apt-get upgrade\n```\n\n# Next steps...\n\nBasics install utilities `git`, `wget`, `curl`, `zsh`\n\n```sh\nsudo apt update\nsudo apt install zsh wget curl git -y\n```\n\nInstall `oh-my-zsh`\n\n```sh\nsh -c \"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n```\n\nInstall `Dropbox` and `Texlive-full`. \nThe easiest way to install `Dropbox` and `Tex` is with the Mint software manager. \n\n\nInstall qutebrowser. \n```sh\nsudo apt install qutebrowser\n```\n\nInstall zotero. \nEasiest method IMO is to use the Debian package \n\n```sh\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/retorquere/zotero-deb/master/install.sh)\"\nsudo apt update\nsudo apt install zotero\n```\n\n\n# Install Ubuntu on Parallels\n\n* step one set up parallels tools. Use \"Actions\" menu to select \"install\n parallels tools. This will point CD/DVD device at the iso image. Open the DVD\nin \"Files\". Open install parallel tool-gui. \n\n* macbook harddrive will be available under share\n* Firefox is installed. Add vinium-ff extension. \n\nIdea:\nCould I use Docker?\n\nThis seems like genius:\n```sh\nalias nvim=\"docker run -it -v `pwd`:/mnt/volume --workdir=/mnt/volume anatolelucet/neovim:stable\"\nalias nvim=\"docker run -it -v `pwd`:/mnt/volume --workdir=/mnt/volume anatolelucet/neovim:nightly\"\n\n```\n\n## Script to set up links from local Home to Dropbox\n\n```sh\n\n#!/bin/sh\nfor P in .*\ndo\n    # skip setup\n    if [ \"$P\" = \".DS_Store\" ]; then continue; fi\n\techo $P\n    # ensure permissions\n    #chmod -R o-rwx,g-rwx $P\n# \n    ## skip existing links\n    if [ -h \"$HOME/$P\" ]; then \n\t    echo \" \";\n\t    echo $P; \n\t    echo \"already exists at home\";\n\t    echo \" \";\n    fi\n# \n    # move existing dir out of the way\n    if [ -e \"$HOME/$P\" ]; then\n\tif [ -e \"$HOME/$P.bak\" ]; then\n\t    echo \"want to override $HOME/$P but backup exists\"\n\t    continue;\n\tfi\n# \n\techo -n \"Backup \"\n\tmv -v \"$HOME/$P\" \"$HOME/$P.bak\"\n    fi\n# \n    echo \"create in Home a link for\"\n\t    echo $P; \n    ln -v -s \"$HOME/Dropbox/dotfiles/$P\" \"$HOME/$P\"\ndone\n\nif [ ! -d $HOME/sandbox ]\n\tthen \n\t\techo \"sandbox does not exist so create link\"\n\t\tln -v -s $HOME/Dropbox/sandbox/ $HOME/sandbox; \nfi\nif [ ! -d $HOME/bin ]\n\tthen \n\t\techo \"bin does not exist so create link\"\n\t\tln -v -s $HOME/Dropbox/bin/ $HOME/bin; \nfi\nif [ ! -d $HOME/docs ]\n\tthen \n\t\techo \"docs does not exist so create link\"\n\t\tln -v -s $HOME/Dropbox/docs/ $HOME/docs; \nfi\nif [ ! -d $HOME/prj ]\n\tthen \n\t\techo \"prj does not exist so create link\"\n\t\tln -v -s $HOME/Dropbox/prj/ $HOME/prj; \nfi\nif [ ! -d $HOME/work ]\n\tthen \n\t\techo \"work does not exist so create link\"\n\t\tln -v -s $HOME/Dropbox/work/ $HOME/work; \nfi\nif [ ! -d $HOME/shr ]\n\tthen \n\t\techo \"shr does not exist so create link\"\n\t\tln -v -s $HOME/Dropbox/shr/ $HOME/shr; \nfi\n```\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}