[
  {
    "objectID": "posts/setupquarto/setupquarto.html",
    "href": "posts/setupquarto/setupquarto.html",
    "title": "Setting up Quarto",
    "section": "",
    "text": "This is inline code plus a small code chunk.\n\nlibrary(tidyverse)\n\nggplot(mpg) +\n  geom_jitter(aes(cty, hwy), size = 4, alpha = 0.5) \n\n\n\n\n\n\n\n\n\n\nTransforming OLS estimatesMaximizing likelihood\n\n\n\n\nCode\npreds_lm %>% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\nCode\nglm.mod <- glm(sex ~ body_mass_g + bill_length_mm + species, family = binomial, data = dat)\n\npreds <- dat %>% \n  mutate(\n    prob.fit = glm.mod$fitted.values,\n    prediction = if_else(prob.fit > 0.5, 'male', 'female'),\n    correct = if_else(sex == prediction, 'correct', 'incorrect')\n  )\n\n\npreds %>% \n  ggplot(aes(body_mass_g, bill_length_mm, col = correct)) +\n  geom_jitter(size = 4, alpha = 0.6) +\n  facet_wrap(vars(species)) +\n  scale_x_continuous(breaks = seq(3000, 6000, 1000)) +\n  scale_color_manual(values = c('grey60', thematic::okabe_ito(3)[3])) +\n  theme_minimal(base_size = 10) +\n  theme(\n    legend.position = 'top', \n    panel.background = element_rect(color = 'black'),\n    panel.grid.minor = element_blank()\n  ) +\n  labs(\n    x = 'Body mass (in g)',\n    y = 'Bill length (in mm)'\n  )\n\n\n\n\n\n\n\n\n\n\n\\[\n\\int_0^1 f(x) \\ dx\n\\]\n\n\n\n\n\n\n\ngeom_density(\n  mapping = NULL,\n  data = NULL,\n  stat = \"density\",\n  position = \"identity\",\n  ...,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE,\n  outline.type = \"upper\"\n)\n\n\nstat_density(\n  mapping = NULL,\n  data = NULL,\n  geom = \"area\",\n  position = \"stack\",\n  ...,\n  bw = \"nrd0\",\n  adjust = 1,\n  kernel = \"gaussian\",\n  n = 512,\n  trim = FALSE,\n  na.rm = FALSE,\n  orientation = NA,\n  show.legend = NA,\n  inherit.aes = TRUE\n)\n\n\n\n\n\n\n\nggplot(data = gapminder::gapminder, mapping = aes(x = lifeExp, fill = continent)) +\n  stat_density(position = \"identity\", alpha = 0.5)\n\n\n\n\nBla bla bla. This is a caption in the margin. Super cool isn‚Äôt it?\n\n\n\n\nStart with running quarto create-project at ~/prj level\n~/Dropbox/prj via üìê v4.2.1\n‚ùØ quarto create-project qblog --type website:blog\nCreating project at /Users/zenn/Dropbox/prj/qblog:\n  - Created _quarto.yml\n  - Created index.qmd\n  - Created posts/welcome/index.qmd\n  - Created posts/post-with-code/index.qmd\n  - Created about.qmd\n  - Created styles.css\n  - Created posts/_metadata.yml\n\ncd to ~/qblog/posts/\ncreate a new directory, say setupquarto\ncd to ~/qblog/posts/setupquarto\ntouch setupquarto.qmd\nv setupquarto.qmd"
  },
  {
    "objectID": "posts/setupneovim/TODO.html",
    "href": "posts/setupneovim/TODO.html",
    "title": "Focus on R: a new qblog",
    "section": "",
    "text": "Reusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@online{(ryy)glennthomas,\n  author = {Ronald (Ryy) Glenn Thomas},\n  url = {https://focusonr.org/TODO.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nRonald (Ryy) Glenn Thomas. n.d. https://focusonr.org/TODO.html."
  },
  {
    "objectID": "posts/setupneovim/index.html",
    "href": "posts/setupneovim/index.html",
    "title": "Setting up a minimal neovim environment for data science code development",
    "section": "",
    "text": "under construction\n\n\n\n Photo by Nathan Waters on Unsplash \n\nIntroduction\nNeovim (a fork of Vim) is a text editor that has several advantages for data science code development. One of the main attractions is that it is open source and has a number of useful plugins to facilitate working on R, python, and julia code. Also, its modal, keyboard-centric system allows text and code manipulation at potentially far greater speed than conventional, mouse-centric, systems.\nIn this post we describe both a minimal, yet functional setup, as well as a more extensive setup utilizing several of the newest neovim-only plugins, for neovim to allow IDE style code editing and REML interaction for the three primary data science coding tools: R, Python, and Julia.\nOur presentation here is for a macos environment. Appendix one contains required adjustments for a ubuntu linux environment.\n\n\nStep one: Install the latest stable version of neovim.\nWith minimal effort we can install both the terminal and GUI versions of neovim. The simplist approach is to use homebrew:\n> brew install neovim neovim-qt\nSet up convenience aliases in zsh.\n> alias ng = neovim-qt\n> alias nt = neovim\n(mnemonic: the t in nt is for terminal, the g in ng is for GUI)\n\n\nStep 2: Configure neovim\nThe standard location for neovim configuration files on ‚Äúunix-like‚Äù systems is ~/.config/nvim. The main config file is either init.vim (VimL) or init.lua (Lua). In this post we‚Äôll focus on lua based configuration.\nSpecifically, the following code block creates an nvim subdirectory under ~/.config and initialize a configuration file init.lua.\nHere is the file hierarchy we‚Äôll construct. In fact all the code could be bundled into the init.lua file, but this approach is clearer and cleaner.\ntree --charset=ascii\n.\n|-- init.lua\n|-- leap-config.lua\n|-- lua\n|   |-- basics.lua\n|   |-- nvim-R-config.lua\n|   |-- nvim-cmp-config.lua\n|   |-- nvim-telescope-config.lua\n|   |-- nvim-tree-config.lua\n|-- my_snippets\n|   |-- giles.tex.snipppets\n|   |-- mail.snippets\n|   |-- rmd.snippets\n|   |-- snippets.snippets\n|   |-- tex.snippets\n|   |-- text.snippets\n|   `-- txt.snippets\n|-- spell\n|   |-- en.utf-8.add\n|   `-- en.utf-8.add.spl\n> cd .config\n> mkdir nvim\n> cd nvim\n> touch init.lua\n\ninstall the paq plugin manager\n\ngit clone --depth=1 https://github.com/savq/paq-nvim.git \\\n    ~/.local/share/nvim/site/pack/paqs/start/paq-nvim\n:PaqInstall\nAdd the following code to init.lua list the plugins needed to be installed from github and ‚Äúfeed‚Äù them to paq for installation.\nNvim-R, Leap, UltiSnips, and vimtex need additional configuration. The required code is contained in bespoke files under the lua directory.\nto use paq-nvim to manage plugins (maximally minimal)\nrequire \"paq\" {\n\"savq/paq-nvim\";                  \n\"junegunn/fzf\";\n'voldikss/vim-floaterm';\n'preservim/nerdcommenter';\n\"NLKNguyen/papercolor-theme\";\n\"SirVer/ultisnips\"; \n\"honza/vim-snippets\";\n\"ggandor/leap.nvim\";\n\"jalvesaq/Nvim-R\";\n'davidhalter/jedi-vim';\n\"lervag/vimtex\";\n\"owickstrom/vim-colors-paramount\"\n}\nrequire('basics')\nrequire('nvim-R-config')\nrequire('leap').add_default_mappings()\nvim.keymap.del({'x', 'o'}, 'x')\nvim.keymap.del({'x', 'o'}, 'X')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nplugin discussions\n\n\nkeymaps\n\n\nvim.cmd([[\nset number relativenumber\nset textwidth=80\nset cursorline\nset iskeyword-=_ \nset hlsearch   \nset splitright\nset hidden   \nset incsearch    \nset noswapfile\nset showmatch\nset ignorecase\nset smartcase\nset gdefault\nfiletype plugin on\n\n\"completion \n\"        for text: S-Tab launches pop-up words\n\"   for R and Rmd completion is automatic\n\"ultisnips, \n\"   launch with C-j, move forward with C-j, move backward with C-k\n\"   open ultisnips file with <leader>u\n\nset dictionary+=/usr/share/dict/words\nlet g:UltiSnipsSnippetDirectories=[\"UltiSnips\", \"my_snippets\"]\n\nlet g:UltiSnipsExpandTrigger=\"<c-j>\"\nlet g:UltiSnipsJumpForwardTrigger=\"<c-j>\"\nlet g:UltiSnipsJumpBackwardTrigger=\"<c-k>\"\n\nlet g:UltiSnipsEditSplit=\"vertical\"\nlet g:UltiSnipsUsePythonVersion = 3\n\"nnoremap <leader>u :UltiSnipsEdit<cr>\nset completeopt=longest,menuone\n\ninoremap <expr> <TAB> pumvisible() ? \"\\<C-n>\" : \"\\<TAB>\"\ninoremap <expr> <S-TAB> pumvisible() ? \"\\<C-p>\" : \"\\<TAB>\"\ninoremap <expr> <CR> pumvisible() ? \"\\<C-y>\" : \"\\<C-g>u\\<CR>\"\nlet R_set_omnifunc = [\"r\",  \"rmd\", \"quarto\",  \"rhelp\"]\nlet R_auto_omni = [\"r\", \"rmd\", \"rhelp\"]\n]])\nvim.g.mapleader = \",\"\nvim.g.maplocalleader = \" \"\nlocal map = vim.keymap.set\nlocal opts = {noremap = true}\nmap('n', ':', ';', opts)\nmap('n', ';', ':', opts)\nmap('n', '<Space><leader>','<C-u>', opts)\nmap('n', '<leader>u',':UltiSnipsEdit<cr>', opts)\nmap('n', '<Space><Space>','<C-d>', opts)\nmap('n', '-','$', opts)\nmap('n', '<leader>f','vipgq', opts)\nmap('n', '<leader>v','edit ~/.config/nvim/init.lua<cr>', opts)\nmap('n', '<leader>a','ggVG', opts)\nmap('n', '<leader>t',':tab split<cr>', opts)\nmap('n', '<leader>y',':vert sb2<cr>', opts)\nmap('n', '<leader>0',':ls!<CR>:b<Space>', opts)\nmap('n', '<leader><leader>','<C-w>w', opts)\nmap('n', '<leader>1','<C-w>:b1<cr>', opts)\nmap('n', '<leader>2','<C-w>:b2<cr>', opts)\nmap('n', '<leader>3','<C-w>:b3<cr>', opts)\nmap('t',  'ZZ', \"q('no')<CR>\", opts)\nmap('t',  'ZQ', \"q('no')<CR>\", opts)\nmap('v',  '-', '$', opts)\nmap('t',  '<leader>0','<C-\\\\><C-n><C-w>:ls!<cr>:b<Space>', opts)\nmap('t',  '<Escape>','<C-\\\\><C-n>', opts)\nmap('t',  '<leader><leader>','<C-\\\\><C-n><C-w>w', opts)\nmap('i',  '<Esc>', '<Esc>`^', opts)\nmap('i',  '<S-Tab>', '<C-x><C-k>', opts)\n\nvim.cmd([[\n\"    copy clipboard to register x for safe keeping\nnnoremap <leader>x :let @x=@*\n\"    paste registers into terminal\ntnoremap <expr> <C-R> '<C-\\><C-N>\"'.nr2char(getchar()).'pi'\nset background=light\ncolorscheme paramount\n]])\n\n\n\n\n\n\n\n\n\n\n\nSet up R\n\n\nvim.cmd([[\nlet $FZF_DEFAULT_COMMAND = 'rg --files --hidden'\nlet R_auto_start = 2\nlet R_hl_term = 0\nlet R_clear_line = 1\nlet R_pdfviewer = \"zathura\" \nlet R_assign = 2\nlet R_latexcmd = ['xelatex']\naugroup rmarkdown\nautocmd!\nautocmd FileType rmd,r nnoremap <buffer> <CR>  :call SendLineToR(\"down\")<CR>\nautocmd FileType rmd,r nnoremap <buffer> <space>l :call SendChunkToR(\"silent\",\"down\")<cr>\nautocmd FileType rmd,r nnoremap <buffer> <space>' :call RMakeRmd(\"default\")<cr>\nautocmd FileType rmd,r noremap <space>s :call RAction(\"str\")<cr>\nautocmd FileType rmd,r noremap <space>i :call RAction(\"dim\")<cr>\nautocmd FileType rmd,r noremap <space>h :call RAction(\"head\")<cr>\nautocmd FileType rmd,r noremap <space>p :call RAction(\"print\")<cr>\nautocmd FileType rmd,r noremap <space>q :call RAction(\"length\")<cr>\nautocmd FileType rmd,r noremap <space>n :call RAction(\"nvim.names\")<cr>\nautocmd FileType rmd,r noremap <space>c :call RAction(\"cnt\")<cr>\nautocmd FileType rmd,r noremap <space>k :call PreviousRChunk()<cr>\nautocmd FileType rmd,r noremap <space>j :call NextRChunk()<cr>\naugroup END\n]])\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@online{(ryy)glennthomas,\n  author = {Ronald (Ryy) Glenn Thomas},\n  title = {Setting up a Minimal Neovim Environment for Data Science Code\n    Development},\n  date = {},\n  url = {https://focusonr.org/posts/setupneovim},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nRonald (Ryy) Glenn Thomas. n.d. ‚ÄúSetting up a Minimal Neovim\nEnvironment for Data Science Code Development.‚Äù https://focusonr.org/posts/setupneovim."
  },
  {
    "objectID": "posts/setupubuntu/index.html",
    "href": "posts/setupubuntu/index.html",
    "title": "Setup Ubuntu on parallels",
    "section": "",
    "text": "Introduction\nCould I use Docker?\nThis seems like genius:\n alias nvim=\"docker run -it -v `pwd`:/mnt/volume --workdir=/mnt/volume anatolelucet/neovim:stable\"\nalias nvim=\"docker run -it -v `pwd`:/mnt/volume --workdir=/mnt/volume anatolelucet/neovim:nightly\"\n\nstep one set up parallels tools. Use ‚ÄúActions‚Äù menu to select ‚Äúinstall parallels tools. This will point CD/DVD device at the iso image. Open the DVD in‚ÄùFiles‚Äù. Open install parallel tool-gui.\nmacbook harddrive will be available under share\nFirefox is installed. Add vinium-ff extension.\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@online{(ryy)glennthomas2022,\n  author = {Ronald (Ryy) Glenn Thomas},\n  title = {Setup {Ubuntu} on Parallels},\n  date = {2022-09-10},\n  url = {https://focusonr.org/posts/setupubuntu},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nRonald (Ryy) Glenn Thomas. 2022. ‚ÄúSetup Ubuntu on\nParallels.‚Äù September 10, 2022. https://focusonr.org/posts/setupubuntu."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Focus on R blog",
    "section": "",
    "text": "Set up a virtual server on AWS (in anticipation of hosting Shiny apps)\n\n\n\n\n\n\n\nAWS\n\n\n\n\nDetailed steps for setting up a lightweight server on AWS.\n\n\n\n\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n  \n\n\n\n\nA simple process to get your Shiny app online (securely).\n\n\n\n\n\n\n\nDocker\n\n\nShiny\n\n\n\n\nThis is the first in a series of posts offering suggested strategies for leveraging open source technologies to effectively host data science analysis apps and reports online.\n\n\n\n\n\n\nMar 26, 2023\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n  \n\n\n\n\nA simple five-ish step process to get your Shiny app online (securely).\n\n\nGithub, Docker-compose, EC2 version\n\n\n\n\nDocker\n\n\nShiny\n\n\ndocker-compose\n\n\n\n\nThis is the first in a series of posts offering suggested strategies for leveraging open source technologies to effectively host data science analysis apps and reports online.\n\n\n\n\n\n\nMar 26, 2023\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSetting up Quarto\n\n\n\n\n\n\n\n123\n\n\nSecond Tag\n\n\n\n\nThis is a second post.\n\n\n\n\n\n\nAug 31, 2022\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n  \n\n\n\n\nSetting up a minimal neovim environment for data science code development\n\n\nA neovim IDE for R, Python, and Julia\n\n\n\n\nNeovim\n\n\n\n\nThis is the first in a series of posts offering suggested strategies for setting up key tools for data science code development\n\n\n\n\n\n\nInvalid Date\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n  \n\n\n\n\nSetup Ubuntu on parallels\n\n\n\n\n\n\n\nDocker\n\n\nShiny\n\n\n\n\nstep by step description to create vitual server and setting up optimal neovim config.\n\n\n\n\n\n\nSep 10, 2022\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Focused on new and interesting data science technologies."
  }
]