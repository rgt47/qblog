[
  {
    "objectID": "posts/setup_R_vimtex_ultisnips/index.html",
    "href": "posts/setup_R_vimtex_ultisnips/index.html",
    "title": "Setting up R, vimtex and Ultisnips in vim on a Mac",
    "section": "",
    "text": "vim setup"
  },
  {
    "objectID": "posts/setup_R_vimtex_ultisnips/index.html#yaml-header",
    "href": "posts/setup_R_vimtex_ultisnips/index.html#yaml-header",
    "title": "Setting up R, vimtex and Ultisnips in vim on a Mac",
    "section": "6.1 YAML header",
    "text": "6.1 YAML header\nThe RMD file contains a YAML metadata header delineated with the lines “—” above and below. For this example we want to generate a pdf formatted output file.\nThe YAML can be as simple as one line specifying the output as pdf.\n---\noutput: pdf_document\n---\nWhich results in a simple output file as follows:\n\n\n\n\n\nsimple pdf\n\n\nNB. to invoke file completion in vim for the rmd (or quarto) change the vim filetype using the command:\n:set filetype=tex\nthen enter, e.g., \\includegraphics{ or \\input{ followed by C-x C-o. and a pop-up menu with possible completions with appear.\n\n---\ntitle: \"Penguins data analysis\"\nauthor: \"R.G. Thomas\"\ndate: \"2024-01-24\"\noutput:\n  pdf_document:\n    keep_tex: true\n    includes:\nheader-includes:\n    - \\usepackage{lipsum, fancyhdr, titling, currfile}\n    - \\usepackage[export]{adjustbox}\n    - \\pagestyle{fancy}\n    - \\pretitle{\n    - \\begin{flushright} \\includegraphics[width=3cm,valign=c]{sudoku.pdf}\n    - \\end{flushright}\n    - \\noindent\\rule{\\linewidth}{2pt}\\begin{flushleft}\\LARGE}\n    - \\posttitle{\\end{flushleft}\\noindent\\rule{\\linewidth}{2pt}}\n---\n\n::: column-margin\n![simple pdf](penguins/peng_mid.pdf)\n:::\n# Introduction\n\nBegin by loading the palmerpenguins package.\n::: {.cell}\n\n```{.r .cell-code}\ndf1 &lt;- palmerpenguins::penguins\n:::\n\n\n\n# Appendix\n\n\nhttps://www.reddit.com/r/vim/comments/7c7wd9/vim_vimtex_zathura_on_macos/\n\nhttps://stackoverflow.com/questions/40077211/e185-cannot-find-color-scheme\n\nhttps://github.com/morhetz/gruvbox/issues/219\n\nhttps://github.com/junegunn/vim-plug/issues/325\n\nhttps://github.com/dylanaraps/pywal/wiki/Getting-Started\n\nhttps://github.com/dylanaraps/wal.vim\n\nhttps://github.com/dylanaraps/pywal/wiki/Customization\n\nhttps://github.com/lervag/vimtex/issues/1420\n\nhttps://latextools.readthedocs.io/en/latest/install/\n\nhttps://mg.readthedocs.io/latexmk.html\n\nhttps://gist.github.com/LucaCappelletti94/920186303d71c85e66e76ff989ea6b62\n\nhttps://github.com/lervag/vimtex/issues/1420\n\nhttps://latextools.readthedocs.io/en/latest/install/\n\nhttps://github.com/lervag/vimtex/issues/1420\n\nhttps://github.com/lervag/vimtex/issues/940\n\nhttps://github.com/lervag/vimtex/issues/663\n\nhttp://www.math.cmu.edu/~gautam/sj/blog/20140310-zathura-fsearch.html\n\nhttps://gitter.im/SirVer/ultisnips\n\nhttps://github.com/SirVer/ultisnips/issues/1107\n\nhttps://github.com/SirVer/ultisnips/issues/1022\n\nhttps://github.com/SirVer/ultisnips/issues/850\n\nhttps://superuser.com/questions/1115159/how-do-i-install-vim-on-osx-with-python-3-support\n\nhttps://jdhao.github.io/2020/01/05/ultisnips_python_interpolation/\n\nhttp://witkowskibartosz.com/blog/python_snippets_in_vim_with_ultisnips.html#.Xnw9gtP7TRY\n\nhttps://germaniumhq.com/2019/02/07/2019-02-07-Vim-Ultimate-Editing:-UltiSnips/\n\nhttp://vimcasts.org/episodes/ultisnips-python-interpolation/\n\nhttps://wraihan.com/posts/vimtex-and-zathura/\n\n\n# Appendix\n\nUse tab for a) ultisnip snippet navigation (move from one tabstop to the next)\nand b) for navigation forward inside popup menu\n\n```sh\nlet g:UltiSnipsExpandTrigger=\"&lt;C-tab&gt;\"\nlet g:UltiSnipsJumpForwardTrigger=\"&lt;tab&gt;\"\nlet g:UltiSnipsJumpBackwardTrigger=\"&lt;S-tab&gt;\"\n\ninoremap &lt;expr&gt; &lt;tab&gt; pumvisible() ? \"\\&lt;C-n&gt;\" : \"\\&lt;tab&gt;\"\ninoremap &lt;expr&gt; &lt;S-tab&gt; pumvisible() ? \"\\&lt;C-p&gt;\" : \"\\&lt;S-tab&gt;\""
  },
  {
    "objectID": "posts/power_analysis_shiny_app/app4/penguins.html",
    "href": "posts/power_analysis_shiny_app/app4/penguins.html",
    "title": "Penguins",
    "section": "",
    "text": "A simple example based on Allison Horst’s Palmer Penguins dataset. Here we look at how penguin body mass varies across both sex and species (use the provided inputs to filter the dataset by bill length and island):\n\nviewof bill_length_min = Inputs.range(\n  [32, 50], \n  {value: 35, step: 1, label: \"Bill length (min):\"}\n)\nviewof islands = Inputs.checkbox(\n  [\"Torgersen\", \"Biscoe\", \"Dream\"], \n  { value: [\"Torgersen\", \"Biscoe\"], \n    label: \"Islands:\"\n  }\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlotData\n\n\n\nPlot.rectY(filtered, \n  Plot.binX(\n    {y: \"count\"}, \n    {x: \"body_mass_g\", fill: \"species\", thresholds: 20}\n  ))\n  .plot({\n    facet: {\n      data: filtered,\n      x: \"sex\",\n      y: \"species\",\n      marginRight: 80\n    },\n    marks: [\n      Plot.frame(),\n    ]\n  }\n)\n\n\n\n\n\n\n\n\n\nInputs.table(filtered)\n\n\n\n\n\n\n\n\n\n\ndata = FileAttachment(\"palmer-penguins.csv\").csv({ typed: true })\n\n\n\n\n\n\n\nfiltered = data.filter(function(penguin) {\n  return bill_length_min &lt; penguin.bill_length_mm &&\n         islands.includes(penguin.island);\n})"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Thomas lab",
    "section": "",
    "text": "Director: Professor Ronald G. Thomas School of Public Health UC, San Diego La Jolla, California\nFocused on new and interesting data science technologies."
  },
  {
    "objectID": "about/index.html",
    "href": "about/index.html",
    "title": "Thomas Lab",
    "section": "",
    "text": "twitter\n  \n  \n    \n     Github\n  \n\n      \nThe Thomas Lab in the the Herbert Wertheim School of Public Health and Human Longevity Science at UC San Diego focuses on developing data science methodology and educational materials."
  },
  {
    "objectID": "posts/index.html",
    "href": "posts/index.html",
    "title": "Blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nPenguins\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConstructing a medium complexity shiny app for power analysis\n\n\n\n\n\n\n\n\n\n\n\nJan 24, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nSetting up R, vimtex and Ultisnips in vim on a Mac\n\n\n\n\n\n\nvim\n\n\nR\n\n\nTex\n\n\nUltisnips\n\n\n\nDetailed configuration for optimal interaction and efficiency\n\n\n\n\n\nJan 24, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nSetting up OBS for webcasting\n\n\n\n\n\n\n\n\n\n\n\nJan 24, 2024\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/power_analysis_shiny_app/index.html",
    "href": "posts/power_analysis_shiny_app/index.html",
    "title": "Constructing a medium complexity shiny app for power analysis",
    "section": "",
    "text": "under construction\n\n\n\n1 Introduction\nOne of the most common tasks for a biostatistician is the calculation of a required sample size for a two group comparison based on a two sample Student’s t-test. While common, this exercise is not trivial. There are numerous parameters to be set by the study investigators.\nWant to be able to add CSS to shiny app: read:\n\n\n2 Methods\n\n\n3 Code\n\nlibrary(pacman)\np_load(DT, ggplot2, pwr, shiny,bsicons, bslib, ggplot2, plotly)\nqc = \"question-circle\"\nt1 = \"Sample Size:\"\nt2 = \"Total Sample Size. Both groups combined.\"\nui &lt;- page_sidebar(\n  includeCSS(\"power1_style.css\"),\n  title = \"Power Calculator for Two Group Parallel Designs\",\n  sidebar = sidebar(\n    sliderInput(\"N\", tooltip(list( t1, bs_icon(qc) ), t2 ), 0, 100, 50, 1),\n    sliderInput(\"dropout\", \"Dropout Rate:\", 0, .40, .10),\n    htmlOutput(\"ittsizes\"),\n    htmlOutput(\"dropoutsizes\"),\n    radioButtons(\"dmeth\", \"Method for Effect Size\", c(\n      \"SD Units (Cohen)\" = \"std\",\n      \"Pct reduction\" = \"pct\",\n      \"Diff in change scores\" = \"diff\",\n      \"Change in active group\" = \"active\"\n    )),\n    conditionalPanel(\n      condition = \"input.dmeth == 'std'\",\n      sliderInput(\"del\", \" delta\", 0.0, 1.8, c(.20, 1.8), .1),\n    ),\n    conditionalPanel(\n      condition = \"input.dmeth == 'diff'\",\n      sliderInput(\"dff\", \" diff\", 0, 10.0, c(1, 9), .1),\n    ),\n    conditionalPanel(\n      condition = \"input.dmeth == 'pct'\",\n      sliderInput(\"pct\", \"Pct. Reduction\", 0, 1, c(.1, .9), .1),\n    ),\n    conditionalPanel(\n      condition = \"input.dmeth == 'active'\",\n      sliderInput(\"active\", \"Treatment group change\",\n        min = 1, max = 50, value = c(1, 50)\n      )\n    ),\n    conditionalPanel(\n      condition = \"input.dmeth == 'diff' |\n      input.dmeth == 'pct' | input.dmeth == 'active' \",\n      sliderInput(\"sd0\", \"Placebo SD:\", 1, 20, 5.0, .1),\n      sliderInput(\"d0\", \"Placebo Change:\", 0, 20, 10.0, .1),\n    ),\n    # sliderInput(\"del\", \" delta\", 0.0, 1.8, c(.20, 1.8), .1),\n    # sliderInput(\"dff\", \" diff\", 0, 10.0, c(1, 9), .1),\n    # sliderInput(\"pct\", \"Pct. Reduction\", 0, 1, c(.1, .9), .1),\n    # sliderInput(\"sd0\", \"Placebo SD:\", 1, 20, 5.0, .1),\n    # sliderInput(\"d0\", \"Placebo Change:\", 0, 20, 10.0, .1),\n    # sliderInput(\"d1\", \"Active Change:\", 0, 20, 7.0, .1),\n\n    checkboxInput(\"choice\", \"Additional parameter settings\"),\n    conditionalPanel(\n      condition = \"input.choice == 1\",\n      numericInput(\"ratio\", \"Ratio of active to ctrl:\", 1, .5, 5.0, .5),\n      sliderInput(\"dropin\", \"Drop-in rate:\", 0, .4, 0),\n      numericInput(\"type1\", \"Type one error:\", .05, .01, .2, .005),\n    checkboxInput(\"sided\", \"One sided testing\"),\n    ),\n  ),\n  layout_column_wrap(\n    width = 1 / 2,\n    card(\n      height = 700,\n      full_screen = TRUE, card_header(\"Power\"), plotOutput(\"plot\")\n    ),\n    card(\n      height = 700,\n      full_screen = TRUE, card_header(\"Data\"), DT::dataTableOutput(\"df\")\n    ),\n    card(\n      max_height = 250,\n      card_header(\"Summary\"), verbatimTextOutput(\"eff1\")\n    ),\n    card(\n      max_height = 250,\n      card_header(\"Pdf report\"), downloadButton(\"report\", \"Download report\")\n    )\n  ),\n  # verbatimTextOutput(\"eff0\"),\n  # verbatimTextOutput(\"eff1\"),\n  # verbatimTextOutput(\"eff2\"),\n  # downloadButton(\"report\", \"Download report\")\n)\n\nserver &lt;- function(input, output, session) {\n  delv &lt;- reactive(seq(input$del[1], input$del[2], (input$del[2] - input$del[1]) / 15))\n  dffv &lt;- reactive(delv() * input$sd0)\n  pctv &lt;- reactive(delv() * input$sd0 / input$d0)\n  n1comp &lt;- reactive(input$ratio * input$N / (input$ratio + 1) * ((1 - (input$dropin + input$dropout))))\n  n2comp &lt;- reactive(input$N / (input$ratio + 1) * ((1 - (input$dropin + input$dropout))))\n  n1itt &lt;- reactive(input$ratio * input$N / (input$ratio + 1))\n  n2itt &lt;- reactive(input$N / (input$ratio + 1))\n\n  pow &lt;- reactive(sapply(\n    delv(),\n    function(x) pwr.t2n.test(n1comp(), n2comp(), d = x)$power\n  ))\n\n  powpct &lt;- reactive(sapply(\n    pctv(),\n    function(x) pwr.t2n.test(n1comp(), n2comp(), d = x * input$d0 / input$sd0)$power\n  ))\n\n  out &lt;- reactive(data.frame(cbind(\n    std = delv() |&gt; round(3),\n    pct = pctv() |&gt; round(3),\n    diff = dffv() |&gt; round(3),\n    power = pow() |&gt; round(3)\n  )))\n  out1 &lt;- reactive(\n    out()[, c(input$dmeth, \"power\")] |&gt; setNames(c(\"delta\", \"power\"))\n  )\n\n  xaxis2_text &lt;- reactive(if (input$dmeth == \"std\") {\n    \"~ . \"\n  } else if (input$dmeth == \"diff\") {\n    \"~ . / input$sd0\"\n  } else if (input$dmeth == \"pct\") \"~ . * input$d0/ input$sd0\")\n\n  xintercept_value &lt;- reactive(if (input$dmeth == \"std\") {\n    pwr.t2n.test(n1comp(), n2comp(), sig.level = input$type1, power = .8)$d\n  } else if (input$dmeth == \"diff\") {\n    input$sd0 * pwr.t2n.test(n1comp(), n2comp(), sig.level = input$type1, power = .8)$d\n  } else if (input$dmeth == \"pct\") {\n    pwr.t2n.test(n1comp(), n2comp(), sig.level = input$type1, power = .8)$d * (input$sd0 / input$d0)\n  })\n\n  output$df &lt;- DT::renderDataTable(out(),\n    server = FALSE,\n    filter = \"top\", extensions = \"Buttons\",\n    options = list(\n      paging = FALSE, scrollCollapse = TRUE,\n      buttons = c(\"copy\", \"csv\", \"pdf\"),\n      dom = \"Bt\", scrollX = 300, scrollY = 200\n    )\n  )\n  plot_rmd &lt;- reactive({\n    chart &lt;- ggplot(out1(), aes(x = delta, y = power)) +\n      geom_line() +\n      geom_hline(yintercept = 0.8, color = \"red\") +\n      geom_vline(xintercept = xintercept_value(), color = \"blue\") +\n      scale_y_continuous(\n        name = \"Power\",\n        limits = c(0, 1.0), breaks = seq(0, 1, .1)\n      ) +\n      scale_x_continuous(\n        name = input$dmeth,\n        sec.axis = sec_axis(\n          trans = as.formula(xaxis2_text()),\n          name = \"Std. Effect Units\"\n        )\n      ) +\n      theme_bw()\n    chart\n  })\n  output$plot &lt;- renderPlot(ggplot(out1(), aes(x = delta, y = power)) +\n    geom_line() +\n    geom_hline(yintercept = 0.8, color = \"red\") +\n    geom_vline(xintercept = xintercept_value(), color = \"blue\") +\n    scale_y_continuous(\n      name = \"Power\",\n      limits = c(0, 1.0), breaks = seq(0, 1, .1)\n    ) +\n    scale_x_continuous(\n      name = input$dmeth,\n      sec.axis = sec_axis(\n        trans = as.formula(xaxis2_text()),\n        name = \"Std. Effect Units\"\n      )\n    ) +\n    theme_bw())\n\n\n  state &lt;- reactiveValues(sdel = c(NULL, NULL))\n  sdelv &lt;- reactive(seq(state$sdel[1], state$sdel[2], (state$sdel[2] - state$sdel[1]) / 15))\n\n  observeEvent(input$pct | input$sd0 | input$d0, {\n    print(\"change in pct begets change in sdel\")\n    state$sdel &lt;- input$pct * input$d0 / input$sd0\n  })\n  observeEvent(input$sd0 | input$dff, {\n    print(\"change in pct begets change in sdel\")\n    state$sdel &lt;- input$dff / input$sd0\n  })\n  observeEvent(input$sd0 | input$del, {\n    state$sdel &lt;- input$del\n  })\n  observeEvent(state$sdel, {\n    if (!identical(input$dff / input$sd0, state$sdel)) {\n      updateSliderInput(session, \"dff\", value = state$sdel * input$sd0)\n    }\n    if (!identical(input$del, state$sdel)) {\n      updateSliderInput(session, \"del\", value = state$sdel)\n    }\n    if (!identical(input$pct * input$d0 / input$sd0, state$sdel)) {\n      updateSliderInput(session, \"pct\", value = state$sdel * input$sd0 / input$d0)\n    }\n  })\n  # effsize &lt;- renderText(round(pwr.t2n.test(n1comp(), n2comp(), sig.level = type1(), power = .8)$d, 3))\n  output$ittsizes &lt;- renderText(paste0(\n    \"ITT: N&lt;sub&gt;active&lt;/sub&gt; = \",\n    round(n1itt(), 0), \", N&lt;sub&gt;control&lt;/sub&gt;= \",\n    round(n2itt(), 0)\n  ))\n  output$dropoutsizes &lt;- renderText(paste0(\n    \"Completers: N&lt;sub&gt;active&lt;/sub&gt; = \",\n    round(n1comp(), 0), \", N&lt;sub&gt;control&lt;/sub&gt;= \", round(n2comp(), 0)\n  ))\n  eff_rmd &lt;- reactive(\n    paste0(\n      \"In summary, given the parameters:\\\\\",\n      \"\\nSample size  = \", input$N, \"\\\\\",\n      \"\\ntype 1 error = \", input$type1, \"\\\\\",\n      \"\\ndropout rate = \", input$dropout, \"\\\\\",\n      \"\\ndropin rate = \", input$dropin, \"\\\\\",\n      \"\\nactive to placebo ratio = \", input$ratio, \"\\\\\",\n      \"\\neffect size method = \", input$dmeth, \"\\\\\",\n      \"\\nA sample size of \", input$N, \" has  power of .80 to detect an effect of \",\n      xintercept_value()\n    )\n  )\n  output$eff1 &lt;- renderText(paste0(\n    \"In summary, given the parameters:\",\n    \"\\nSample size  = \", input$N,\n    \"\\ntype 1 error = \", input$type1,\n    \"\\ndropout rate = \", input$dropout,\n    \"\\ndropin rate = \", input$dropin,\n    \"\\nactive to placebo ratio = \", input$ratio,\n    \"\\neffect size method = \", input$dmeth,\n    \"\\nA sample size of \", input$N, \" has  power of .80 to detect an effect of \",\n    xintercept_value()\n  ))\n  # output$eff2 &lt;- renderText(\n  #   paste0(\n  #     \"A sample size of \", input$N, \" has 80% power to detect an effect of \",\n  #     xintercept_value()\n  #   )\n  # )\n  # observeEvent(input$N, {\n  #   browser()\n  # })\n\n\n  output$report &lt;- downloadHandler(\n    filename = \"report.pdf\",\n    content = function(file) {\n      tempReport &lt;- file.path(tempdir(), \"report.Rmd\")\n      file.copy(\"report.Rmd\", tempReport, overwrite = TRUE)\n\n\n      params &lt;- list(\n        table1 = out(),\n        plot1 = plot_rmd(),\n        text1 = eff_rmd()\n      )\n\n      rmarkdown::render(tempReport,\n        output_file = file,\n        params = params,\n        envir = new.env(parent = globalenv())\n      )\n    }\n  )\n}\n\nshinyApp(ui, server)\n\n\n4 setting up modules\n\n\n5 setting up with golem. step by step\nStart with the video\nBuilding a basic Shiny app with Golem - Part I - YouTube\nNotes: rstudio provides a template under new file\n\n\n6 References\nHow to build a professional R Shiny app — part 1 | by Adrian Joseph, PhD | Towards Dev\nHow to build a professional R Shiny app — part 2 | by Adrian Joseph, PhD | Towards Dev\nHow to build a professional R Shiny app — part 3 | by Adrian Joseph, PhD | Towards Dev\nWelcome | Outstanding User Interfaces with Shiny\nWant to make it extensible: try Golem.\nIntroduction | Engineering Production-Grade Shiny Apps"
  },
  {
    "objectID": "posts/setupobs/index.html",
    "href": "posts/setupobs/index.html",
    "title": "Setting up OBS for webcasting",
    "section": "",
    "text": "1 Introduction\nWebcasting for biostatistics is the challenge.\nLets take it one step at a time.\nStart with the open source project OBS.\nWelcome | OBS\nSteps to get started. Work with youtube video.\n(How to Use OBS Studio)[https://www.youtube.com/watch?v=-puA85ciDEM]\n\n\n2 Sections TBD\n\n\n3 Youtube channel\n\n\n4 Background blur\n\n\n5 Keycastr\n\n\n6 High contrast colorscheme\n\n\n7 hotkeys\n\n\n8 audio setup\n\n\n9 video setup\n\n\n10 format ?\n\n\n11 scenes"
  }
]