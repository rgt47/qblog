[
  {
    "objectID": "posts/setupquarto/robh_blog/publications/uranium.html",
    "href": "posts/setupquarto/robh_blog/publications/uranium.html",
    "title": "Sur la pénétration des rayons de Becquerel non déviables par le champ magnétique",
    "section": "",
    "text": "Abstract goes here\nPlus any other information such as supplementary materials.\n\n\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas1900,\n  author = {(Ryy) Glenn Thomas, Ronald and Skłodowska-Curie, Marie},\n  title = {Sur La Pénétration Des Rayons de {Becquerel} Non Déviables\n    Par Le Champ Magnétique},\n  pages = {undefined},\n  date = {1900-03-04},\n  url = {https://focusonr.org/posts/setupquarto/robh_blog/publications/uranium.html},\n  doi = {10.1111/cras.304950},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald, and Marie Skłodowska-Curie. 1900. “Sur\nLa Pénétration Des Rayons de Becquerel Non Déviables Par Le Champ\nMagnétique.” March 4, 1900. https://doi.org/10.1111/cras.304950."
  },
  {
    "objectID": "posts/setupgit/x23/TODO.html",
    "href": "posts/setupgit/x23/TODO.html",
    "title": "Thomas Lab home page",
    "section": "",
    "text": "ReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  pages = {undefined},\n  url = {https://focusonr.org/posts/setupgit/x23/TODO.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. n.d. https://focusonr.org/posts/setupgit/x23/TODO.html."
  },
  {
    "objectID": "posts/power_analysis_shiny_app/app4/archive/TODO.html",
    "href": "posts/power_analysis_shiny_app/app4/archive/TODO.html",
    "title": "Thomas Lab home page",
    "section": "",
    "text": "ReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  pages = {undefined},\n  url = {https://focusonr.org/posts/power_analysis_shiny_app/app4/archive/TODO.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. n.d. https://focusonr.org/posts/power_analysis_shiny_app/app4/archive/TODO.html."
  },
  {
    "objectID": "posts/power_analysis_shiny_app/TODO.html",
    "href": "posts/power_analysis_shiny_app/TODO.html",
    "title": "Thomas Lab home page",
    "section": "",
    "text": "ReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  pages = {undefined},\n  url = {https://focusonr.org/posts/power_analysis_shiny_app/TODO.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. n.d. https://focusonr.org/posts/power_analysis_shiny_app/TODO.html."
  },
  {
    "objectID": "posts/vim_R_package/index.html#notes",
    "href": "posts/vim_R_package/index.html#notes",
    "title": "A simple vim package for interfacing with a REPL",
    "section": "1.1 Notes",
    "text": "1.1 Notes\n2023-08-03 17:37:04\n\ncan’t handle logical variables yet\ncategorical values should be indented\nadd option to change continuous summary to median IQR\nreview atable, furniture, and tableone for features.\nmaybe a “style” option for NEJM, JAMA, lancet"
  },
  {
    "objectID": "posts/share_code_via_docker/index.html",
    "href": "posts/share_code_via_docker/index.html",
    "title": "Simple process for sharing R code via Docker",
    "section": "",
    "text": "1 Introduction\nLets assume you have an Rmd file, say script.Rmd, you’re written to analyze some data. You now want to share the code with a colleague. How to proceed?\nThe simplest option is simply to send him/her the “rmd” file containing the code via email/text/slack/discord/USB drive etc.\nThe next step will be for the code recipient to attempt to load and run the code typically using either of two methods 1) use Rstudio.app to open the file and knit it, or 2) render it from the command line with something like\n&gt; R -e \"render('script.Rmd')\"\nSometimes this works. Frequently however the process will fail for any number of reasons. Ideally to facilitate reproducibility the new user will have as similar a computing environment as the original developer. This can be difficult to achieve especially given the dynamic nature of open source software. For example your colleague may have an outdated version of R installed on their workstation, or their R environment may be missing a necessary package, or the package may be present but its the wrong version, or the program may need to source an additional file thats missing, or load some data that it can’t find.\nAll of these problems go away if instead of sending the program as a standalone text file you send it as a docker image. In this post we’ll walk through the process of dockerizing the R code.\n\n\n\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas2024,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  title = {Simple Process for Sharing {R} Code via {Docker}},\n  pages = {undefined},\n  date = {2024-01-23},\n  url = {https://focusonr.org/posts/share_code_via_docker},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. 2024. “Simple Process for Sharing R\nCode via Docker.” January 23, 2024. https://focusonr.org/posts/share_code_via_docker."
  },
  {
    "objectID": "posts/setupquarto/robh_blog/talks/index.html",
    "href": "posts/setupquarto/robh_blog/talks/index.html",
    "title": "1 Talks I’ve given",
    "section": "",
    "text": "1 Talks I’ve given\n\n\n\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitle\n\n\nVenue\n\n\n\n\n\n\n30 Jun 1901\n\n\nAdventures with Uranium Rays\n\n\nFrench Academy, Paris\n\n\n\n\n\nNo matching items\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  pages = {undefined},\n  url = {https://focusonr.org/posts/setupquarto/robh_blog/talks},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. n.d. https://focusonr.org/posts/setupquarto/robh_blog/talks."
  },
  {
    "objectID": "posts/setupquarto/robh_blog/software/index.html",
    "href": "posts/setupquarto/robh_blog/software/index.html",
    "title": "1 Selected R packages I’ve coauthored",
    "section": "",
    "text": "1 Selected R packages I’ve coauthored\n\n\n\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  pages = {undefined},\n  url = {https://focusonr.org/posts/setupquarto/robh_blog/software},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. n.d. https://focusonr.org/posts/setupquarto/robh_blog/software."
  },
  {
    "objectID": "posts/setupquarto/robh_blog/index.html",
    "href": "posts/setupquarto/robh_blog/index.html",
    "title": "Thomas Lab home page",
    "section": "",
    "text": "Professor Marie Skłodowska-Curie School of Physics & Chemistry École Normale Supérieure Paris, France\n\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  pages = {undefined},\n  url = {https://focusonr.org/posts/setupquarto/robh_blog},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. n.d. https://focusonr.org/posts/setupquarto/robh_blog."
  },
  {
    "objectID": "posts/setupquarto/robh_blog/blog/index.html",
    "href": "posts/setupquarto/robh_blog/blog/index.html",
    "title": "My blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nMy xray experiments\n\n\n\n\n\n\nphysics\n\n\nchemistry\n\n\nradiation\n\n\n\n\n\n\n\n\n\nSep 7, 1902\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\nNo matching items\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  title = {My Blog},\n  pages = {undefined},\n  url = {https://focusonr.org/posts/setupquarto/robh_blog/blog},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. n.d. “My Blog.” https://focusonr.org/posts/setupquarto/robh_blog/blog."
  },
  {
    "objectID": "posts/setupquarto/index.html",
    "href": "posts/setupquarto/index.html",
    "title": "Setting up Quarto",
    "section": "",
    "text": "quarto\n\n\n\n1 Introduction\nQuarto is an extension of the Rmarkdown ecosystem. It leverages the power of knitr andpandoc. From my perspective it provides a number of useful additional tools for literate programming and blogging.\nI’m using quarto for my lab’s home page with an embedded blog. (focusonR).\nThis post will include some of the most useful and interesting quarto tools presented in the context of a Palmer Penguins data set analysis.\nTo start a blog, say qblog, begin by running quarto create-project at the ~/prj level\n❯ quarto create-project qblog --type website:blog\nThis generates a project folder ~/prj/qblog: - cd to ~/prj/qblog/posts/ -   for the first post, create a new directory, saysetupquarto-   cd to~/prj/qblog/posts/setupquarto-   edit theindex.qmdfile and add content.vim index.qmd`\nThe framework for a quarto blog can be quite minimal. For example the following set of files is sufficient to start a useful blog:\n.\n|-- _quarto.yml\n|-- index.qmd\n|-- posts\n|   `-- firstpost\n|       `-- index.qmd\nwith file contents:\n\n\n\n_quarto.yml\n\nproject:\n  type: website\n\n\n\n\n\nindex.qmd\n\n---\ntitle: \"Minimal Blog\"\nlisting:\n  contents: posts\n---\n\n\n\n\n\nposts/firstpost/index.qmd\n\n---\ntitle: \"First post on Blog\"\nauthor: \"Joe Blogger\"\ndate: last-modified\n---\n\nThis is the first post.\n\n\n\nContrast to Rob Heyneman’s template blog:\n&gt; tree -L 1 --charset unicode\n.\n|-- _quarto.yml\n|-- _site\n|-- about\n|-- blog\n|-- header.html\n|-- index.qmd\n|-- mariecurie.png\n|-- publications\n|-- quartoweb.Rproj\n|-- software\n|-- styles.css\n|-- talks\n`-- teaching\nRefererences:\nUseful archive:\nmcanouil/awesome-quarto: A curated list of Quarto talks, tools, examples & articles\nConsider some ideas from\n\nRob Hyndman - Template of quarto website\nEric Ekholm - Modifying the Default Quarto Blog Structure\nAllison Hill - We don’t talk about Quarto\nNick Tierney - Notes on Changing from Rmarkdown/Bookdown to Quarto\n\n\n\n2 After rendering the minimum blog with the default theme. We have the following tree\nTo understand better we need to delve into the _site/site_libs directory. CSS and JS\n.\n|-- _quarto.yml\n|-- _site\n|   |-- index.html\n|   |-- listings.json\n|   |-- posts\n|   |   |-- setup_R_vimtex_ultisnips\n|   |   |   |-- img\n|   |   |   |   `-- vimR.png\n|   |   |   `-- index.html\n|   |   `-- setupgit\n|   |       |-- img\n|   |       |   `-- git.png\n|   |       `-- index.html\n|   |-- search.json\n|   `-- site_libs\n|       |-- bootstrap\n|       |   |-- bootstrap-icons.css\n|       |   |-- bootstrap-icons.woff\n|       |   |-- bootstrap.min.css\n|       |   `-- bootstrap.min.js\n|       |-- clipboard\n|       |   `-- clipboard.min.js\n|       |-- quarto-html\n|       |   |-- anchor.min.js\n|       |   |-- popper.min.js\n|       |   |-- quarto-syntax-highlighting.css\n|       |   |-- quarto.js\n|       |   |-- tippy.css\n|       |   `-- tippy.umd.min.js\n|       |-- quarto-listing\n|       |   |-- list.min.js\n|       |   `-- quarto-listing.js\n|       |-- quarto-nav\n|       |   `-- quarto-nav.js\n|       `-- quarto-search\n|           |-- autocomplete.umd.js\n|           |-- fuse.min.js\n|           `-- quarto-search.js\n|-- index.qmd\n`-- posts\n    |-- setup_R_vimtex_ultisnips\n    |   |-- img\n    |   |   |-- git1.png\n    |   |   `-- vimR.png\n    |   `-- index.qmd\n    `-- setupgit\n        |-- img\n        |   `-- git.png\n        `-- index.qmd\n\n\n\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas2024,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  title = {Setting up {Quarto}},\n  pages = {undefined},\n  date = {2024-01-23},\n  url = {https://focusonr.org/posts/setupquarto},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. 2024. “Setting up Quarto.”\nJanuary 23, 2024. https://focusonr.org/posts/setupquarto."
  },
  {
    "objectID": "posts/setupneovim/index.html",
    "href": "posts/setupneovim/index.html",
    "title": "Setting up a minimal neovim environment for data science code development",
    "section": "",
    "text": "Photo by Nathan Waters on Unsplash \n\n1 NB: study this init.vim with ALE for completion\n/Users/zenn/sbx/dotfiles/config/nvim\n\n\n2 Introduction\nNeovim (a fork of Vim) is a text editor that has several advantages for data science code development. One of its main attractions (besides being open source) is that it has a number of useful plugins to facilitate working on R, python, and julia code. Also, its modal, keyboard-centric system allows text and code manipulation at potentially far greater speed than conventional, mouse-centric, systems.\nIn this post we describe a minimal, yet functional setup to allow a quick start with neovim. We also describe a more extensive setup utilizing several of the neovim-only plugins that together allow neovim to provide IDE style code editing and REPL interaction for the three primary data science coding tools: R, Python, and Julia.\nOur presentation here is for a Macos environment. Appendix one contains required adjustments for a ubuntu linux environment.\n\n\n3 Install the latest stable version of neovim.\nWith minimal effort we can install both the terminal and GUI versions of neovim. The simplist approach is to use homebrew:\n&gt; brew install neovim neovim-qt\nSuggest set up convenience aliases in zsh.\n&gt; alias ng = \"nvim-qt\"\n&gt; alias nt = \"nvim\"\n(mnemonic: the t in nt is for terminal, the g in ng is for GUI)\n\n\n4 Configure neovim\nThe standard location for neovim configuration files on “unix-like” systems is ~/.config/nvim. The main config file is either init.vim (VimL) or init.lua (Lua). In this post we’ll focus on lua based configuration.\nHere is the file hierarchy we’ll construct. In fact all the code in the lua subdirectory could be bundled into the init.lua file, but this approach is clearer and cleaner.\n.\n|-- ginit.vim\n|-- init.lua\n|-- lazy-lock.json\n|-- lua\n|   |-- basics.lua\n|   |-- leap-config.lua\n|   |-- nvim-R-config.lua\n|   |-- nvim-cmp-config.lua\n|   |-- nvim-telescope-config.lua\n|   |-- nvim-tree-config.lua\n|   `-- treesitter-config.lua\n|-- my_snippets\n|   |-- all.snippets\n|   |-- tex\n|   |-- R\n|   |-- python\n|   |-- julia\n|   |-- giles.tex.snipppets\n|   |-- mail.snippets\n|   |-- r.snippets\n|   |-- rmd.snippets\n|   |-- snippets.snippets\n|   |-- tex.snippets\n|   |-- text.snippets\n|   `-- txt.snippets\n|-- spell\n|   |-- en.utf-8.add\n|   `-- en.utf-8.add.spl\nNeovim on its own is limited. We can add the functionality we need using plugins. To install one or more plugins we’ll need a plugin manager. There are several to choose from. We’ll use the Lazy plugin manager for this post. To install the Lazy plugin manager issue the following command at the shell prompt:\n&gt; git clone https://github.com/folke/lazy.nvim.git \\\n   ~/.local/share/nvim/lazy/lazy.nvim\nAdd the following code to init.lua list the plugins needed to be installed from github and “feed” them to Lazy for installation.\nNvim-R, Leap, UltiSnips, and vimtex need additional configuration. The required code is contained in bespoke files under the lua directory.\n\nvim.g.mapleader = \",\"\nvim.g.maplocalleader = \" \"\nvim.opt.rtp:prepend(\"~/.local/share/nvim/lazy/lazy.nvim\")\nrequire('plugins')\nrequire('basics')\nrequire('nvim-tree-config')\nrequire('nvim-R-config')\nrequire('nvim-telescope-config')\nrequire('leap').add_default_mappings()\nrequire('leap-config')\nrequire('lualine').setup()\nList of plugins\n\n\n\n\n\n\nrequire('lazy').setup({\n--\n--minimal data science setup\n--\n'jalvesaq/Nvim-R',\n'lervag/vimtex',\n'SirVer/ultisnips',\n'jalvesaq/vimcmdline',\n--\n--optional utilities\n--\n\"nvim-lualine/lualine.nvim\",\n\"bluz71/vim-moonfly-colors\",\n'junegunn/vim-peekaboo',\n'tpope/vim-commentary',\n'francoiscabrol/ranger.vim',\n'machakann/vim-highlightedyank',\n'tpope/vim-surround',\n'ggandor/leap.nvim',\n--\n--neovim specific\n'nvim-lua/plenary.nvim',\n'nvim-tree/nvim-web-devicons',\n'nvim-tree/nvim-tree.lua',\n'nvim-telescope/telescope.nvim',\n'nvim-treesitter/nvim-treesitter',\n'neovim/nvim-lspconfig',\n})\n\n\n\n5 plugin discussions\n\n\n# basics\n```sh\n\n\n\n\n\n\nlocal map = vim.keymap.set\nlocal opts = {noremap = true}\nvim.cmd([[\n\"    paste registers into terminal\ntnoremap &lt;expr&gt; &lt;C-R&gt; '&lt;C-\\&gt;&lt;C-N&gt;\"'.nr2char(getchar()).'pi'\nset background=dark\ncolorscheme moonfly\nlet $FZF_DEFAULT_COMMAND = 'rg --files --hidden'\nset completeopt=menu,menuone,noinsert,noselect\nset number relativenumber\nset textwidth=80\nset cursorline\nset clipboard=unnamed\nset iskeyword-=_\nset hlsearch\nset splitright\nset hidden\nset incsearch\nset noswapfile\nset showmatch\nset ignorecase\nset smartcase\nset gdefault\nfiletype plugin on\nset encoding=utf-8\nset nobackup\nset nowritebackup\nset updatetime=300\nset signcolumn=yes\nset colorcolumn=80\nset timeoutlen=1000 ttimeoutlen=10\nlet g:UltiSnipsSnippetDirectories = ['~/.config/nvim/my_snippets']\nlet g:UltiSnipsExpandTrigger=\"&lt;tab&gt;\"\nlet g:UltiSnipsJumpForwardTrigger=\"&lt;c-j&gt;\"\nlet g:UltiSnipsJumpBackwardTrigger=\"&lt;c-k&gt;\"\nnnoremap &lt;leader&gt;U &lt;Cmd&gt;call UltiSnips#RefreshSnippets()&lt;CR&gt;\n\nautocmd BufWinEnter,WinEnter term://* startinsert\n\"autocmd TermOpen * exec \"normal! i\"\n]])\nmap('n', ':', ';', opts)\nmap('n', ';', ':', opts)\nmap('n', '&lt;leader&gt;u',':UltiSnipsEdit&lt;cr&gt;', opts)\nmap('n', '&lt;leader&gt;U','&lt;Cmd&gt;call UltiSnips#RefreshSnippets()&lt;cr&gt;', opts)\nmap('n', '&lt;localleader&gt;&lt;localleader&gt;','&lt;C-d&gt;', opts)\nmap('n', '-','$', opts)\nmap('n', '&lt;leader&gt;w','vipgq', opts)\nmap('n', '&lt;leader&gt;v',':edit ~/.config/nvim/init.lua&lt;cr&gt;', opts)\nmap('n', '&lt;leader&gt;n',':edit ~/.config/nvim/lua/basics.lua&lt;cr&gt;', opts)\nmap('n', '&lt;leader&gt;a','ggVG', opts)\nmap('n', '&lt;leader&gt;t',':tab split&lt;cr&gt;', opts)\nmap('n', '&lt;leader&gt;y',':vert sb3&lt;cr&gt;', opts)\nmap('n', '&lt;leader&gt;0',':ls!&lt;CR&gt;:b&lt;Space&gt;', opts)\nmap('n', '&lt;leader&gt;&lt;leader&gt;','&lt;C-w&gt;w', opts)\nmap('n', '&lt;leader&gt;1','&lt;C-w&gt;:b1&lt;cr&gt;', opts)\nmap('n', '&lt;leader&gt;2','&lt;C-w&gt;:b2&lt;cr&gt;', opts)\nmap('n', '&lt;leader&gt;3','&lt;C-w&gt;:b3&lt;cr&gt;', opts)\nmap('t',  'ZZ', \"q('yes')&lt;CR&gt;\", opts)\nmap('t',  'ZQ', \"q('no')&lt;CR&gt;\", opts)\nmap('v',  '-', '$', opts)\nmap('t',  '&lt;leader&gt;0','&lt;C-\\\\&gt;&lt;C-n&gt;&lt;C-w&gt;:ls!&lt;cr&gt;:b&lt;Space&gt;', opts)\nmap('t',  '&lt;Escape&gt;','&lt;C-\\\\&gt;&lt;C-n&gt;', opts)\nmap('t',  ',,','&lt;C-\\\\&gt;&lt;C-n&gt;&lt;C-w&gt;w', opts)\nmap('i',  '&lt;Esc&gt;', '&lt;Esc&gt;`^', opts)\n\n\n\n6 Set up R\n\n\n\n\n\n\nvim.cmd([[\niabb &lt;buffer&gt; x %&gt;%\niabb &lt;buffer&gt; z %in%\nlet R_auto_start = 2\nlet R_enable_comment = 1\nlet R_hl_term = 0\nlet R_clear_line = 1\nlet R_pdfviewer = \"zathura\"\nlet R_assign = 2\nlet R_latexcmd = ['xelatex']\naugroup rmarkdown\nautocmd!\nautocmd FileType rmd,r nnoremap &lt;buffer&gt; &lt;CR&gt;  :call SendLineToR(\"down\")&lt;CR&gt;\nautocmd FileType rmd,r nnoremap &lt;buffer&gt; &lt;space&gt;' :call RMakeRmd(\"default\")&lt;cr&gt;\nautocmd FileType rmd,r noremap &lt;space&gt;i :call RAction(\"dim\")&lt;cr&gt;\nautocmd FileType rmd,r noremap &lt;space&gt;h :call RAction(\"head\")&lt;cr&gt;\nautocmd FileType rmd,r noremap &lt;space&gt;p :call RAction(\"print\")&lt;cr&gt;\nautocmd FileType rmd,r noremap &lt;space&gt;q :call RAction(\"length\")&lt;cr&gt;\nautocmd FileType rmd,r noremap &lt;space&gt;n :call RAction(\"nvim.names\")&lt;cr&gt;\nautocmd FileType rmd,r vmap &lt;buffer&gt; &lt;CR&gt; &lt;localleader&gt;sd\nautocmd FileType rmd,r nmap &lt;buffer&gt; &lt;space&gt;j &lt;localleader&gt;gn\nautocmd FileType rmd,r nmap &lt;buffer&gt; &lt;space&gt;k &lt;localleader&gt;gN\nautocmd FileType rmd,r nmap &lt;buffer&gt; &lt;space&gt;l &lt;localleader&gt;cd\naugroup END\n]])\n\n\n\n\n\n\n\n\n7 Appendix Ubuntu tweaks\n\n\n8 Appendix Isolate configuration files\ngit clone https://github.com/LazyVim/starter ~/.config/LazyVim\nNVIM_APPNAME=LazyVim nvim\n\n\n\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas2024,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  title = {Setting up a Minimal Neovim Environment for Data Science Code\n    Development},\n  pages = {undefined},\n  date = {2024-01-23},\n  url = {https://focusonr.org/posts/setupneovim},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. 2024. “Setting up a Minimal Neovim\nEnvironment for Data Science Code Development.” January 23, 2024.\nhttps://focusonr.org/posts/setupneovim."
  },
  {
    "objectID": "posts/setup_R_vimtex_ultisnips/index.html",
    "href": "posts/setup_R_vimtex_ultisnips/index.html",
    "title": "Setting up R, vimtex and Ultisnips in vim on a Mac",
    "section": "",
    "text": "vim setup"
  },
  {
    "objectID": "posts/setup_R_vimtex_ultisnips/index.html#yaml-header",
    "href": "posts/setup_R_vimtex_ultisnips/index.html#yaml-header",
    "title": "Setting up R, vimtex and Ultisnips in vim on a Mac",
    "section": "6.1 YAML header",
    "text": "6.1 YAML header\nThe RMD file contains a YAML metadata header delineated with the lines “—” above and below. For this example we want to generate a pdf formatted output file.\nThe YAML can be as simple as one line specifying the output as pdf.\n---\noutput: pdf_document\n---\nWhich results in a simple output file as follows:\n\n\n\n\n\nsimple pdf\n\n\nNB. to invoke file completion in vim for the rmd (or quarto) change the vim filetype using the command:\n:set filetype=tex\nthen enter, e.g., \\includegraphics{ or \\input{ followed by C-x C-o. and a pop-up menu with possible completions with appear.\n\n---\ntitle: \"Penguins data analysis\"\nauthor: \"R.G. Thomas\"\ndate: \"2024-01-23\"\noutput:\n  pdf_document:\n    keep_tex: true\n    includes:\nheader-includes:\n    - \\usepackage{lipsum, fancyhdr, titling, currfile}\n    - \\usepackage[export]{adjustbox}\n    - \\pagestyle{fancy}\n    - \\pretitle{\n    - \\begin{flushright} \\includegraphics[width=3cm,valign=c]{sudoku.pdf}\n    - \\end{flushright}\n    - \\noindent\\rule{\\linewidth}{2pt}\\begin{flushleft}\\LARGE}\n    - \\posttitle{\\end{flushleft}\\noindent\\rule{\\linewidth}{2pt}}\n---\n\n::: column-margin\n![simple pdf](penguins/peng_mid.pdf)\n:::\n# Introduction\n\nBegin by loading the palmerpenguins package.\n::: {.cell}\n\n```{.r .cell-code}\ndf1 &lt;- palmerpenguins::penguins\n:::\n\n\n\n# Appendix\n\n\nhttps://www.reddit.com/r/vim/comments/7c7wd9/vim_vimtex_zathura_on_macos/\n\nhttps://stackoverflow.com/questions/40077211/e185-cannot-find-color-scheme\n\nhttps://github.com/morhetz/gruvbox/issues/219\n\nhttps://github.com/junegunn/vim-plug/issues/325\n\nhttps://github.com/dylanaraps/pywal/wiki/Getting-Started\n\nhttps://github.com/dylanaraps/wal.vim\n\nhttps://github.com/dylanaraps/pywal/wiki/Customization\n\nhttps://github.com/lervag/vimtex/issues/1420\n\nhttps://latextools.readthedocs.io/en/latest/install/\n\nhttps://mg.readthedocs.io/latexmk.html\n\nhttps://gist.github.com/LucaCappelletti94/920186303d71c85e66e76ff989ea6b62\n\nhttps://github.com/lervag/vimtex/issues/1420\n\nhttps://latextools.readthedocs.io/en/latest/install/\n\nhttps://github.com/lervag/vimtex/issues/1420\n\nhttps://github.com/lervag/vimtex/issues/940\n\nhttps://github.com/lervag/vimtex/issues/663\n\nhttp://www.math.cmu.edu/~gautam/sj/blog/20140310-zathura-fsearch.html\n\nhttps://gitter.im/SirVer/ultisnips\n\nhttps://github.com/SirVer/ultisnips/issues/1107\n\nhttps://github.com/SirVer/ultisnips/issues/1022\n\nhttps://github.com/SirVer/ultisnips/issues/850\n\nhttps://superuser.com/questions/1115159/how-do-i-install-vim-on-osx-with-python-3-support\n\nhttps://jdhao.github.io/2020/01/05/ultisnips_python_interpolation/\n\nhttp://witkowskibartosz.com/blog/python_snippets_in_vim_with_ultisnips.html#.Xnw9gtP7TRY\n\nhttps://germaniumhq.com/2019/02/07/2019-02-07-Vim-Ultimate-Editing:-UltiSnips/\n\nhttp://vimcasts.org/episodes/ultisnips-python-interpolation/\n\nhttps://wraihan.com/posts/vimtex-and-zathura/\n\n\n# Appendix\n\nUse tab for a) ultisnip snippet navigation (move from one tabstop to the next)\nand b) for navigation forward inside popup menu\n\n```sh\nlet g:UltiSnipsExpandTrigger=\"&lt;C-tab&gt;\"\nlet g:UltiSnipsJumpForwardTrigger=\"&lt;tab&gt;\"\nlet g:UltiSnipsJumpBackwardTrigger=\"&lt;S-tab&gt;\"\n\ninoremap &lt;expr&gt; &lt;tab&gt; pumvisible() ? \"\\&lt;C-n&gt;\" : \"\\&lt;tab&gt;\"\ninoremap &lt;expr&gt; &lt;S-tab&gt; pumvisible() ? \"\\&lt;C-p&gt;\" : \"\\&lt;S-tab&gt;\""
  },
  {
    "objectID": "posts/power_analysis_shiny_app/index.html",
    "href": "posts/power_analysis_shiny_app/index.html",
    "title": "Constructing a medium complexity shiny app for power analysis",
    "section": "",
    "text": "under construction\n\n\n\n1 Introduction\nOne of the most common tasks for a biostatistician is the calculation of a required sample size for a two group comparison based on a two sample Student’s t-test. While common, this exercise is not trivial. There are numerous parameters to be set by the study investigators.\nWant to be able to add CSS to shiny app: read:\n\n\n2 Methods\n\n\n3 Code\n\nlibrary(pacman)\np_load(DT, ggplot2, pwr, shiny,bsicons, bslib, ggplot2, plotly)\nqc = \"question-circle\"\nt1 = \"Sample Size:\"\nt2 = \"Total Sample Size. Both groups combined.\"\nui &lt;- page_sidebar(\n  includeCSS(\"power1_style.css\"),\n  title = \"Power Calculator for Two Group Parallel Designs\",\n  sidebar = sidebar(\n    sliderInput(\"N\", tooltip(list( t1, bs_icon(qc) ), t2 ), 0, 100, 50, 1),\n    sliderInput(\"dropout\", \"Dropout Rate:\", 0, .40, .10),\n    htmlOutput(\"ittsizes\"),\n    htmlOutput(\"dropoutsizes\"),\n    radioButtons(\"dmeth\", \"Method for Effect Size\", c(\n      \"SD Units (Cohen)\" = \"std\",\n      \"Pct reduction\" = \"pct\",\n      \"Diff in change scores\" = \"diff\",\n      \"Change in active group\" = \"active\"\n    )),\n    conditionalPanel(\n      condition = \"input.dmeth == 'std'\",\n      sliderInput(\"del\", \" delta\", 0.0, 1.8, c(.20, 1.8), .1),\n    ),\n    conditionalPanel(\n      condition = \"input.dmeth == 'diff'\",\n      sliderInput(\"dff\", \" diff\", 0, 10.0, c(1, 9), .1),\n    ),\n    conditionalPanel(\n      condition = \"input.dmeth == 'pct'\",\n      sliderInput(\"pct\", \"Pct. Reduction\", 0, 1, c(.1, .9), .1),\n    ),\n    conditionalPanel(\n      condition = \"input.dmeth == 'active'\",\n      sliderInput(\"active\", \"Treatment group change\",\n        min = 1, max = 50, value = c(1, 50)\n      )\n    ),\n    conditionalPanel(\n      condition = \"input.dmeth == 'diff' |\n      input.dmeth == 'pct' | input.dmeth == 'active' \",\n      sliderInput(\"sd0\", \"Placebo SD:\", 1, 20, 5.0, .1),\n      sliderInput(\"d0\", \"Placebo Change:\", 0, 20, 10.0, .1),\n    ),\n    # sliderInput(\"del\", \" delta\", 0.0, 1.8, c(.20, 1.8), .1),\n    # sliderInput(\"dff\", \" diff\", 0, 10.0, c(1, 9), .1),\n    # sliderInput(\"pct\", \"Pct. Reduction\", 0, 1, c(.1, .9), .1),\n    # sliderInput(\"sd0\", \"Placebo SD:\", 1, 20, 5.0, .1),\n    # sliderInput(\"d0\", \"Placebo Change:\", 0, 20, 10.0, .1),\n    # sliderInput(\"d1\", \"Active Change:\", 0, 20, 7.0, .1),\n\n    checkboxInput(\"choice\", \"Additional parameter settings\"),\n    conditionalPanel(\n      condition = \"input.choice == 1\",\n      numericInput(\"ratio\", \"Ratio of active to ctrl:\", 1, .5, 5.0, .5),\n      sliderInput(\"dropin\", \"Drop-in rate:\", 0, .4, 0),\n      numericInput(\"type1\", \"Type one error:\", .05, .01, .2, .005),\n    checkboxInput(\"sided\", \"One sided testing\"),\n    ),\n  ),\n  layout_column_wrap(\n    width = 1 / 2,\n    card(\n      height = 700,\n      full_screen = TRUE, card_header(\"Power\"), plotOutput(\"plot\")\n    ),\n    card(\n      height = 700,\n      full_screen = TRUE, card_header(\"Data\"), DT::dataTableOutput(\"df\")\n    ),\n    card(\n      max_height = 250,\n      card_header(\"Summary\"), verbatimTextOutput(\"eff1\")\n    ),\n    card(\n      max_height = 250,\n      card_header(\"Pdf report\"), downloadButton(\"report\", \"Download report\")\n    )\n  ),\n  # verbatimTextOutput(\"eff0\"),\n  # verbatimTextOutput(\"eff1\"),\n  # verbatimTextOutput(\"eff2\"),\n  # downloadButton(\"report\", \"Download report\")\n)\n\nserver &lt;- function(input, output, session) {\n  delv &lt;- reactive(seq(input$del[1], input$del[2], (input$del[2] - input$del[1]) / 15))\n  dffv &lt;- reactive(delv() * input$sd0)\n  pctv &lt;- reactive(delv() * input$sd0 / input$d0)\n  n1comp &lt;- reactive(input$ratio * input$N / (input$ratio + 1) * ((1 - (input$dropin + input$dropout))))\n  n2comp &lt;- reactive(input$N / (input$ratio + 1) * ((1 - (input$dropin + input$dropout))))\n  n1itt &lt;- reactive(input$ratio * input$N / (input$ratio + 1))\n  n2itt &lt;- reactive(input$N / (input$ratio + 1))\n\n  pow &lt;- reactive(sapply(\n    delv(),\n    function(x) pwr.t2n.test(n1comp(), n2comp(), d = x)$power\n  ))\n\n  powpct &lt;- reactive(sapply(\n    pctv(),\n    function(x) pwr.t2n.test(n1comp(), n2comp(), d = x * input$d0 / input$sd0)$power\n  ))\n\n  out &lt;- reactive(data.frame(cbind(\n    std = delv() |&gt; round(3),\n    pct = pctv() |&gt; round(3),\n    diff = dffv() |&gt; round(3),\n    power = pow() |&gt; round(3)\n  )))\n  out1 &lt;- reactive(\n    out()[, c(input$dmeth, \"power\")] |&gt; setNames(c(\"delta\", \"power\"))\n  )\n\n  xaxis2_text &lt;- reactive(if (input$dmeth == \"std\") {\n    \"~ . \"\n  } else if (input$dmeth == \"diff\") {\n    \"~ . / input$sd0\"\n  } else if (input$dmeth == \"pct\") \"~ . * input$d0/ input$sd0\")\n\n  xintercept_value &lt;- reactive(if (input$dmeth == \"std\") {\n    pwr.t2n.test(n1comp(), n2comp(), sig.level = input$type1, power = .8)$d\n  } else if (input$dmeth == \"diff\") {\n    input$sd0 * pwr.t2n.test(n1comp(), n2comp(), sig.level = input$type1, power = .8)$d\n  } else if (input$dmeth == \"pct\") {\n    pwr.t2n.test(n1comp(), n2comp(), sig.level = input$type1, power = .8)$d * (input$sd0 / input$d0)\n  })\n\n  output$df &lt;- DT::renderDataTable(out(),\n    server = FALSE,\n    filter = \"top\", extensions = \"Buttons\",\n    options = list(\n      paging = FALSE, scrollCollapse = TRUE,\n      buttons = c(\"copy\", \"csv\", \"pdf\"),\n      dom = \"Bt\", scrollX = 300, scrollY = 200\n    )\n  )\n  plot_rmd &lt;- reactive({\n    chart &lt;- ggplot(out1(), aes(x = delta, y = power)) +\n      geom_line() +\n      geom_hline(yintercept = 0.8, color = \"red\") +\n      geom_vline(xintercept = xintercept_value(), color = \"blue\") +\n      scale_y_continuous(\n        name = \"Power\",\n        limits = c(0, 1.0), breaks = seq(0, 1, .1)\n      ) +\n      scale_x_continuous(\n        name = input$dmeth,\n        sec.axis = sec_axis(\n          trans = as.formula(xaxis2_text()),\n          name = \"Std. Effect Units\"\n        )\n      ) +\n      theme_bw()\n    chart\n  })\n  output$plot &lt;- renderPlot(ggplot(out1(), aes(x = delta, y = power)) +\n    geom_line() +\n    geom_hline(yintercept = 0.8, color = \"red\") +\n    geom_vline(xintercept = xintercept_value(), color = \"blue\") +\n    scale_y_continuous(\n      name = \"Power\",\n      limits = c(0, 1.0), breaks = seq(0, 1, .1)\n    ) +\n    scale_x_continuous(\n      name = input$dmeth,\n      sec.axis = sec_axis(\n        trans = as.formula(xaxis2_text()),\n        name = \"Std. Effect Units\"\n      )\n    ) +\n    theme_bw())\n\n\n  state &lt;- reactiveValues(sdel = c(NULL, NULL))\n  sdelv &lt;- reactive(seq(state$sdel[1], state$sdel[2], (state$sdel[2] - state$sdel[1]) / 15))\n\n  observeEvent(input$pct | input$sd0 | input$d0, {\n    print(\"change in pct begets change in sdel\")\n    state$sdel &lt;- input$pct * input$d0 / input$sd0\n  })\n  observeEvent(input$sd0 | input$dff, {\n    print(\"change in pct begets change in sdel\")\n    state$sdel &lt;- input$dff / input$sd0\n  })\n  observeEvent(input$sd0 | input$del, {\n    state$sdel &lt;- input$del\n  })\n  observeEvent(state$sdel, {\n    if (!identical(input$dff / input$sd0, state$sdel)) {\n      updateSliderInput(session, \"dff\", value = state$sdel * input$sd0)\n    }\n    if (!identical(input$del, state$sdel)) {\n      updateSliderInput(session, \"del\", value = state$sdel)\n    }\n    if (!identical(input$pct * input$d0 / input$sd0, state$sdel)) {\n      updateSliderInput(session, \"pct\", value = state$sdel * input$sd0 / input$d0)\n    }\n  })\n  # effsize &lt;- renderText(round(pwr.t2n.test(n1comp(), n2comp(), sig.level = type1(), power = .8)$d, 3))\n  output$ittsizes &lt;- renderText(paste0(\n    \"ITT: N&lt;sub&gt;active&lt;/sub&gt; = \",\n    round(n1itt(), 0), \", N&lt;sub&gt;control&lt;/sub&gt;= \",\n    round(n2itt(), 0)\n  ))\n  output$dropoutsizes &lt;- renderText(paste0(\n    \"Completers: N&lt;sub&gt;active&lt;/sub&gt; = \",\n    round(n1comp(), 0), \", N&lt;sub&gt;control&lt;/sub&gt;= \", round(n2comp(), 0)\n  ))\n  eff_rmd &lt;- reactive(\n    paste0(\n      \"In summary, given the parameters:\\\\\",\n      \"\\nSample size  = \", input$N, \"\\\\\",\n      \"\\ntype 1 error = \", input$type1, \"\\\\\",\n      \"\\ndropout rate = \", input$dropout, \"\\\\\",\n      \"\\ndropin rate = \", input$dropin, \"\\\\\",\n      \"\\nactive to placebo ratio = \", input$ratio, \"\\\\\",\n      \"\\neffect size method = \", input$dmeth, \"\\\\\",\n      \"\\nA sample size of \", input$N, \" has  power of .80 to detect an effect of \",\n      xintercept_value()\n    )\n  )\n  output$eff1 &lt;- renderText(paste0(\n    \"In summary, given the parameters:\",\n    \"\\nSample size  = \", input$N,\n    \"\\ntype 1 error = \", input$type1,\n    \"\\ndropout rate = \", input$dropout,\n    \"\\ndropin rate = \", input$dropin,\n    \"\\nactive to placebo ratio = \", input$ratio,\n    \"\\neffect size method = \", input$dmeth,\n    \"\\nA sample size of \", input$N, \" has  power of .80 to detect an effect of \",\n    xintercept_value()\n  ))\n  # output$eff2 &lt;- renderText(\n  #   paste0(\n  #     \"A sample size of \", input$N, \" has 80% power to detect an effect of \",\n  #     xintercept_value()\n  #   )\n  # )\n  # observeEvent(input$N, {\n  #   browser()\n  # })\n\n\n  output$report &lt;- downloadHandler(\n    filename = \"report.pdf\",\n    content = function(file) {\n      tempReport &lt;- file.path(tempdir(), \"report.Rmd\")\n      file.copy(\"report.Rmd\", tempReport, overwrite = TRUE)\n\n\n      params &lt;- list(\n        table1 = out(),\n        plot1 = plot_rmd(),\n        text1 = eff_rmd()\n      )\n\n      rmarkdown::render(tempReport,\n        output_file = file,\n        params = params,\n        envir = new.env(parent = globalenv())\n      )\n    }\n  )\n}\n\nshinyApp(ui, server)\n\n\n4 setting up modules\n\n\n5 setting up with golem. step by step\nStart with the video\nBuilding a basic Shiny app with Golem - Part I - YouTube\nNotes: rstudio provides a template under new file\n\n\n6 References\nHow to build a professional R Shiny app — part 1 | by Adrian Joseph, PhD | Towards Dev\nHow to build a professional R Shiny app — part 2 | by Adrian Joseph, PhD | Towards Dev\nHow to build a professional R Shiny app — part 3 | by Adrian Joseph, PhD | Towards Dev\nWelcome | Outstanding User Interfaces with Shiny\nWant to make it extensible: try Golem.\nIntroduction | Engineering Production-Grade Shiny Apps\n\n\n\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas2024,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  title = {Constructing a Medium Complexity Shiny App for Power\n    Analysis},\n  pages = {undefined},\n  date = {2024-01-23},\n  url = {https://focusonr.org/posts/power_analysis_shiny_app},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. 2024. “Constructing a Medium\nComplexity Shiny App for Power Analysis.” January 23, 2024. https://focusonr.org/posts/power_analysis_shiny_app."
  },
  {
    "objectID": "posts/power_analysis_shiny_app/app4/penguins.html",
    "href": "posts/power_analysis_shiny_app/app4/penguins.html",
    "title": "Penguins",
    "section": "",
    "text": "A simple example based on Allison Horst’s Palmer Penguins dataset. Here we look at how penguin body mass varies across both sex and species (use the provided inputs to filter the dataset by bill length and island):\n\nviewof bill_length_min = Inputs.range(\n  [32, 50], \n  {value: 35, step: 1, label: \"Bill length (min):\"}\n)\nviewof islands = Inputs.checkbox(\n  [\"Torgersen\", \"Biscoe\", \"Dream\"], \n  { value: [\"Torgersen\", \"Biscoe\"], \n    label: \"Islands:\"\n  }\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlotData\n\n\n\nPlot.rectY(filtered, \n  Plot.binX(\n    {y: \"count\"}, \n    {x: \"body_mass_g\", fill: \"species\", thresholds: 20}\n  ))\n  .plot({\n    facet: {\n      data: filtered,\n      x: \"sex\",\n      y: \"species\",\n      marginRight: 80\n    },\n    marks: [\n      Plot.frame(),\n    ]\n  }\n)\n\n\n\n\n\n\n\n\n\nInputs.table(filtered)\n\n\n\n\n\n\n\n\n\n\ndata = FileAttachment(\"palmer-penguins.csv\").csv({ typed: true })\n\n\n\n\n\n\n\nfiltered = data.filter(function(penguin) {\n  return bill_length_min &lt; penguin.bill_length_mm &&\n         islands.includes(penguin.island);\n})\n\n\n\n\n\n\n\n\n\n\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  title = {Penguins},\n  pages = {undefined},\n  url = {https://focusonr.org/posts/power_analysis_shiny_app/app4/penguins.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. n.d. “Penguins.” https://focusonr.org/posts/power_analysis_shiny_app/app4/penguins.html."
  },
  {
    "objectID": "posts/minimalist_edc_app/index.html",
    "href": "posts/minimalist_edc_app/index.html",
    "title": "Minimal EDC in Shiny",
    "section": "",
    "text": "purrr\n\n\n\n1 Introduction\nOne of the essential tools for the conduct of a randomized clinical trial (or any scientific experiment involving the collection of data) is the availability of a high quality electronic data capture system.\nNumerous software systems have been developed over the past 30 plus years, both commercial and open-source, that provide a platform for scientific data capture e.g. the RedCap system @Harris2009a, or the Lorris system @Das2011. These systems vary in design, and complexity and have differing requirements for the availability of professional support staff for development and maintenance. The system presented here is targeted at academic research groups who typically require a customizable, easily managed, secure yet affordable system.\nThis paper describes a data capture system designed and developed to meet the following requirements:\n\nSecure\nFast project setup\nExtensive use of open-source tools\nRequires minimum to no programming for setup and maintainance. i.e. able to be managed by teams without dedicated programming staff\nFast project close-out and data export\nIntegrated reporting\nHighly customizable validation definition\nAuditable\nCFR 21 Part 11 compliant\nICH guidelines compliant\n\nAn additional, secondary set of design goals includes\n\nQuality support tools:\n\ntools for onsite monitoring\ntools for safety monitoring\n\ntools for AE coding\n\ntools for medication coding The open-source tools employed for this system are:\n\nR\nshiny\ngoogle docs\ngoogle sheets\nsql-lite\nrmarkdown\nConsider each of the above design goals in turn.\n\nSecure. Any EDC system connected to the internet must be secure at the part 11 level at a minimum. This includes encryption and authentication as well as the use of secure servers.\n\n\n\n\n2 Methods\n\n\n3 Results\n\n\n4 References\n\n\n5 Appendix\nArchive directories\n~/sandbox/edc47\n~/prj/c060/a32\n~/prj/c060/a201\n\n\n\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas2024,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  title = {Minimal {EDC} in {Shiny}},\n  pages = {undefined},\n  date = {2024-01-23},\n  url = {https://focusonr.org/posts/minimalist_edc_app},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. 2024. “Minimal EDC in Shiny.”\nJanuary 23, 2024. https://focusonr.org/posts/minimalist_edc_app."
  },
  {
    "objectID": "posts/install_mint_on_macbook/index.html",
    "href": "posts/install_mint_on_macbook/index.html",
    "title": "Install Linux Mint on a Macbook Pro",
    "section": "",
    "text": "1 Introduction\nTo get started download the latest Linux Mint “iso” file and “burn” it onto a USB drive. One way to accomplish this is to use a “mac” either desktop or laptop with macos installed. Wifi or ethernet internet connectivity is required, and at least one external port.\nNB: as of 1/4/24 not working are: * wifi broadband * audio * touch bar ## Install Mint on a macbook pro\nThe specific goal of this “DIY” project is to refurbish a seven year old macbook pro laptop with a contemporary linux operating system. The OS we’ll focus on for this post is Linux Mint 21.2. Why Mint? Well, as its been, “since the beginning” of the linux era (circa 1993) the main challenge to installing a linux distribution on almost any PC or mac is wrestling with the hardware drivers: notably video, audio, trackpad and power management drivers. The Mint distro provides the drivers needed for our target macbook pro, making the install much, much more straightforward.\nThe target machine is a 2016 13-inch MacBook Pro with four Thunderbolt 3 Ports.\nTo start the process download an iso file from the Mint website. The current “Victoria” version of Mint iso file is 3.03 GB in size. The “Cinnamon” edition is recommended.\nOnce downloaded also download the associated sha256sum.txt file.\nTo check the integrity of your local ISO file, generate its SHA256 checksum and compare it to the content of the sha256sum.txt file:\n&gt; sha256sum -b linuxmint-21.2-cinnamon-64bit.iso\nWe can transfer the iso file to a USB flash drive using one of several methods. On macos we suggest using the app balanaEtcher. You can download balanaEtcher here\nInsert the bootable USB flash drive into the target macbook and reboot. Hold the ALT key while the machine reboots and you’ll be presented with a screen offering boot drive options. Select the icon for the USB drive. A grub menu will appear.\n\n\nGNU GRand Unified Bootloader (GRUB). “When your Linux operating system starts up, GRUB is the first program that runs. It loads the kernel of the operating system, and then the kernel loads the rest of the operating system, including the shell, the desktop environment, and other operating system features.”  codecademy \nFrom the Grub menu choose Start Linux Mint 21.2 Cinnamon 64-bit. and the Mint install program will start.\nA linux mint desktop will appear allowing you to “test drive” Mint or to continue the install by clicking the icon labeled “install Linux Mint”.\nA setup dialog will start. Select, in sequence\n\nLanguage (English for us),\nNetwork (suggest skip),\ncodexes (suggest skip),\noptions for a “fresh install” or “something else” (choose fresh to devote full hard drive to Mint).\nLocation (Pacific region for us),\nname a user who will have administrator privilidges, a hostname, and assign a password.\n\nThe install process will proceed. When complete connect the target machine to the Internet. If you have ethernet connectivity plug the cable directly into the target macbook and Mint should connect automatically to the internet. For wireless wifi access use a supported modem e.g. Panda Wireless modem. Panda is supported since Mint 21.2 has Ralink RT5372 drivers installed. (see appendix for Broadcom install instructions)\nThe final hardware related step is to add a second monitor, if available, via HDMI.\nThats it. Reboot and login with the admin username and password you provided earlier.\n\n\n2 Setup configuration\nAfter logging in for the first time start by configuring the displays, the keyboard, the touchpad and the backup software.\n\nOpen Display menu (press command key to open menu and search for “display”). Select Primary monitor with 2560x1440 as the resolution for both monitors. Set Monitor scale at 200% to increase default font size in apps. Second monitor should be set at 3840x2160 (200%)\nTurn on the pre-installed backup program, Timeshift, to provide hourly snapshots.\nSet keyboard and trackpad preferences:\n\nOpen Mouse and Touchpad in settings. Turn on Tap to click and Reverse scroll.\nOpen Keyboard &gt; Layouts &gt; Options &gt; Caps Lock behavior and select Swap Esc and Caps-Lock\n\nUpdate base pre-installed software.\n\n&gt; sudo apt update\n&gt; sudo apt upgrade\n\n\n3 Additional Software setup\n\nInstall basic utilities ssh, git, wget, curl, zsh, vim, as well as major applications tex, qutebrowser, firefox and zathura with one command:\n\n&gt; sudo apt update sudo apt install  ssh zsh  curl git texlive-full\n dropbox vim zathura  qutebrowser firefox  -y\n\nInstall Zotero and Dropbox. The easiest way to install Zotero and Dropbox is with the Mint Software    Manager aka Flatpak.\nInstall oh-my-zsh and oh-my-zsh plugins z and z-autosuggestions\n\nsh -c \"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\ngit clone https://github.com/zsh-users/zsh-autosuggestions \\\n   ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\ngit clone https://github.com/agkozak/zsh-z \\\n   ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-z\nDon’t forget to edit .zshrc to include z and z-autosuggestions in the plugins list.\nRun bash shell script ~/Dropbox/dotfiles/set_up_links.sh to set up symbolic links (e.g. ln -s ~/Dropbox/prj ~/prj). See Appendix 1 below for details.\n\n\n4 Niceties\n\nSet up Zotero syncing.\n\n\n\n5 Appendix 1. Script to set up links from local Home to Dropbox\nset_up_links.sh\n#!/bin/zsh\nff=(\".zshrc\" \".vimrc\" \".local\" \".vim\" \".config\")\nfor P in \"${ff[@]}\"\ndo\necho \"create  a link for Dropbox/dotfiles version of $P in Home\"\n    ln -v -s \"$HOME/Dropbox/dotfiles/$P\" \"$HOME/$P\"\ndone\n\ndd=(\"sbx\" \"bin\" \"docs\" \"prj\" \"work\" \"shr\")\nfor P in \"${dd[@]}\"\ndo\n    echo \"create  a link for Dropbox working directories  $P in Home\"\n    ln -v -s \"$HOME/Dropbox/$P\" \"$HOME/$P\"\ndone\n\n\n6 Appendix 2. Install Broadcom driver for wifi.\nTBD\n\n\n7 Appendix 3. Copy files to new Mint machine\nConnect to new machine via ssh from mac laptop\nFirst on the new machine (zz)\nzz&gt; sudo apt install ssh\nzz&gt; ifconfig\nget IP for target, say 10.0.1.196\nmac&gt; ssh z@10.0.1.196\nmac&gt; scp .vimrc z@10.0.1.196:~\n\n\n\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas2024,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  title = {Install {Linux} {Mint} on a {Macbook} {Pro}},\n  pages = {undefined},\n  date = {2024-01-23},\n  url = {https://focusonr.org/posts/install_mint_on_macbook},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. 2024. “Install Linux Mint on a Macbook\nPro.” January 23, 2024. https://focusonr.org/posts/install_mint_on_macbook."
  },
  {
    "objectID": "posts/extend_shiny_app/index.html",
    "href": "posts/extend_shiny_app/index.html",
    "title": "Extend Shiny power app to five tabs",
    "section": "",
    "text": "Shiny"
  },
  {
    "objectID": "posts/extend_shiny_app/index.html#modules",
    "href": "posts/extend_shiny_app/index.html#modules",
    "title": "Extend Shiny power app to five tabs",
    "section": "2.1 Modules",
    "text": "2.1 Modules"
  },
  {
    "objectID": "posts/extend_shiny_app/index.html#golem",
    "href": "posts/extend_shiny_app/index.html#golem",
    "title": "Extend Shiny power app to five tabs",
    "section": "2.2 Golem",
    "text": "2.2 Golem"
  },
  {
    "objectID": "posts/extend_shiny_app/index.html#package",
    "href": "posts/extend_shiny_app/index.html#package",
    "title": "Extend Shiny power app to five tabs",
    "section": "2.3 Package",
    "text": "2.3 Package"
  },
  {
    "objectID": "posts/dockerize_compose/index.html",
    "href": "posts/dockerize_compose/index.html",
    "title": "A Concise Strategy to get your Shiny App Online, Securely and Continuously Updated.",
    "section": "",
    "text": "Photo by Nathan Waters"
  },
  {
    "objectID": "posts/dockerize_compose/index.html#hosting",
    "href": "posts/dockerize_compose/index.html#hosting",
    "title": "A Concise Strategy to get your Shiny App Online, Securely and Continuously Updated.",
    "section": "2.1 Hosting",
    "text": "2.1 Hosting\n\n\n\nData flow\n\n\nFigure 2 illustrates the tools we’ll use and the flow of program and configuration files. In order to host power1_app online we’ll need to complete the following tasks:\n\nGenerate a virtual server with a firewall on EC2.\nObtain a static IPv4 address (to identify the server online)\nObtain a custom domain name (name to associate with static IP address) from a domain registration provider.\nInstall and configure a webserver (tool to interact with https protocol requests )\nObtain and install an TLS (transport layer security) security certificate (to allow encrypted communication between the server and other machines on the network)\nConfigure authentication for web site.\nconfigure a reverse proxy method (translate https, port 443, requests to Shiny, port 3838 requests)\n\n\n\n“What Is An SSL/TLS Certificate?\nAn SSL/TLS certificate is a digital object that allows systems to verify the identity & subsequently establish an encrypted network connection to another system using the Secure Sockets Layer/Transport Layer Security (SSL/TLS) protocol. Certificates are used within a cryptographic system known as a public key infrastructure (PKI). PKI provides a way for one party to establish the identity of another party using certificates if they both trust a third-party - known as a certificate authority. SSL/TLS certificates thus act as digital identity cards to secure network communications, establish the identity of websites over the Internet as well as resources on private networks.”\n reference"
  },
  {
    "objectID": "posts/dockerize_compose/index.html#select-a-hosting-service",
    "href": "posts/dockerize_compose/index.html#select-a-hosting-service",
    "title": "A Concise Strategy to get your Shiny App Online, Securely and Continuously Updated.",
    "section": "2.2 Select a hosting service",
    "text": "2.2 Select a hosting service\nThere are a number of cloud based server options: Microsoft Azure, Oracle, Google Cloud, Amazon AWS EC2, Digital Ocean to name a few. Each has their own approach to setting up a custom virtual server. Several have free or low-cost service tiers available.\nAn overview of the process using AWS EC2 follows. Detailed instructions for setting up a server on EC2, both via the console and the command line interface are covered in an earlier post ( here ) and ( here ).\nStep 0. Create an account or sign in to the AWS EC2 dashboard.\nStep 1. Set up an interactive environment with AWS server. This entails:\n\ndefine ssh key-pair.\nconfigure firewall.\nobtain static IP.\nobtain domain name.\nselect an instance (AMI, type and disk size), generate and launch server.\n\nOnce the server is available, connect via ssh, and login,\nThe only software necessary to install is docker (assuming it wasn’t installed in the server setup process). Install with the following commands:\nsudo snap install docker.io\nOnce the host is set up and the requisite software installed, we’ll have accomplished items 1, 2, and 3 from our hosting list above. i.e. a customized virtual server wtih a static IP address, with a unique domain name and firewall in place."
  },
  {
    "objectID": "posts/dockerize_compose/index.html#docker",
    "href": "posts/dockerize_compose/index.html#docker",
    "title": "A Concise Strategy to get your Shiny App Online, Securely and Continuously Updated.",
    "section": "3.1 Docker",
    "text": "3.1 Docker\n\n\n  Photo by Ian Taylor on Unsplash \nWe’ll use docker to access Shiny, and docker-compose to access Caddy, our webserver. The first file is the dockerfile. Here is our minimal dockerfile:\n\nshow the Dockerfile code\nFROM rocker/shiny:4.2.0\nRUN rm -rf /srv/shiny-server\nCOPY /power1_shiny/* /srv/shiny-server/\nUSER shiny\nCMD [\"/usr/bin/shiny-server\"]\n\nThis configuration file instructs Docker to build a container based on a Rocker/Shiny image (constructed as a ubuntu image with R and Shiny installed), then copy the power1_shiny/app.R code into the container and finally launch Shiny on (default) port 3838. We placed the power1_app/app.R code in the default location /srv/shiny-server we only need to start the server and it will find the shiny program.\nNote: We placed the power1_shiny/app.R code in the default location /srv/shiny-server so we only need to start the Shiny server and it will find the shiny program\nStart by building and pushing the image to the gitlab container registry.\n# login to gitlab\n\ncat gitlab_access_token | docker login \\\nregistry.gitlab.com -u rgt47 --password-stdin\n\ndocker build -t \\\nregistry.gitlab.com/rgt47/power1_app/power1_image:v1.0 \\\n        --platform linux/x86_64 .\ndocker push \\\nregistry.gitlab.com/rgt47/power1_app/power1_image:v1.0"
  },
  {
    "objectID": "posts/dockerize_compose/index.html#caddy",
    "href": "posts/dockerize_compose/index.html#caddy",
    "title": "A Concise Strategy to get your Shiny App Online, Securely and Continuously Updated.",
    "section": "3.2 Caddy",
    "text": "3.2 Caddy\nA Caddy web server configuration file (default name Caddyfile)\nWe’ll use Caddy as our web server. Caddy is an open-source tool that has the very useful feature of automating the acquisition and installing of an SSL certificate. An SSL cert is required by most browsers to use the encrypted communication protocol https.\nWe use the caddy configuration file to specify three critical things.\n\nthe site domain name.\nthe ‘reverse proxy’ map that redirects requests to port 443 (ssl port) to port 3838 (Shiny port).\nadd login credentials for all users (e.g. bob/vanilla47):\n\nOur barebones Caddyfile looks like this:\n\nShow the Caddyfile code\n# use caddy auth tool to generate a password via the `bcrypt` algorithm.\n# &gt; caddy hash-password --plaintext hiccup\n\nrgtlab.org {\nbasicauth /power1/* {\n    Bob $2a$14$Zkx19XLiW6VYouLHR5NmfOFU0z2GTNmpkT/5qqR7hx4IjWJPDhjvG\n}\n    root * /srv\n    handle_path /power1/* {\n        reverse_proxy power1:3838\n    }\n    file_server\n}\n\nWe can accomplish what we need for items 4, 5, and 7 through the Caddyfile.\nNote:\n\nrgtlab.org is our domain name\nhandle_path maps all https requests to port 3838 where Shiny is listening.\n\nProviding our servers domain name, rgtlab.org is sufficient to initiate an exchange with the letsencrypt service to generates an SSL certificate."
  },
  {
    "objectID": "posts/dockerize_compose/index.html#docker-compose",
    "href": "posts/dockerize_compose/index.html#docker-compose",
    "title": "A Concise Strategy to get your Shiny App Online, Securely and Continuously Updated.",
    "section": "3.3 Docker Compose",
    "text": "3.3 Docker Compose\nAnd a third file is a config file for Docker Compose. Docker Compose is a Docker module that provides a framework for running multi-container applications. This docker compose YAML file instructs Docker to containerize our Shiny app, pull a caddy webserver image from Docker Hub and create a local network for the two containers to communicate in.\nA Docker-compose configuration file (default name docker-compose.yml).\nThe docker-compose.yml file:\n\ndocker-compose.yml. Show the code\nversion: \"3.7\"\n\nservices:\n  power1:\n    image: registry.gitlab.com/rgt47/power1_app/power1_image:v1.0\n    restart: unless-stopped\n    expose:\n      - \"3838\"\n  caddy:\n    image: caddy:2.6.4-alpine\n    restart: always\n    ports:\n      - \"443:443\"\n    volumes:\n      - $PWD/Caddyfile:/etc/caddy/Caddyfile\n      - $PWD/site:/srv\n      - caddy_data:/data\n      - caddy_config:/config\n    depends_on:\n      - power1\n    environment:\n      - HOST=\"rgtlab.org\"\n      - EMAIL=\"rgthomas@ucsd.edu\"\nvolumes:\n  caddy_data:\n  caddy_config:"
  },
  {
    "objectID": "posts/dockerize_compose/index.html#landing-page",
    "href": "posts/dockerize_compose/index.html#landing-page",
    "title": "A Concise Strategy to get your Shiny App Online, Securely and Continuously Updated.",
    "section": "3.4 Landing Page",
    "text": "3.4 Landing Page\nLastly, we need an html file, index.html in a subdirectory named site that provides the landing page for our server.\n\nindex.html. Show the code\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\"&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n    &lt;title&gt;Power Calculators&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"https://unpkg.com/bulma@0.9.0/css/bulma.min.css\" /&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=\"app\"&gt;\n      &lt;section class=\"hero is-small\"&gt;\n        &lt;div class=\"hero-body\"&gt;\n          &lt;div class=\"container has-text-centered\"&gt;\n            &lt;h1 class=\"title\"&gt;RGT Lab Power Calculators&lt;/h1&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/section&gt;\n            &lt;hr&gt;\n\n            &lt;div class=\"columns\"&gt;\n              &lt;div class=\"column is-4 is-offset-1\"&gt;\n      &lt;img src=\"https://github.com/rgt47/power0/blob/master/power1.png?raw=true\"\n        width=\"200\" height=\"250\"  ”float: left; padding: 3px 3px 0px 3px;” &gt;\n              &lt;/div&gt;\n              &lt;div class=\"column is-6\"&gt;\n                &lt;h1 class=\"title\"&gt; Power1 App &lt;/h1&gt;\n                &lt;p&gt; Power for two-sample t-test &lt;/p&gt;\n                &lt;br&gt;\n                &lt;a href=\"./rebecca/\" class=\"button is-info\"&gt;Go to app&lt;/a&gt;\n              &lt;/div&gt;\n            &lt;/div&gt;\n\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n\nAt this point our power1_app repo looks like this:\n.\n├── Caddyfile\n├── Dockerfile\n├── docker-compose.yml\n└── site\n    └── index.html"
  },
  {
    "objectID": "posts/dockerize_compose/index.html#tip-1.-docker-on-m1-macbook.",
    "href": "posts/dockerize_compose/index.html#tip-1.-docker-on-m1-macbook.",
    "title": "A Concise Strategy to get your Shiny App Online, Securely and Continuously Updated.",
    "section": "5.1 Tip 1. Docker on M1 macbook.",
    "text": "5.1 Tip 1. Docker on M1 macbook.\nTo get docker functioning properly with rocker images on M1 Mac desktop use --platform option.\ndocker build -t power1_shiny --platform linux/x86_64 .\ndocker run -d -p 80:3838 --platform linux/x86_64 power1_shiny"
  },
  {
    "objectID": "posts/dockerize_compose/index.html#tip-2-add-user-to-docker-group-on-server.",
    "href": "posts/dockerize_compose/index.html#tip-2-add-user-to-docker-group-on-server.",
    "title": "A Concise Strategy to get your Shiny App Online, Securely and Continuously Updated.",
    "section": "5.2 Tip 2 add user to docker group on server.",
    "text": "5.2 Tip 2 add user to docker group on server.\nAdd ubuntu to the docker group to allow docker to run without sudo.\nsudo usermod -aG docker ${USER}"
  },
  {
    "objectID": "posts/dockerize_compose/index.html#tip-3-ssh-config-file.",
    "href": "posts/dockerize_compose/index.html#tip-3-ssh-config-file.",
    "title": "A Concise Strategy to get your Shiny App Online, Securely and Continuously Updated.",
    "section": "5.3 Tip 3 ssh config file.",
    "text": "5.3 Tip 3 ssh config file.\nFor convenience, construct a config file in ~/.ssh as:\n\n\n\nHost rgtlab.org\nHostName 13.57.139.31 # static IP\nUser ubuntu # default user on ubuntu server\nPort 22  # the default port ssh uses\nIdentityFile ~/.ssh/power1_app.pem\nthen you can ssh into the new server with\nsh&gt; ssh rgtlab.org"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Thomas lab",
    "section": "",
    "text": "Director: Professor Ronald G. Thomas School of Public Health UC, San Diego La Jolla, California\nFocused on new and interesting data science technologies."
  },
  {
    "objectID": "about/index.html",
    "href": "about/index.html",
    "title": "Thomas Lab",
    "section": "",
    "text": "twitter\n  \n  \n    \n     Github\n  \n\n      \nThe Thomas Lab in the the Herbert Wertheim School of Public Health and Human Longevity Science at UC San Diego focuses on developing data science methodology and educational materials."
  },
  {
    "objectID": "posts/config_term/index.html",
    "href": "posts/config_term/index.html",
    "title": "Configure the command line for data science development",
    "section": "",
    "text": "quarto"
  },
  {
    "objectID": "posts/config_term/index.html#configzsh.zsh_aliases",
    "href": "posts/config_term/index.html#configzsh.zsh_aliases",
    "title": "Configure the command line for data science development",
    "section": "3.1 ~/.config/zsh/.zsh_aliases",
    "text": "3.1 ~/.config/zsh/.zsh_aliases\n\nalias mm='mutt'\nalias sk='open -a Skim'\nalias vc='vim ~/.vimrc'\nalias vz='vim ~/.zshrc'\nalias sz='source ~/.zshrc'\nalias p2='enscript -C -2 -r -j --media=Letter'\nalias p1='enscript  -j --media=Letter'\nalias yr=\"yabai --restart-service\"\nalias lt='eza -lrFha -sold'\nalias mvim=\"/Applications/MacVim.app/Contents/bin/mvim\"\nalias tp='trash-put -v'\nalias rm='echo \"This is not the command you are looking for.\"; false'\nalias s='scd'\nalias ZZ='exit'\nalias r=\"radian\"\nalias nt=\"nvim\"\nalias -g ...='../..'\nalias -g ....='../../..'\nalias -g .....='../../../..'\nalias -g ......='../../../../..'\n\nalias -- -='cd -'\nalias 1='cd -1'\nalias 2='cd -2'\nalias 3='cd -3'\nalias 4='cd -4'\nalias 5='cd -5'\nalias 6='cd -6'\nalias 7='cd -7'\nalias 8='cd -8'\nalias 9='cd -9'\n\nalias md='mkdir -p'\nalias rd=rmdir\n\n# List directory contents\nalias lsa='ls -lah'\nalias l='ls -lah'\nalias ll='ls -lh'\nalias la='ls -lAh'\n\n# search for directory and cd to it\nalias sd=\"cd ~ && cd \\$(find * -type d -not -path '*/Library/*' | fzf)\""
  },
  {
    "objectID": "posts/config_term/index.html#configzsh.zsh_exports",
    "href": "posts/config_term/index.html#configzsh.zsh_exports",
    "title": "Configure the command line for data science development",
    "section": "3.2 ~/.config/zsh/.zsh_exports",
    "text": "3.2 ~/.config/zsh/.zsh_exports\n\nexport EDITOR=\"vim\"\nexport TEXINPUTS='.:/Users/zenn/shr/images:/Users/zenn/shr:'\nexport PATH=\".:.local/bin:/opt/homebrew/sbin:/opt/homebrew/bin:$PATH:$HOME/bin\"\nexport vpc_id=\"vpc-14814b73\"\nexport subnet_id=\"subnet-f02c90ab\"\nexport ami_id=\"ami-014d05e6b24240371\"\nexport keypair_name=\"rebecca_app\"\nexport proj_name=\"rebecca_app\"\nexport instance_type=\"t2.micro\"\nexport storage_size=\"30\"\nexport ami_id=\"ami-014d05e6b24240371\"\nexport security_grp=\"sg-008cace70d32f6267\"\nexport static_ip='13.56.101.209'\n\nif type rg &&gt; /dev/null; then\n  export FZF_DEFAULT_COMMAND='rg --files --hidden --no-ignore-vcs'\n  export FZF_DEFAULT_OPTS='-m --height 50% --border'\nfi\n\nexport ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE=\"fg=011,bg=black,bold,underline\"\nLS_COLORS+='pi=01;33:so=01;33:do=01;33:bd=01;33:cd=01;33:su=01;35:sg=01;35:ca=01;35:ex=01;32'\nexport LSCOLORS='ExGxDxDxCxDxDxFxFxexEx'"
  },
  {
    "objectID": "posts/config_term/index.html#configzsh.zsh_functions",
    "href": "posts/config_term/index.html#configzsh.zsh_functions",
    "title": "Configure the command line for data science development",
    "section": "3.3 ~/.config/zsh/.zsh_functions",
    "text": "3.3 ~/.config/zsh/.zsh_functions\n\nfunction d () {\n  if [[ -n $1 ]]; then\n    dirs \"$@\"\n  else\n    dirs -v | head -n 10\n  fi\n}\n\nmma () { /Applications/Mathematica.app/Contents/MacOS/WolframKernel -script $1 }\nfunction gz() {\n    git add .\n    git commit -a -m \"$1\"\n    git push\n}"
  },
  {
    "objectID": "posts/dockerize_simple/index.html",
    "href": "posts/dockerize_simple/index.html",
    "title": "A simple process to get your Shiny app online (securely).",
    "section": "",
    "text": "Photo by Nathan Waters on Unsplash"
  },
  {
    "objectID": "posts/dockerize_simple/index.html#pre-launch-tasks",
    "href": "posts/dockerize_simple/index.html#pre-launch-tasks",
    "title": "A simple process to get your Shiny app online (securely).",
    "section": "3.1 Pre-launch tasks",
    "text": "3.1 Pre-launch tasks\nSelect a hosting service\nThere are a number of cloud based server options: Microsoft Azure, Oracle, Google Cloud, Amazon AWS EC2, Digital Ocean and Hetzner to name a few. Each has their own approach to setting up a custom virtual server. Several have free or low-cost service tiers available.\nAn overview of the process with AWS EC2 follows. (Detailed instructions for setting up a virtual server on EC2 both through the EC2 console and the command line interface were described in earlier posts: here and here.\nThe first step is to create an AWS account or sign in to an existing account and navigate to the EC2 dashboard.\nBefore launching the server instance itself we need to define a working environment within EC2. That is, we need to do the following:\n\ngenerate secure shell (ssh) key-pair\nconfigure a firewall.\nobtain a static IP.\nobtain a domain name.\n\nThe configuration has three components:\n\nselect an instance operating system (ubuntu) and\nselect an instance type (t2-micro)\ndetermine the size of the storage space.\n\nOnce the environment and configuration is set up we can launch the server.\nWhen the server is available we can connect via ssh.\nLastly associate the IP address with the domain name.\nssh -i \"~/.ssh/power1_app.pem\"  ubuntu@rgtlab.org\nor using the config setup described in Tip 1 at the end of this post.\nssh rgtlab.org\nThe only software tools necessary to install are Docker and Caddy. If you followed the CLI or console based instructions to set up a virtual server here or here Docker and Caddy will be pre-installed.\nOtherwise you can install them with the following commands:\nsudo apt update\nsudo apt install docker.io -y\nsudo apt install -y curl debian-keyring debian-archive-keyring apt-transport-https\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | \\\nsudo gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg\ncurl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | \\\nsudo tee /etc/apt/sources.list.d/caddy-stable.list\nsudo apt update\nsudo apt install caddy -y\nAt this point we have a customized virtual server with a static IP address, unique domain name and a firewall in place. In other words, items 1, 2, 3, and 4 from our ‘hosting’ list above are taken care of."
  },
  {
    "objectID": "posts/dockerize_simple/index.html#post-launch-steps-on-local-workstation",
    "href": "posts/dockerize_simple/index.html#post-launch-steps-on-local-workstation",
    "title": "A simple process to get your Shiny app online (securely).",
    "section": "3.2 Post-Launch steps on local workstation",
    "text": "3.2 Post-Launch steps on local workstation\nTo run and host our Shiny app online we need to add a few configuration files to our power1_app development directory."
  },
  {
    "objectID": "posts/dockerize_simple/index.html#we-want-to-containerize-our-app.",
    "href": "posts/dockerize_simple/index.html#we-want-to-containerize-our-app.",
    "title": "A simple process to get your Shiny app online (securely).",
    "section": "3.3 We want to containerize our app.",
    "text": "3.3 We want to containerize our app.\nBy dockerizing the Shiny app we can assure that whenever its run all the required software and the right versions are ava\nThe first configuation file is:"
  },
  {
    "objectID": "posts/dockerize_simple/index.html#docker",
    "href": "posts/dockerize_simple/index.html#docker",
    "title": "A simple process to get your Shiny app online (securely).",
    "section": "3.4 Docker",
    "text": "3.4 Docker\n\na Docker configuration file (default name Dockerfile)\n\n\n\n  Photo by Ian Taylor on Unsplash \nWe’ll use docker to access R and Shiny. Here is our minimal dockerfile:\n\nDockerfile: Show the code\nFROM rocker/shiny:4.2.0\n# there are a bunch of files in /srv/shiny-server. delete them\nRUN rm -rf /srv/shiny-server\nCOPY /power1_shiny/* /srv/shiny-server/\n# rocker/shiny adds a user named shiny\nUSER shiny\nCMD [\"/usr/bin/shiny-server\"]\n\nThis file in just a few lines instructs Docker to build a new container based on a Rocker/Shiny image (which is a ubuntu image with R and Shiny installed) and layered with the addition of our Shiny code launch Shiny server listening on (default) port 3838.\nNote: We placed the power1_shiny/app.R code in the default location /srv/shiny-server so we only need to start the Shiny server and it will find the shiny program\nWe’ll use Caddy as our web server. Caddy is an open-source tool that has the very useful feature of automating the acquiring and installing of an SSL certificate. (An SSL cert is required by most browsers to use the encrypted communication protocol https.)\nTo configure the web server we need to add a Caddy configuration file (default name Caddyfile) to the power1_app directory.\nThe Caddy configuration file specifies three critical things.\n\nthe site domain name.\nthe authentication pair login/hash-password, for each user and\nthe ‘reverse proxy’ map that redirects requests to port 443 (ssl port) onto port 3838 (Shiny port) in the docker container.\n\nOur barebones Caddyfile looks like this:\n\nCaddyfile: Show the code\nrgtlab.org {\n    basicauth * /power1_shiny/* {\n        bob $2a$14$pYWd5O7JqNeGLS4m4CKkzemM2pq5ezn9bcTDowofZTl5wRVl8NTJm\n    }\n    root * /var/www/html\n    handle_path /power1_shiny/* {\n            reverse_proxy 0.0.0.0:3838\n    }\n    file_server\n}\n\nWe can accomplish what we need for items 4, 5, 6 and 7 through the Caddyfile.\nNote:\n\nrgtlab.org is our domain name\nthe basicauth directive specifies login credentials for user bob (password: vanilla47)\nhandle_path maps all https requests to port 3838 where Shiny is listening.\nroot directive tells Caddy where to look for the index.html file.\n\nProviding our servers domain name, rgtlab.org is sufficient to initiate an exchange with the letsencrypt service to generate an SSL certificate.\nLastly, we need an index.html file to provide a launch page for the app.\n\nindex.html: Show the code\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Power1 app&lt;/h1&gt;\n    &lt;ul&gt;\n      &lt;li&gt;&lt;a href=\"./power1_shiny/\"&gt;Power1 app&lt;/a&gt;&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n\nOnce the config files, the index.html file and the Shiny code directory are in place copy we the entire power1_app directory to the server rgtlab.org with the secure copy command:\nscp -i \"~/.ssh/power1_app.pem\" -r ~/prj/power1_app/  ubuntu@rgtlab.org:~"
  },
  {
    "objectID": "posts/dockerize_simple/index.html#post-launch-steps-on-remote-server",
    "href": "posts/dockerize_simple/index.html#post-launch-steps-on-remote-server",
    "title": "A simple process to get your Shiny app online (securely).",
    "section": "3.5 Post-Launch steps on remote server",
    "text": "3.5 Post-Launch steps on remote server\nUse ssh to login to the server and cd to power1_app directory\nBuild and run the Docker container (using the docker approach allows us to avoid installing both R and Shiny on the virtual server rgtlab.org).\ndocker build -t power1_image .\nrun container\ndocker run -d --name=power1_shiny -p 3838:3838 --restart=always power1_image\nNext copy the Caddyfile to the location caddy expects to find it in the /etc/caddy directory\nsudo cp ./Caddyfile /etc/caddy/\ncopy index.html to location Caddy expects to find it in the /var/www/html directory\ncp  ./index.html /var/www/html/\nLastly, run the following command to restart Caddy\nsudo systemctl reload caddy\nThe App launch page will now be available at https://rgtlab.org.\nand you’re good to go!"
  },
  {
    "objectID": "posts/dockerize_simple/index.html#tip-construct-ssh-config-file.",
    "href": "posts/dockerize_simple/index.html#tip-construct-ssh-config-file.",
    "title": "A simple process to get your Shiny app online (securely).",
    "section": "3.6 Tip construct ssh config file.",
    "text": "3.6 Tip construct ssh config file.\nFor convenience, construct a config file in ~/.ssh as:\nHost rgtlab.org\nHostName 13.57.139.31 # static IP\nStrictHostKeyChecking no  #avoid known host file error message\nUser ubuntu # default user on ubuntu server\nPort 22  # the default port ssh uses\nIdentityFile ~/.ssh/power1_app.pem\nthen you can ssh into the new server with\nsh&gt; ssh rgtlab.org"
  },
  {
    "objectID": "posts/index.html",
    "href": "posts/index.html",
    "title": "Blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nPenguins\n\n\n\n\n\n\n\n\n\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nPenguins\n\n\n\n\n\n\n\n\n\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nAbout me\n\n\n\n\n\n\n\n\n\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nMy blog\n\n\n\n\n\nThoughts on research\n\n\n\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nPublications\n\n\n\n\n\n\n\n\n\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nSelected R packages I’ve coauthored\n\n\n\n\n\n\n\n\n\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nTalks I’ve given\n\n\n\n\n\n\n\n\n\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nAdvanced Chemistry\n\n\n\n\n\n\n\n\n\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nConfigure the command line for data science development\n\n\n\n\n\n\n\n\n\n\n\nJan 23, 2024\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nA Concise Strategy to get your Shiny App Online, Securely and Continuously Updated.\n\n\ngitlab, Docker-compose, EC2 version\n\n\n\nDocker\n\n\nShiny\n\n\ndocker-compose\n\n\n\nThis is the first in a series of posts offering suggested strategies for leveraging open source technologies to effectively host data science analysis apps and reports online.” \n\n\n\n\n\nJan 23, 2024\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nExtend Shiny power app to five tabs\n\n\n\n\n\n\n\n\n\n\n\nJan 23, 2024\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nWorking example for generating multiple plots inside a map2 call\n\n\n\n\n\n\n\n\n\n\n\nJan 23, 2024\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nRCT validation language\n\n\n\n\n\n\n\n\n\n\n\nJan 23, 2024\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nUsing the AWS command line interface to launch an EC2 server\n\n\n\n\n\n\nAWS\n\n\n\nBatch programs to setup a virtual server to host a Shiny app\n\n\n\n\n\nJan 23, 2024\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nSet up a virtual server on AWS EC2 Console (in anticipation of hosting Shiny apps)\n\n\n\n\n\n\nAWS\n\n\n\nDetailed steps for setting up a lightweight server on AWS. \n\n\n\n\n\nJan 23, 2024\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nSetting up R, vimtex and Ultisnips in vim on a Mac\n\n\n\n\n\n\nvim\n\n\nR\n\n\nTex\n\n\nUltisnips\n\n\n\nDetailed configuration for optimal interaction and efficiency\n\n\n\n\n\nJan 23, 2024\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nSetting up a minimal neovim environment for data science code development\n\n\nA neovim IDE for R, Python, and Julia\n\n\n\nNeovim\n\n\nVim\n\n\n\nThis is the first in a series of posts offering suggested strategies for setting up key tools for data science code development\n\n\n\n\n\nJan 23, 2024\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nSetting up OBS for webcasting\n\n\n\n\n\n\n\n\n\n\n\nJan 23, 2024\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nSetting up Quarto\n\n\n\n\n\n\n\n\n\n\n\nJan 23, 2024\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nA simple vim package for interfacing with a REPL\n\n\n\n\n\n\nR\n\n\nvim\n\n\n\nAn alternative to Nvim-R and vim-slime\n\n\n\n\n\nJan 23, 2024\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nA simple process to get your Shiny app online (securely).\n\n\n\n\n\n\nDocker\n\n\nShiny\n\n\n\nThis is the first in a series of posts offering suggested strategies for leveraging open source technologies to effectively host data science analysis apps and reports online.\n\n\n\n\n\nJan 23, 2024\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nInstall Linux Mint on a Macbook Pro\n\n\nA set of tips for installation and post install\n\n\n\nMint\n\n\nR\n\n\nPython\n\n\nJulia\n\n\n\nstep by step description of howto install and customize a Mint instance for data science workflow\n\n\n\n\n\nJan 23, 2024\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nMimicing the softmood reddit post\n\n\n\n\n\n\n\n\n\n\n\nJan 23, 2024\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nMinimal EDC in Shiny\n\n\n\n\n\n\n\n\n\n\n\nJan 23, 2024\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nConstructing a medium complexity shiny app for power analysis\n\n\n\n\n\n\n\n\n\n\n\nJan 23, 2024\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nSetting up git for (solo) data science workflow\n\n\n\n\n\n\n\n\n\n\n\nJan 23, 2024\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nSimple process for sharing R code via Docker\n\n\n\n\n\n\n\n\n\n\n\nJan 23, 2024\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nWriting a simple R package in S3.\n\n\n\n\n\n\nAWS\n\n\n\nGetting started with S3 OO programming in R\n\n\n\n\n\nJan 23, 2024\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nMy xray experiments\n\n\n\n\n\n\nphysics\n\n\nchemistry\n\n\nradiation\n\n\n\n\n\n\n\n\n\nSep 7, 1902\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nAdventures with Uranium Rays\n\n\n\n\n\n\n\n\n\n\n\nJun 30, 1901\n\n\nRonald (Ryy) Glenn Thomas\n\n\n\n\n\n\n\n\n\n\n\n\nTest 2 Sur la pénétration des rayons de Becquerel non déviables par le champ magnétique\n\n\n\n\n\n\n\n\n\n\n\nMar 4, 1900\n\n\nRonald (Ryy) Glenn Thomas, Marie S\n\n\n\n\n\n\n\n\n\n\n\n\nSur la pénétration des rayons de Becquerel non déviables par le champ magnétique\n\n\n\n\n\n\n\n\n\n\n\nMar 4, 1900\n\n\nRonald (Ryy) Glenn Thomas, Marie Skłodowska-Curie\n\n\n\n\n\n\nNo matching items\n\n\n  \n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  title = {Blog},\n  pages = {undefined},\n  url = {https://focusonr.org/posts},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. n.d. “Blog.” https://focusonr.org/posts."
  },
  {
    "objectID": "posts/mimicsoftmood/index.html",
    "href": "posts/mimicsoftmood/index.html",
    "title": "Mimicing the softmood reddit post",
    "section": "",
    "text": "1 Introduction\n\n\n\n\n\nunder construction\n\n\nVery impressed with the reddit post of ykonstant\n[Cinnamon] Soft mood and latex workflow\nThis project is an attempt to mimic the various elements of the post, particularly the ultisnips portion.\nThe key elements to get started:\nThe list from the post:\n\nDE: Cinnamon\n\nTerminal emulator: iterm2 brew install iterm2\n\nWallpaper: Abstract geometry lofi coffee\n\n\n\n\n\n\nunder construction\n\n\n\nMusic mix credits: Loosen up your mind by Homework Radio\n\nRoot system animation: The Beauty of E8 by David Madore\n\nEye candy: cli-visualiser, cmatrix, neofetch, pipes.sh\n\nReference Management System: Zotero\n\nBrowser: qutebrowser with zotero connector\n\nVim Colorscheme: habiLight modified\n\nStatus Bar: airline with custom theme, adapted from gruvbox code.\n\nVim plugins: vimtex, ultisnips, vim-surround.\n\nbrew install neofetch\n\n\n\n\n\nunder construction\n\n\n\n\n2 Using qutebrowser\n\n\n3 Using Zotero\nstarts at 2:50 on video\n\n\n\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas2024,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  title = {Mimicing the Softmood Reddit Post},\n  pages = {undefined},\n  date = {2024-01-23},\n  url = {https://focusonr.org/posts/mimicsoftmood},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. 2024. “Mimicing the Softmood Reddit\nPost.” January 23, 2024. https://focusonr.org/posts/mimicsoftmood."
  },
  {
    "objectID": "posts/plots_from_purrr/index.html",
    "href": "posts/plots_from_purrr/index.html",
    "title": "Working example for generating multiple plots inside a map2 call",
    "section": "",
    "text": "purrr\n\n\n\n1 Introduction\nConsider the problem of running a data analysis requiring a separate analysis for each of n strata. For example consider an effort to model the relationship between Bill length and Flipper length across three different species of penguins.\nWe can work with the dataset penguins included in the package palmerpenguins\nlibrary(palmerpenguins)\nOne naive approach is to split the dataset and do three separate analyses:\ndf1 = split(penguins, penguins$species)\nThe R package purrr provides a straightforward method to conduct the analyses with a single command. Assume the set of data tables are contained in a list of dataframes. Also assume the analysis is a simple visualization of a potential linear association between two features,\n \n\n\n2 Code\nlibrary(pacman)\np_load(palmerpenguins, tidyverse, knitr)\n\nopts_chunk$set(\n  warning = FALSE, message = FALSE, echo = FALSE, fig.width = 4,\n  fig.height = 2.1, results = \"asis\", dev = \"pdf\")\n\ndf1 = split(penguins, penguins$species)\n\nfoo &lt;- function (df, z) {\ndf |&gt; ggplot(aes(x = bill_length_mm, y = flipper_length_mm))+\n  geom_point(aes(color = island), alpha = .5) +\n  geom_smooth() +\n  scale_color_manual(values = c(\"purple\",\"green\",\"red\")) +\n  theme_bw() +\n  labs(title = paste(z, \" Penguin Anatomy Comparison\"), x = \"Flipper length\",\n       y = \"Bill length\", color = \"Island\")\nplotfile_name = paste0(z,\".pdf\")\nggsave(plotfile_name)\ncat(paste0(\"\\\\includegraphics[]{\",plotfile_name,\"}\"), \"\\n\")\ncat(paste0(\"\\\\captionof{figure}{Scatterplot for species: \",z,\"}\"), \"\\n\")\ncat(\"\\\\vspace{1cm}\", \"\\n\")\n}\n\nbar = df1 |&gt;  map2(names(df1), foo)\n\n\n3 References\nprincipal components analysis\n\n\n\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas2024,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  title = {Working Example for Generating Multiple Plots Inside a Map2\n    Call},\n  pages = {undefined},\n  date = {2024-01-23},\n  url = {https://focusonr.org/posts/plots_from_purrr},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. 2024. “Working Example for Generating\nMultiple Plots Inside a Map2 Call.” January 23, 2024. https://focusonr.org/posts/plots_from_purrr."
  },
  {
    "objectID": "posts/power_analysis_shiny_app/app5/penguins.html",
    "href": "posts/power_analysis_shiny_app/app5/penguins.html",
    "title": "Penguins",
    "section": "",
    "text": "A simple example based on Allison Horst’s Palmer Penguins dataset. Here we look at how penguin body mass varies across both sex and species (use the provided inputs to filter the dataset by bill length and island):\n\nviewof bill_length_min = Inputs.range(\n  [32, 50], \n  {value: 35, step: 1, label: \"Bill length (min):\"}\n)\nviewof islands = Inputs.checkbox(\n  [\"Torgersen\", \"Biscoe\", \"Dream\"], \n  { value: [\"Torgersen\", \"Biscoe\"], \n    label: \"Islands:\"\n  }\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlotData\n\n\n\nPlot.rectY(filtered, \n  Plot.binX(\n    {y: \"count\"}, \n    {x: \"body_mass_g\", fill: \"species\", thresholds: 20}\n  ))\n  .plot({\n    facet: {\n      data: filtered,\n      x: \"sex\",\n      y: \"species\",\n      marginRight: 80\n    },\n    marks: [\n      Plot.frame(),\n    ]\n  }\n)\n\n\n\n\n\n\n\n\n\nInputs.table(filtered)\n\n\n\n\n\n\n\n\n\n\ndata = FileAttachment(\"palmer-penguins.csv\").csv({ typed: true })\n\n\n\n\n\n\n\nfiltered = data.filter(function(penguin) {\n  return bill_length_min &lt; penguin.bill_length_mm &&\n         islands.includes(penguin.island);\n})\n\n\n\n\n\n\n\n\n\n\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  title = {Penguins},\n  pages = {undefined},\n  url = {https://focusonr.org/posts/power_analysis_shiny_app/app5/penguins.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. n.d. “Penguins.” https://focusonr.org/posts/power_analysis_shiny_app/app5/penguins.html."
  },
  {
    "objectID": "posts/rct_validation_lang/index.html",
    "href": "posts/rct_validation_lang/index.html",
    "title": "RCT validation language",
    "section": "",
    "text": "1 Introduction\nConsider a simple programming language to capture the essence of clinical trial data base validation logic.\nSimilar in concept to Coffeescript (compiles to Lua) or Moonscript (compiles to Javascript).\nIdea is for trial design and initiation team to collaborate (say on gppgle docs) to develop the quality control validation logic and then translate that language into a series of snippets in Lua (using Lpeg)\nhttps://www.inf.puc-rio.br/~roberto/lpeg/\n\n\n\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas2024,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  title = {RCT Validation Language},\n  pages = {undefined},\n  date = {2024-01-23},\n  url = {https://focusonr.org/posts/rct_validation_lang},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. 2024. “RCT Validation\nLanguage.” January 23, 2024. https://focusonr.org/posts/rct_validation_lang."
  },
  {
    "objectID": "posts/server_setup_aws_console/index.html",
    "href": "posts/server_setup_aws_console/index.html",
    "title": "Set up a virtual server on AWS EC2 Console (in anticipation of hosting Shiny apps)",
    "section": "",
    "text": "Photo by Nathan Waters on Unsplash"
  },
  {
    "objectID": "posts/server_setup_aws_console/index.html#select-a-hosting-service",
    "href": "posts/server_setup_aws_console/index.html#select-a-hosting-service",
    "title": "Set up a virtual server on AWS EC2 Console (in anticipation of hosting Shiny apps)",
    "section": "2.1 Select a hosting service",
    "text": "2.1 Select a hosting service\nThere are a number of cloud based server hosting options to choose from: for example Microsoft Azure, Oracle, Google Cloud, Amazon AWS EC2, Digital Ocean or Hetzner to name a few. Each has their own approach to setting up a custom virtual server. Several have free or low-cost service tiers available.\nIn this post we’ll provide a step-by-step description of a process using Amazon Web Services Elastic Compute Cloud (AWS EC2) infrastructure.\nAWS is, in our view, a reasonable choice for setting up a small custom server. Its not the cheapest option, but the system is well documented and, in our experience, reliable.\nThe first step is to get set up with AWS. To start, open the EC2 console by visiting the URL:\n   https://aws.amazon.com/console\n(see margin figure)\nIn the console window choose regional service. For us its “N. California”.\n\n\n\n\n\nAWS console\n\n\nNext create an account, or sign in. Once you’re logged in navigate to the EC2 dashboard. Its through this dashboard (aka console) that we’ll define the parameters for the type of server to launch and the mechanisms for communicating with it. We’ll refer to these as “Pre-Launch” tasks."
  },
  {
    "objectID": "posts/server_setup_aws_console/index.html#overview",
    "href": "posts/server_setup_aws_console/index.html#overview",
    "title": "Set up a virtual server on AWS EC2 Console (in anticipation of hosting Shiny apps)",
    "section": "3.1 Overview",
    "text": "3.1 Overview\nAlong with selecting a server we need to set up a working environment. We recommend setting up the working environment before launching the server, as it saves some back and forth with the console, but doing so is not required. The working environment consists of four main components:\n\nA security credential (RSA key-pair) to allow remote and secure login to the virtual server once its launched.\nA firewall, or security model, which restricts incoming server access. The purpose of the firewall is to close ofe all incoming packet traffic except through those ports specifically named.\nA static IP address, say 111.222.333.444. A static IP is required for maintaining the link between the domain name and the server when rebooting. (The default is for the instance/server to be assigned a new IP address each time its rebooted).\nA domain name, say rgtlab.org. A domain name is not required but will facilitate collaborator access by not requiring the use of the IP address directly.\n\nThese working environment components are not directly tied to any specific server. In fact, you can define multiple instances of each component. The only requirement is that you pick one of each to associate with each server."
  },
  {
    "objectID": "posts/server_setup_aws_console/index.html#work-environment-details.",
    "href": "posts/server_setup_aws_console/index.html#work-environment-details.",
    "title": "Set up a virtual server on AWS EC2 Console (in anticipation of hosting Shiny apps)",
    "section": "3.2 Work Environment Details.",
    "text": "3.2 Work Environment Details.\n\n3.2.1 Ssh key pair\nIn order to securely communicate with the server we need to exchange an RSA key pair with AWS. The pair consists of a private key and a public key. We can define a key pair in one of two ways in EC2. Either, generate the pair locally, on our workstation and upload the public key to EC2, or have EC2 generate the key pair and download the private key. The EC2 based generation process will place the public key in the ~/.ssh/authorized_keys file on the server.\nFor the first option (local generation) we create a directory on our workstation to hold the keys and navigate to it, e.g. ~/.ssh. In the ~/.ssh directory generate the keys with the command\n&gt; ssh-keygen -m PEM\nPEM defines the key format. More information on public key authentication can be found (here). Also detailed instructions are available on AWS (here)\nIn the interactive dialog that follows name the key prefix something like power1_app.pem. The dialog will ask for a passphrase. You can enter a phrase for an additional level of security, but its not required. The ssh-keygen program will generate two files: power1_app.pem and power1_app.pem.pub\nTo complete the process return to the EC2 dashboard and select Network & Security/Keypair/Actions and then Import key pair in the left panel. Enter the name power1_app and select the Browse button. Navigate to the ~/.ssh/power1_app.pem.pub file and and select the Import key pair button at the bottom of the page.\nFor the second approach (EC2 generated) select Create key pair button in the upper right of the console page. A form will appears and ask for a name. Enter something like power1_app. Select RSA for key pair type and .pem for key file format. The keys will be created and the private key power1_app.pem will be offered for download to the local machine. We suggest placing it in the ~/.ssh directory. Lastly, change the permissions for the private key, so only you can access with the following command:\n&gt; sudo chmod 400 power1_app.pem\n\n\n3.2.2 Firewall\nTo create a firewall, click on Security groups under Network & Security settings in the left hand panel. Choose Create security group, and name the security group something like power1_app.\nUnder Inbound Rules select SSH and HTTPS from the Type dropdown menu. Select Anywhere IPv4 0.0.0.0/0 for both (??).\nThis will create a firewall that leaves open only ports 22 and 443, for ssh and https incoming traffic, respectively.\n\n\n3.2.3 Static IP address\nYou can use the EC2 elastic IP service to get a static IP. Navigate to Network and Security again and select Allocate Elastic IP. An IP will be assigned from the EC2 pool of available IPv4 IP addresses e.g. 13.57.139.31.\n\n\n3.2.4 Domain Name\nTo obtain a dedicated domain name, leave the EC2 dashboard and go to Amazon route 53 dashboard to select a domain name and associate it with our static IP (select Service at the top of the dashboard and search for Route 53).\nOnce a domain name is acquired, e.g. rgtlab.org, you can associate it with any IP address, static or dynamic. This can be done via the Route 53 service. For example, to associate domain name rgtlab.org with the elastic IP 111.2222.333.444 do the following in Route 53:\n\nclick on hosted zones in the side panel\nclick on rgtlab.org in center panel\nclick on checkbox for rgtlab.org type=A line\nthen click on edit record in right panel\nchange IP address to the assigned static 111.222.333.444 in “value”."
  },
  {
    "objectID": "posts/server_setup_aws_console/index.html#access-server",
    "href": "posts/server_setup_aws_console/index.html#access-server",
    "title": "Set up a virtual server on AWS EC2 Console (in anticipation of hosting Shiny apps)",
    "section": "4.1 Access server",
    "text": "4.1 Access server\nOn your laptop log into server with\nssh -i \"~/.ssh/power1_app\" ubuntu@rgtlab.org"
  },
  {
    "objectID": "posts/setupgit/index.html",
    "href": "posts/setupgit/index.html",
    "title": "Setting up git for (solo) data science workflow",
    "section": "",
    "text": "1 Introduction\nVersion Control for biostatistics is the challenge.\nLets take it one step at a time.\nScenario 1: rgt47 has been working on a data analysis for some ADNI data. Its moderately complex and uses lots of packages. He’s ready to have his team join the analysis process. What are the first steps to do that? Start by adding git user rgt4748 to the team….\nReference:\nBest way to manage your dotfiles.\n\n\n2 Methods\n\n\n3 Invite a colleague to collaborate on a github repostiory\nSelect settings and then collaborators tab (in the left panel)\nSelect green “add people” button in the center of the page\nEnter the github user name (rgt4748) and select. “Add rgt4748”\nlogin as rgt4748 and accept invitation\nclick “message” icon in upper right corner.\nSelect “Invitation to join rgt47/x23 from rgt47”\nClone directory to local machine\n&gt; git clone https://github.com/rgt47/x23.git\n&gt; cd x23\n&gt; git branch myedits\n&gt; git checkout myedits\n&gt; vim x23.Rmd\nmodify\ntitle: \"R2\"\nto\ntitle: \"changed R2\"\n\n&gt; git add .\n&gt; git commit -m \"sample edit\"\n&gt; git push origin myedits\n&gt; git checkout master\n&gt; git merge myedits\n&gt; git branch -d myedits\ncreate a branch:\ncreate new branch for testing\ngit checkout -b test; git pull origin master; git push origin test; git checkout master; git pull origin test\n\n#merging branch back into master\n\ngit checkout test\ngit pull origin master\ngit checkout master\ngit merge test\ngit push origin master\n\n\n#to delete branch\ngit branch -d test\ngit push origin –delete test\n\nDraft ….\nGIT for nitwits\ngit init\ngit add fname\ngit status #see what happens on commit git commit -am “commit message”\ngit push\ngit branch work\ngit checkout work\n… make changes … git add * git commit -m “something”\ngit checkout master\ngit merge work\ngit branch -d work\ngit log #see all commits\ngit checkout HASH #Restore old branch\nConsider editing ./.git/config\nView file in master branch. git show master:a101.Rmd | mvim -\nCopy file from other branch (master) git checkout master uw.png\nTroubleshooting git pull –allow-unrelated-histories\nRule 6: Use the Imperative mood\nA valuable practice involves crafting commit messages with the underlying understanding that the commit, when implemented, will achieve a precise action. Construct your commit message in a manner that logically completes the sentence “If applied, this commit will…”. For instance, rather than,git commit -m “Fixed the bug on the layout page” . use this git commit -m “Fix the bug on the layout page” ✔\nIn other words, if this commit were to be applied, it would indeed fix the bug on the layout page.\nRule 7: Explain “What” and “Why”, but not “How”.\nLimiting commit messages to “what” and “why” creates concise yet informative explanations of each change. Developers seeking “How” the code was implemented can refer directly to the codebase. Instead, highlight what was altered and the rationale for the change, including which component or area was affected.\nCase Study: Angular’s Commit Message Practices\nAngular stands as a prominent illustration of effective commit messaging practices. The Angular team advocates for the use of specific prefixes when crafting commit messages. These prefixes include “chore: ,” “docs: ,” “style: ,” “feat: ,” “fix: ,” “refactor: ,” and “test: .” By incorporating these prefixes, the commit history becomes a valuable resource for understanding the nature of each commit. Tips\nRemember to prioritize clear and meaningful communication through your commit messages. A well-crafted commit message serves as a story that explains ‘what,’ ‘why,’ but not ‘how’ a change was made. Remember, your commit history is a collaborative resource that future you and your team will rely on. Make it a habit to create commit messages that stand as informative, concise, and consistent narratives.\nInterested in deepening your understanding of Git and evolving into a proficient “version controller”? Explore these exceptional resources:\n\nhttps://git-scm.com/doc\nhttps://git-scm.com/book/en/v2\nhttps://lab.github.com/\nhttps://www.atlassian.com/git/tutorials\nhttps://learngitbranching.js.org/\nhttps://www.gitkraken.com/git-cheat-sheet\nhttps://www.git-tower.com/learn/\n\n\n\n4 References:\nGit Basics — All You Need To Know as a New Developer. | by Gabriel Bonfim | Sep, 2023 | Medium\n\n\n\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas2024,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  title = {Setting up Git for (Solo) Data Science Workflow},\n  pages = {undefined},\n  date = {2024-01-23},\n  url = {https://focusonr.org/posts/setupgit},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. 2024. “Setting up Git for (Solo) Data\nScience Workflow.” January 23, 2024. https://focusonr.org/posts/setupgit."
  },
  {
    "objectID": "posts/setupobs/index.html",
    "href": "posts/setupobs/index.html",
    "title": "Setting up OBS for webcasting",
    "section": "",
    "text": "1 Introduction\nWebcasting for biostatistics is the challenge.\nLets take it one step at a time.\nStart with the open source project OBS.\nWelcome | OBS\nSteps to get started. Work with youtube video.\n(How to Use OBS Studio)[https://www.youtube.com/watch?v=-puA85ciDEM]\n\n\n2 Sections TBD\n\n\n3 Youtube channel\n\n\n4 Background blur\n\n\n5 Keycastr\n\n\n6 High contrast colorscheme\n\n\n7 hotkeys\n\n\n8 audio setup\n\n\n9 video setup\n\n\n10 format ?\n\n\n11 scenes\n\n\n\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas2024,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  title = {Setting up {OBS} for Webcasting},\n  pages = {undefined},\n  date = {2024-01-23},\n  url = {https://focusonr.org/posts/setupobs},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. 2024. “Setting up OBS for\nWebcasting.” January 23, 2024. https://focusonr.org/posts/setupobs."
  },
  {
    "objectID": "posts/setupquarto/robh_blog/about/index.html",
    "href": "posts/setupquarto/robh_blog/about/index.html",
    "title": "1 About me",
    "section": "",
    "text": "1 About me\nSome more detail about who I am and what I do.\n\n\n\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  pages = {undefined},\n  url = {https://focusonr.org/posts/setupquarto/robh_blog/about},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. n.d. https://focusonr.org/posts/setupquarto/robh_blog/about."
  },
  {
    "objectID": "posts/setupquarto/robh_blog/blog/radioactivity.html",
    "href": "posts/setupquarto/robh_blog/blog/radioactivity.html",
    "title": "My xray experiments",
    "section": "",
    "text": "I’ve been playing with uranium rays …\n\n\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas1902,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  title = {My Xray Experiments},\n  pages = {undefined},\n  date = {1902-09-07},\n  url = {https://focusonr.org/posts/setupquarto/robh_blog/blog/radioactivity.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. 1902. “My Xray Experiments.”\nSeptember 7, 1902. https://focusonr.org/posts/setupquarto/robh_blog/blog/radioactivity.html."
  },
  {
    "objectID": "posts/setupquarto/robh_blog/publications/index.html",
    "href": "posts/setupquarto/robh_blog/publications/index.html",
    "title": "1 Publications",
    "section": "",
    "text": "1 Publications\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n    Ronald (Ryy) Glenn Thomas, Marie S (1900) Test 2 Sur la pénétration des rayons de Becquerel non déviables par le champ magnétique. CR Acad Sci, 130, 76-79..\n  \n\n  \n    Ronald (Ryy) Glenn Thomas, Marie Skłodowska-Curie (1900) Sur la pénétration des rayons de Becquerel non déviables par le champ magnétique. CR Acad Sci, 130, 76-79..\n  \n\n\n\n\nNo matching items\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  pages = {undefined},\n  url = {https://focusonr.org/posts/setupquarto/robh_blog/publications},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. n.d. https://focusonr.org/posts/setupquarto/robh_blog/publications."
  },
  {
    "objectID": "posts/setupquarto/robh_blog/talks/french_academy_1901.html",
    "href": "posts/setupquarto/robh_blog/talks/french_academy_1901.html",
    "title": "Adventures with Uranium Rays",
    "section": "",
    "text": "Abstract here\n\n1 Slides\nembed html or pdf slides here\n\n\n2 Video\n\n\n\n\n\n  \n  \n\n\n\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas1901,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  title = {Adventures with {Uranium} {Rays}},\n  pages = {undefined},\n  date = {1901-06-30},\n  url = {https://focusonr.org/posts/setupquarto/robh_blog/talks/french_academy_1901.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. 1901. “Adventures with Uranium\nRays.” June 30, 1901. https://focusonr.org/posts/setupquarto/robh_blog/talks/french_academy_1901.html."
  },
  {
    "objectID": "posts/setupquarto/robh_blog/teaching/index.html",
    "href": "posts/setupquarto/robh_blog/teaching/index.html",
    "title": "1 Advanced Chemistry",
    "section": "",
    "text": "1 Advanced Chemistry\nBlah blah\n\n\n\n2 Advanced Physics\nDon’t forget to bring your lab coats\n\n\n\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  pages = {undefined},\n  url = {https://focusonr.org/posts/setupquarto/robh_blog/teaching},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. n.d. https://focusonr.org/posts/setupquarto/robh_blog/teaching."
  },
  {
    "objectID": "posts/simpleS3/index.html",
    "href": "posts/simpleS3/index.html",
    "title": "Writing a simple R package in S3.",
    "section": "",
    "text": "S3 OOP in R"
  },
  {
    "objectID": "posts/simpleS3/index.html#notes",
    "href": "posts/simpleS3/index.html#notes",
    "title": "Writing a simple R package in S3.",
    "section": "1.1 Notes",
    "text": "1.1 Notes\n2023-08-03 17:37:04\n\ncan’t handle logical variables yet\ncategorical values should be indented\nadd option to change continuous summary to median IQR\nreview atable, furniture, and tableone for features.\nmaybe a “style” option for NEJM, JAMA, lancet"
  },
  {
    "objectID": "posts/minimalist_edc_app/TODO.html",
    "href": "posts/minimalist_edc_app/TODO.html",
    "title": "Thomas Lab home page",
    "section": "",
    "text": "ReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  pages = {undefined},\n  url = {https://focusonr.org/posts/minimalist_edc_app/TODO.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. n.d. https://focusonr.org/posts/minimalist_edc_app/TODO.html."
  },
  {
    "objectID": "posts/power_analysis_shiny_app/app3/archive/TODO.html",
    "href": "posts/power_analysis_shiny_app/app3/archive/TODO.html",
    "title": "Thomas Lab home page",
    "section": "",
    "text": "ReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  pages = {undefined},\n  url = {https://focusonr.org/posts/power_analysis_shiny_app/app3/archive/TODO.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. n.d. https://focusonr.org/posts/power_analysis_shiny_app/app3/archive/TODO.html."
  },
  {
    "objectID": "posts/power_analysis_shiny_app/app5/archive/TODO.html",
    "href": "posts/power_analysis_shiny_app/app5/archive/TODO.html",
    "title": "Thomas Lab home page",
    "section": "",
    "text": "ReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas,\n  author = {(Ryy) Glenn Thomas, Ronald},\n  pages = {undefined},\n  url = {https://focusonr.org/posts/power_analysis_shiny_app/app5/archive/TODO.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald. n.d. https://focusonr.org/posts/power_analysis_shiny_app/app5/archive/TODO.html."
  },
  {
    "objectID": "posts/setupquarto/robh_blog/publications/ur2.html",
    "href": "posts/setupquarto/robh_blog/publications/ur2.html",
    "title": "Test 2 Sur la pénétration des rayons de Becquerel non déviables par le champ magnétique",
    "section": "",
    "text": "Abstract goes here\nPlus any other information such as supplementary materials.\n\n\n\nReuseCC BY 4.0CitationBibTeX citation:@online{(ryy) glenn thomas1900,\n  author = {(Ryy) Glenn Thomas, Ronald and S, Marie},\n  title = {Test 2 {Sur} La Pénétration Des Rayons de {Becquerel} Non\n    Déviables Par Le Champ Magnétique},\n  pages = {undefined},\n  date = {1900-03-04},\n  url = {https://focusonr.org/posts/setupquarto/robh_blog/publications/ur2.html},\n  doi = {10.1111/cras.404950},\n  langid = {en}\n}\nFor attribution, please cite this work as:\n(Ryy) Glenn Thomas, Ronald, and Marie S. 1900. “Test 2 Sur La\nPénétration Des Rayons de Becquerel Non Déviables Par Le Champ\nMagnétique.” March 4, 1900. https://doi.org/10.1111/cras.404950."
  }
]