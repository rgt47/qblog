<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Thomas Lab</title>
<link>https://focusonr.org/posts/</link>
<atom:link href="https://focusonr.org/posts/index.xml" rel="self" type="application/rss+xml"/>
<description>R, Data Science, and Research Computing</description>
<generator>quarto-1.7.25</generator>
<lastBuildDate>Wed, 14 May 2025 02:38:58 GMT</lastBuildDate>
<item>
  <title>Best practices for parsing a formula in R programming</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/formula_parsing/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://focusonr.org/posts/formula_parsing/img/Rlogo.jpg" class="img-fluid"></p>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>R developers can make use of the <code>formula</code> object class to allow succinct (unquoted) input to functions. However, its a bit unclear what the best strategy is to parse the formula inside the function to extract and validate the instructions the formula provides.</p>
<p>In this post we’ll present several alternative methods for consideration. As with most coding challenges there is no single best answer but some are more elegant than others.</p>
</section>
<section id="methods" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Methods</h1>
<p>Consider the following function to parse a formula. The formulas we want to test are of the form <code>y ~ x1 + x2 | g</code> where <code>y</code> is the dependent variable, <code>x1</code> and <code>x2</code> are the independent variables and <code>g</code> is the grouping variable.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">frm</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- function<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">form</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb1-2">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">vars</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- all.vars<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">form</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">y_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- deparse<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">form</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>[2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-4">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">g_bar</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- deparse<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">form</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>[c(3, 1)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-5">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">g_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- NULL</span>
<span id="cb1-6">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">g_bar</span> == <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb1-7">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">x_vars</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- all.vars<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">form</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>[c(3, 2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">g_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- all.vars<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">form</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>[c(3, 3)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-9">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb1-10">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">x_vars</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- all.vars<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">form</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[-1]</span></span>
<span id="cb1-11">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb1-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span></code></pre></div>
<p>Good question! The current logic correctly handles the presence or absence of a grouping variable by checking the structure of the formula (form[[3]]). Let’s analyze how it behaves in both cases and adjust if necessary.</p>
<p>Case 1: Formula with Grouping Variable (y ~ x1 + x2 | g)</p>
<p>In this case: • The RHS of the formula (form[[3]]) has a structure where form[[3]][[1]] is “|”. • This logic works because the formula structure explicitly includes the grouping operator |.</p>
<p>Example: form &lt;- y ~ x1 + x2 | g form[[3]][[1]] → “|” (indicates the grouping operator is present). • The logic splits the RHS into independent variables (form[[3]][[2]]) and the grouping variable (form[[3]][[3]]).</p>
<pre><code>Case 2: Formula without Grouping Variable (y ~ x1 + x2)</code></pre>
<p>In this case: • The RHS of the formula (form[[3]]) is x1 + x2, and form[[3]][[1]] is “+”. • The current logic (as.character(form[[3]][[1]]) == “|”) will fail because form[[3]][[1]] is “+”, not “|”. • Problem: The function will incorrectly assume that form[[3]][[1]] exists and attempt to access it, leading to an error when the RHS has no grouping operator. Fixing the Logic</p>
<p>To address this, we must first check if the formula has a valid structure for grouping. Specifically: 1. Check if the RHS (form[[3]]) has multiple components: • If form[[3]][[1]] exists, it can be checked for “|”. • If not, assume there is no grouping variable. 2. Updated Logic: • If length(form[[3]]) &gt; 1 and as.character(form[[3]][[1]]) == “|”, handle grouping. • Otherwise, treat it as a formula without grouping.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">frm</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- function<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">form,</span> data<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Validate inputs</span></span>
<span id="cb3-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">!inherits</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">form,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"formula"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-4">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">stop</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input 'form' must be a formula."</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb3-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">missing</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">data</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">!is.data.frame</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">data</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-7">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">stop</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input 'data' must be a data.frame."</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb3-9">    </span>
<span id="cb3-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract all variable names from the formula</span></span>
<span id="cb3-11">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">vars</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- all.vars<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">form</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-12">    </span>
<span id="cb3-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure all variables in the formula exist in the data</span></span>
<span id="cb3-14">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">missing_vars</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- setdiff<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">vars,</span> colnames<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">data</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb3-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">length</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">missing_vars</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> 0<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-16">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">stop</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The following variables are not found in the data: "</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> paste<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">missing_vars,</span> collapse = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb3-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb3-18">    </span>
<span id="cb3-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the dependent variable</span></span>
<span id="cb3-20">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">y_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- vars<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb3-21">    </span>
<span id="cb3-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check for grouping operator</span></span>
<span id="cb3-23">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">g_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- NULL</span>
<span id="cb3-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">length</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">form</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>[3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> 1 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">as.character</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">form</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>[3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">][[1]]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-25">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract independent and grouping variables</span></span>
<span id="cb3-26">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">x_vars</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- all.vars<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">form</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>[3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">][[2]]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-27">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">g_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- all.vars<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">form</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>[3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">][[3]]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># No grouping variable, extract independent variables</span></span>
<span id="cb3-30">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">x_vars</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- vars<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[-</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb3-31">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb3-32">    </span>
<span id="cb3-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Subset the data for the independent variables</span></span>
<span id="cb3-34">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">independent_data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- data[c<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">x_vars,</span> g_var<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb3-35">    </span>
<span id="cb3-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Subset the data for the dependent variable</span></span>
<span id="cb3-37">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dependent_data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- data.frame<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dependent</span> = data[<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">y_var</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>], group = if <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">!is.null</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">g_var</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>[g_var<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">]</span> else NULL<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-38">    </span>
<span id="cb3-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">is.null</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">g_var</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If no grouping variable, return independent and dependent data.frames</span></span>
<span id="cb3-41">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">list</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb3-42">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">independent</span> = independent_data,</span>
<span id="cb3-43">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dependent</span> = data.frame<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dependent</span> = data[<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">y_var</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>]<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-44">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb3-45">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-46">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure the grouping variable is unique and valid</span></span>
<span id="cb3-47">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grouping_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- g_var<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Assume single grouping variable</span></span>
<span id="cb3-48">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">!grouping_var</span> %in% colnames<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">data</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-49">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">stop</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Grouping variable not found in the data."</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-50">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb3-51">        </span>
<span id="cb3-52">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Split independent and dependent variables by the grouping variable</span></span>
<span id="cb3-53">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">split_independent</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- split<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">independent_data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>, x_vars, drop = FALSE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> independent_data[<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">grouping_var</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>]<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-54">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">split_dependent</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- split<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dependent_data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dependent"</span>, drop = FALSE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> dependent_data<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$group</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-55">        </span>
<span id="cb3-56">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">list</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb3-57">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">independent</span> = split_independent,</span>
<span id="cb3-58">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dependent</span> = split_dependent</span>
<span id="cb3-59">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb3-60">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb3-61"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span></code></pre></div>
<section id="references" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="references"><span class="header-section-number">2.1</span> References:</h2>
<p>“the formula is used to specify the symbolic model as well as generating the intended design matrix” <a href="https://rviews.rstudio.com/2017/02/01/the-r-formula-method-the-good-parts/">The R Formula Method: The Good Parts · R Views</a></p>
<p>” You’re probably familiar with formulas from linear models (e.g.&nbsp;lm(mpg ~ displ, data = mtcars)) but formulas are more than just a tool for modelling: they are a general way of capturing an unevaluated expression”</p>
<p>“because a formula captures two things:</p>
<pre><code>An unevaluated expression.
The context (environment) in which the expression was created.</code></pre>
<p>~ is a single character that allows you to say: “I want to capture the meaning of this code, without evaluating it right away”. For that reason, the formula can be thought of as a “quoting” operator.”</p>
<p><a href="https://cran.r-project.org/web/packages/lazyeval/vignettes/lazyeval.html">Non-standard evaluation</a></p>
<p><a href="https://shipt.tech/https-shipt-tech-advanced-programming-and-non-standard-evaluation-with-dplyr-e043f89deb3d">Advanced Programming and Non-Standard Evaluation with dplyr | by Ryan Boyer | Shipt Tech</a></p>
</section>
<section id="prerequisites" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">2.2</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">2.3</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">2.4</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="2.5">
<h2 data-number="2.5" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">2.5</span> Further Reading</h2>
<p>In development</p>


<!-- -->

</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Best Practices for Parsing a Formula in {R} Programming},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/formula_parsing/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Best Practices for Parsing a
Formula in R Programming.”</span> May 13, 2025. <a href="https://focusonr.org/posts/formula_parsing/">https://focusonr.org/posts/formula_parsing/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/formula_parsing/</guid>
  <pubDate>Wed, 14 May 2025 02:38:58 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/formula_parsing/img/Rlogo.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Docker and renv Strategy for Reproducible R Development: A Practical Example</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/share_R_code_via_docker/docker_renv.html</link>
  <description><![CDATA[ 




<p>Here’s an updated version of main1 that includes a listing of peng1.Rmd as initially written by Developer 1 and as later modified by Developer 2.</p>
<p>⸻</p>
<p>Docker and renv Strategy for Reproducible R Development: A Practical Example</p>
<ol type="1">
<li>Introduction</li>
</ol>
<p>Ensuring reproducibility in R Markdown workflows can be challenging due to package version mismatches and differences in computing environments. By combining renv (for package management) and Docker (for OS and system-level reproducibility), we can create fully reproducible workflows that work identically across different machines.</p>
<p>In this example, two developers collaborate on an R Markdown analysis using: • renv for package dependency management • Docker for containerizing the computing environment • GitHub for version control and collaboration • DockerHub for sharing a pre-configured R environment</p>
<p>⸻</p>
<ol start="2" type="1">
<li>Step-by-Step Example: Collaborative Reproducible Development with Docker and renv</li>
</ol>
<p>2.1 Developer 1: Setting Up the Project Locally</p>
<p>Step 1: Create a GitHub Repository and Clone It Locally</p>
<p>Developer 1 creates a new GitHub repository (penguins-analysis) and clones it:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://github.com/username/penguins-analysis.git</span>
<span id="cb1-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> penguins-analysis</span></code></pre></div>
<p>Step 2: Initialize renv for Dependency Management</p>
<p>Inside the project directory, Developer 1 initializes renv:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"></span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">install.packages</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"renv"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install renv if not already installed</span></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renv::init()</span>              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize renv for the project</span></span></code></pre></div>
<p>This creates an renv.lock file to track exact package versions.</p>
<p>Step 3: Install Required R Packages</p>
<p>Since the analysis will use the palmerpenguins dataset, Developer 1 installs the required packages:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"></span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">install.packages</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggplot2"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">install.packages</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"palmerpenguins"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renv::snapshot()</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save exact package versions to renv.lock</span></span></code></pre></div>
<p>⸻</p>
<p>2.2 Developer 1: Writing the Initial R Markdown File (peng1.Rmd)</p>
<p>Listing: peng1.Rmd Created by Developer 1</p>
<p>Developer 1 creates peng1.Rmd with an initial plot of flipper length vs.&nbsp;bill length:</p>
<pre class="rmd"><code>---
title: "Palmer Penguins Analysis"
author: "Developer 1"
date: "2025-03-10"
output: html_document
---

</code></pre>
<hr>
<section id="developer-1-creating-a-docker-image" class="level3" data-number="0.1">
<h3 data-number="0.1" class="anchored" data-anchor-id="developer-1-creating-a-docker-image"><span class="header-section-number">0.1</span> <strong>2.3 Developer 1: Creating a Docker Image</strong></h3>
<section id="step-4-write-a-minimal-dockerfile-without-peng1.rmd" class="level4" data-number="0.1.1">
<h4 data-number="0.1.1" class="anchored" data-anchor-id="step-4-write-a-minimal-dockerfile-without-peng1.rmd"><span class="header-section-number">0.1.1</span> <strong>Step 4: Write a Minimal Dockerfile (Without <code>peng1.Rmd</code>)</strong></h4>
<p>Developer 1 creates a <code>Dockerfile</code> that <strong>does not include <code>peng1.Rmd</code></strong>, ensuring that Developer 2’s local files are used when running the container.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use R 4.1.0 as base image</span></span>
<span id="cb5-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">FROM</span> rocker/r-ver:4.1.0</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the working directory inside the container</span></span>
<span id="cb5-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">WORKDIR</span> /workspace</span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install renv and restore dependencies</span></span>
<span id="cb5-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"install.packages('renv', repos='https://cloud.r-project.org')"</span></span>
<span id="cb5-9"></span>
<span id="cb5-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Copy only the renv.lock and renv infrastructure</span></span>
<span id="cb5-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">COPY</span> renv.lock renv/activate.R /workspace/</span>
<span id="cb5-12"></span>
<span id="cb5-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Restore the R package environment</span></span>
<span id="cb5-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"renv::restore()"</span></span>
<span id="cb5-15"></span>
<span id="cb5-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">CMD</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/bin/bash"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
<p>Step 5: Build and Push the Docker Image</p>
<p>Developer 1 builds the Docker image:</p>
<p>docker build -t username/penguins-analysis:v1 .</p>
<p>To push the image to DockerHub:</p>
<p>docker login docker push username/penguins-analysis:v1</p>
<p>⸻</p>
<p>2.4 Developer 1: Push to GitHub and Communicate to Developer 2</p>
<p>Step 6: Commit and Push to GitHub</p>
<p>Developer 1 commits the project without peng1.Rmd in the Docker image:</p>
<p>git add . git commit -m “Initial renv setup and Docker environment (without Rmd)” git push origin main</p>
<p>Developer 1 then shares these instructions with Developer 2: 1. Clone the GitHub repository. 2. Pull the prebuilt Docker image from DockerHub. 3. Run the container interactively, mounting the local repository. 4. Write the peng1.Rmd file and generate the report. 5. Push changes back to GitHub.</p>
<p>⸻</p>
<p>2.5 Developer 2: Running the Analysis</p>
<p>Step 7: Clone the Repository and Pull the Docker Image</p>
<p>Developer 2 clones the repository:</p>
<p>git clone https://github.com/username/penguins-analysis.git cd penguins-analysis</p>
<p>Pull the Docker image:</p>
<p>docker pull username/penguins-analysis:v1</p>
<p>Step 8: Run Docker Interactively with Local Repository</p>
<p>Since peng1.Rmd is not included in the Docker image, Developer 2 mounts the local repo inside the container:</p>
<p>docker run –rm -it -v “$(pwd):/workspace” -w /workspace username/penguins-analysis:v1 /bin/bash</p>
<p>This allows Developer 2 to: • Use the renv-restored environment from the container. • Access and modify peng1.Rmd directly from their local machine.</p>
<p>⸻</p>
<p>2.6 Developer 2: Extending the Analysis</p>
<p>Step 9: Modify peng1.Rmd to Include a Second Plot</p>
<p>Developer 2 adds a new plot for body mass vs.&nbsp;bill length:</p>
<p>Listing: peng1.Rmd as Modified by Developer 2</p>
<pre class="rmd"><code>
---
title: "Palmer Penguins Analysis"
author: "Developer 2"
date: "2025-03-10"
output: html_document
---

</code></pre>
</section>
<section id="step-10-commit-and-push-changes-back-to-github" class="level4" data-number="0.1.2">
<h4 data-number="0.1.2" class="anchored" data-anchor-id="step-10-commit-and-push-changes-back-to-github"><span class="header-section-number">0.1.2</span> <strong>Step 10: Commit and Push Changes Back to GitHub</strong></h4>
<p>Developer 2 commits and pushes the changes:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add peng1.Rmd</span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Added second plot: Body Mass vs. Bill Length"</span></span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push origin main</span></code></pre></div>
<p>⸻</p>
<ol start="3" type="1">
<li>Conclusion: Achieving Full Reproducibility</li>
</ol>
<p>By following these steps: • renv ensures that package versions are identical across environments. • Docker guarantees that the R version and OS-level dependencies are consistent. • GitHub enables collaborative development. • DockerHub provides a shared, pre-configured execution environment.</p>
<p>Key Updates in This Version</p>
<p>✅ Includes a listing of peng1.Rmd as written by Developer 1. ✅ Includes a listing of peng1.Rmd as modified by Developer 2. ✅ Ensures peng1.Rmd is not inside the Docker image—instead, Developer 2 uses a bind mount.</p>
<p>Would you like any further refinements or additions? 🚀</p>


<!-- -->

</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Docker and Renv {Strategy} for {Reproducible} {R}
    {Development:} {A} {Practical} {Example}},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/share_R_code_via_docker/docker_renv.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Docker and Renv Strategy for
Reproducible R Development: A Practical Example.”</span> May 13, 2025.
<a href="https://focusonr.org/posts/share_R_code_via_docker/docker_renv.html">https://focusonr.org/posts/share_R_code_via_docker/docker_renv.html</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/share_R_code_via_docker/docker_renv.html</guid>
  <pubDate>Wed, 14 May 2025 02:38:58 GMT</pubDate>
</item>
<item>
  <title>A Concise Strategy to get your Shiny App Online, Securely and Continuously Updated.</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/dockerize_compose/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://focusonr.org/posts/dockerize_compose/img/crane.jpg" class="img-fluid" alt="under construction"> <font size="1"> Photo by <a href="https://unsplash.com/@nathangwaters?utm_source=unsplash&amp;\
utm_medium=referral&amp;utm_content=creditCopyText">Nathan Waters</a> </font></p>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>This is the second in a series of posts offering suggested strategies for solving one of the central practical challenges in the practice of data science, i.e.&nbsp;how to effectively communicate analysis results to clients and collaborators. The strategies offered in this series of posts are all based on open source tools: e.g.&nbsp;<code>linux</code>, <code>R</code>, <code>Shiny</code>, <code>Docker</code>, <code>Git</code>, and <code>Caddy</code>. In this post we’ll make use of two cloud services: Gitlab and Amazon Web Service (AWS). Further posts will describe alternative cloud services, e.g.&nbsp;the low cost service: Hetzner.</p>
<p>A similarly straightforward strategy, but one that’ a bit simpler avoiding <code>Gitlab</code> and <code>docker</code> is described here <a href="https://focusonr.org/blog/dockerize_simple/">(here)</a>. This approach provides a simpler initial construction, but a more labor intensive updating process.</p>
<p>This post is a proof-of-concept example applying common open-source technologies with the goal of hosting an interactive Shiny application on a secure dedicated website. We start with a simple, stand-alone Shiny app on our local workstation, and end the process with the app running securely on a dedicated website with a custom domain name.</p>
</section>
<section id="methods" class="level1 page-columns page-full" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Methods</h1>
<p>We’ll start by creating a repository for the project on the version control cloud service <code>Gitlab</code>. We’ll then <code>clone</code> the repo to our local workstation to create a local workspace. More specifically, we’ll log into Gitlab and create a new empty private repo (see detail box below), call it, e.g.&nbsp;<code>power1_app</code>. Then on your local workstation navigate to a development directory, say e.g.&nbsp;<code>~/prj/shiny</code>, and clone the <code>power1_app</code> repo from Gitlab:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ~/prj/shiny</span>
<span id="cb1-2"> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://gitlab.com/rgt47/power1_app.git</span></code></pre></div>
<p>After cloning the repo change directories into <code>~/prj/shiny/power1_app</code> and create two new sub-directories, <code>power1_shiny</code> and <code>site</code>. These directories will house our shiny app and our web site landing page, respectively.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://focusonr.org/posts/dockerize_compose/img/gitlab1.png" class="img-fluid"></p>
</div></div><div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Details for creating a gitlab repo follow:
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<ul>
<li><p>Login to <code>gitlab</code> (see screenshot in margin)</p></li>
<li><p>Click on <code>New project</code>. In <code>repository name</code> field enter <code>power1_app</code>.</p></li>
<li><p>Make the repo private.</p></li>
<li><p>leave <code>deployment target</code> empty.</p></li>
<li><p>Click <code>Create project</code> (blue button) at the bottom of the page to create the repo.</p></li>
<li><p>On your local workstation <code>cd</code> to development directory, say ~/prj/shiny and clone the gitlab repo:</p></li>
<li><p>generate <code>gitlab_access_token</code>.</p></li>
</ul>
</div>
</div>
</div>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> power1_app</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> power1_shiny</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> site</span></code></pre></div>
<p>Now begin <code>Shiny</code> code development in the <code>~/prj/shiny/power1_app/power1_shiny</code> directory. For this post we’ve written code for a simple <code>Shiny</code> app. See the <code>Shiny</code> code for our example <code>power1_shiny</code> app (<code>app.R</code>) below.</p>

<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/dockerize_compose/img/shinyapppower1.png" class="img-fluid figure-img" style="width:2.5in"></p>
<figcaption><em>Shiny app</em> shows the Shiny app running locally in a browser, it consists of a widget to select the sample size and provide a dynamic visualization (2D plot) of the statistical power as a function of the standardized effect size:</figcaption>
</figure>
</div>
</div></div><p>This example is a simple Shiny app that calculates the power for a 2-sample t-test as a function of the standardized effect size. The app is intentionally minimal. Using only base R functions. It has a minimum of reactive widgets and layout commands to keep it simple while still performing a useful function.</p>
<p>Figure 1 shows the Shiny app running locally in a browser, it consists of a widget to select the sample size and provide a dynamic visualization (2D plot) of the statistical power as a function of the standardized effect size:</p>
<p>The code is here:</p>
<details class="code-fold">
<summary>show the <code>power1_shiny/app.R</code> code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">titlePanel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Power Calculator for Two Group Parallel Designs"</span>),</span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sliderInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total Sample Size:"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>),</span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span>),</span>
<span id="cb3-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">verbatimTextOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"eff"</span>))</span>
<span id="cb3-6"></span>
<span id="cb3-7">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {</span>
<span id="cb3-8">  delta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">05</span>)</span>
<span id="cb3-9">  pow <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactive</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(delta, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">power.t.test</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>N, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">d=</span>x)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>power ))</span>
<span id="cb3-10">  eff <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderText</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">power.t.test</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>N, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">power=</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>d)</span>
<span id="cb3-11">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderPlot</span>({</span>
<span id="cb3-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(delta, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pow</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"power"</span>)</span>
<span id="cb3-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb3-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">v =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eff</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)})</span>
<span id="cb3-15">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>eff <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderText</span>(</span>
<span id="cb3-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Std. effect detectable with power 80% = "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eff</span>()) )</span>
<span id="cb3-17">}</span>
<span id="cb3-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(ui, server)</span></code></pre></div>
</details>
<p>We can test the app locally in our development directory, <code>power1_app</code>, by runnning the following command.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> R <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"library(shiny); runApp('power1_shiny/app.R', launch=T)"</span></span></code></pre></div>
<p>This command will run the <code>R</code> program, load the <code>Shiny</code> package, run the Shiny program to convert the code to <code>HTML</code>, <code>CSS</code> and <code>Javascript</code> and launch the app in our default browser.</p>
<p>After determining the app is working as designed, the next steps are to dockerize the app and set up a secure host on the web, i.e.&nbsp;a server running a web-server supporting encryption and authentication.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>“A <strong>reverse proxy</strong> is a server, app, or cloud service that sits in f”ront of one or more web servers to intercept and inspect incoming client requests before forwarding them to the web server and subsequently returning the server’s response to the client.” <a href="https://www.zscaler.com/resources/security-terms-glossary/what-is-reverse-proxy
">reference</a></p>
</div></div><section id="hosting" class="level2 page-columns page-full" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="hosting"><span class="header-section-number">2.1</span> Hosting</h2>
<p>How to set up the hosting server? There are many ways to accomplish the hosting. Here we’ll describe a straightforward and efficient approach using mainstream cloud services and open source tools. In other words, we’ll describe how to ‘spin’ up a virtual server on Amazon Web Service EC2, and use Docker, R, Shiny, and Caddy to put in place a secure web app to share with our colleagues.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/dockerize_compose/img/compose_flow.png" class="img-fluid figure-img" width="500"></p>
<figcaption><em>Data flow</em></figcaption>
</figure>
</div>
<p>Figure 2 summarizes the flow of program and configuration files. In order to host <code>power1_app</code> online we’ll need to complete the following tasks:</p>
<p><em>Hosting List</em></p>
<ol type="1">
<li><p>Generate a virtual server with a firewall on EC2.</p></li>
<li><p>Obtain a static IPv4 address (to identify the server online)</p></li>
<li><p>Obtain a custom domain name (a name to associate with the static IP address) from a domain registration provider. E.g <code>rgtlab.org</code></p></li>
<li><p>Install and configure a webserver on the virtual server ( a tool to interact with https protocol requests )</p></li>
<li><p>Obtain and install a TLS (transport layer security) security certificate (to allow encrypted communication between the server and other machines on the network).</p></li>
<li><p>Configure user authentication for the web site.</p></li>
<li><p>configure a reverse proxy method (to translate <code>https</code>, port 443, requests to <code>Shiny</code>, port 3838, requests).</p></li>
</ol>

<div class="no-row-height column-margin column-container"><div class="">
<p><em>“What Is An SSL/TLS Certificate?</em></p>
<p><em>An <strong>SSL/TLS certificate</strong> is a digital object that allows systems to verify the identity &amp; subsequently establish an encrypted network connection to another system using the Secure Sockets Layer/Transport Layer Security (SSL/TLS) protocol. Certificates are used within a cryptographic system known as a public key infrastructure (PKI). PKI provides a way for one party to establish the identity of another party using certificates if they both trust a third-party - known as a certificate authority. SSL/TLS certificates thus act as digital identity cards to secure network communications, establish the identity of websites over the Internet as well as resources on private networks.”</em></p>
<p><font size="1"> <a href="https://aws.amazon.com/what-is/ssl-certificate/">reference</a> </font></p>
</div></div></section>
<section id="select-a-hosting-service" class="level2 page-columns page-full" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="select-a-hosting-service"><span class="header-section-number">2.2</span> Select a hosting service</h2>
<p>In this post we’ll describe the process using AWS EC2. Detailed instructions for setting up a server on EC2, both via the console and the command line interface are covered in earlier posts <a href="https://focusonr.org/posts/server_setup_aws_cli/">(here)</a> and <a href="https://focusonr.org/posts/server_setup_aws_console/">(here)</a>.</p>
<p>In brief, the process is as follows: To get started with <code>AWS</code> create an account or sign in to the <code>AWS EC2</code> dashboard. Once on the dashboard set up an environment in which to host the virtual server.</p>
<p>The components of this environment are: a ssh key-pair, a firewall, a static IP, and a domain name.</p>
<p>With the hosting environment in place, select an instance (AMI, type and disk size), then generate and launch the server.</p>
<p>Once the server is available, connect via ssh, and login.</p>
<p>The only software necessary to install at this point is <code>docker</code> (assuming it wasn’t installed in the server setup process). Install <code>docker</code> with the following commands:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> snap install docker.io</span></code></pre></div>

<div class="no-row-height column-margin column-container"><div class="">
<p>Note: <code>snap</code> is a package management system pre-installed in Ubuntu servers. Not to be confused with the <code>apt</code> package management system.</p>
</div></div><p>Once the host is set up and <code>docker</code> is installed, we’ll have accomplished items 1, 2, and 3 from our <code>hosting</code> list above. i.e.&nbsp;a customized virtual server wtih a static IP address, a unique domain name and firewall in place.</p>
</section>
</section>
<section id="configure" class="level1 page-columns page-full" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Configure</h1>
<p>To configure the web server and containerize our app we need to add three files to the repo, to go along with our Shiny app. We’ll also need a landing page for our web site.</p>
<p>We’ll use <code>Gitlab</code> as an intermediate repository between our workstation and the EC2 server in an indirect route to create and place the necessary files on the server. This approach will allow us to do all our continuing development on our local workstation and have the web app be automatically continually undated. We’ll create the configuration files we need on our workstation and push them to <code>Gitlab</code> and from there they can be accessed from our server.</p>
<p>These three configuation files are:</p>
<section id="docker" class="level2 page-columns page-full" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="docker"><span class="header-section-number">3.1</span> Docker</h2>

<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://focusonr.org/posts/dockerize_compose/img/docker1.jpg" class="img-fluid"> <font size="1"> Photo by <a href="https://unsplash.com/@carrier_lost?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Ian Taylor</a> on <a href="https://unsplash.com/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a> </font></p>
</div></div><p>We’ll use docker to access <code>R</code> and <code>Shiny</code>, and <code>docker-compose</code> to access <code>Caddy</code>, our webserver. The first file is the <code>dockerfile</code>. Here is our minimal <code>dockerfile</code> located in the <code>Shiny</code> development directory:</p>
<details class="code-fold">
<summary>show the <code>Dockerfile</code> code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">FROM rocker<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>shiny<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>.<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span></span>
<span id="cb6-2">RUN rm <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>rf <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>srv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>shiny<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>server</span>
<span id="cb6-3">COPY <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>power1_shiny<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>srv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>shiny<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>server<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span></span>
<span id="cb6-4">USER shiny</span>
<span id="cb6-5">CMD [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/usr/bin/shiny-server"</span>]</span></code></pre></div>
</details>
<p>This configuration file instructs Docker to build a container based on a Rocker/Shiny image (constructed as a ubuntu image with R and Shiny installed), then copy the <code>power1_shiny/app.R</code> code into the container and finally launch Shiny on (default) port 3838.</p>
<div class="page-columns page-full"><p></p><div class="no-row-height column-margin column-container"><span class="margin-aside">Note: We placed the <code>power1_shiny/app.R</code> code in the default location <code>/srv/shiny-server</code> so we only need to start the Shiny server and it will find the shiny program</span></div></div>
<p>Start by building and pushing the image to the <code>gitlab</code> container registry.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># login to gitlab</span></span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> gitlab_access_token <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> login <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-4">registry.gitlab.com <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> rgt47 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--password-stdin</span></span>
<span id="cb7-5"></span>
<span id="cb7-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-7">registry.gitlab.com/rgt47/power1_app/power1_image:v1.0 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-8">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--platform</span> linux/x86_64 .</span>
<span id="cb7-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> push <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-10">registry.gitlab.com/rgt47/power1_app/power1_image:v1.0</span></code></pre></div>
</section>
<section id="web-server" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="web-server"><span class="header-section-number">3.2</span> Web-server</h2>
<p>One of the most challenging parts of setting up a standalone server is installling and configuring the web server this is because we need our web server to perform several functions” that is 1) Provide a method for receiving and processing packets from the internet 2) Restrict access to https protocol packets. 3) host web-certificates, 4) provide authentication, and 5) forward 443 packets to 3838.</p>
<p>A <code>Caddy</code> web server configuration file (default name <code>Caddyfile</code>)</p>
<p>We’ll use <code>Caddy</code> as our web server. <code>Caddy</code> is an open-source tool that has the very useful feature of automating the acquisition and installing of an SSL certificate. (An <code>SSL</code> cert is required by most browsers to use the encrypted communication protocol https.)</p>
<p>We use the caddy configuration file to specify three critical things.</p>
<ol type="1">
<li>the site domain name.</li>
<li>the ‘reverse proxy’ map that redirects requests to port 443 (ssl port) to port 3838 (Shiny port).</li>
<li>add login credentials for all users (e.g.&nbsp;bob/vanilla47):</li>
</ol>
<p>Our barebones <code>Caddyfile</code> looks like this:</p>
<details class="code-fold">
<summary>Show the <code>Caddyfile</code> code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use caddy auth tool to generate a password via the `bcrypt` algorithm.</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># &gt; caddy hash-password --plaintext hiccup</span></span>
<span id="cb8-3"></span>
<span id="cb8-4">rgtlab.org {</span>
<span id="cb8-5">basicauth <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>power1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> {</span>
<span id="cb8-6">    Bob <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>a<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Zkx19XLiW6VYouLHR5NmfOFU0z2GTNmpkT<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>qqR7hx4IjWJPDhjvG</span>
<span id="cb8-7">}</span>
<span id="cb8-8">    root <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>srv</span>
<span id="cb8-9">    handle_path <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>power1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> {</span>
<span id="cb8-10">        reverse_proxy power1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3838</span></span>
<span id="cb8-11">    }</span>
<span id="cb8-12">    file_server</span>
<span id="cb8-13">}</span></code></pre></div>
</details>
<p>We can accomplish what we need for items 4, 5, and 7 through the Caddyfile.</p>
<p>Note:</p>
<ul>
<li>rgtlab.org is our domain name</li>
<li><code>handle_path</code> maps all https requests to port 3838 where Shiny is listening.</li>
</ul>
<p>Providing our servers domain name, <code>rgtlab.org</code> is sufficient to initiate an exchange with the <code>letsencrypt</code> service to generate an SSL certificate.</p>
</section>
<section id="docker-compose" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="docker-compose"><span class="header-section-number">3.3</span> Docker Compose</h2>
<p>And a third file is a config file for Docker Compose. Docker Compose is a Docker module that provides a framework for running multi-container applications. This docker compose YAML file instructs Docker to containerize our Shiny app, pull a caddy webserver image from Docker Hub and create a local network for the two containers to communicate in.</p>
<p>A Docker-compose configuration file (default name <code>docker-compose.yml</code>).</p>
<p>The <code>docker-compose.yml</code> file:</p>
<details class="code-fold">
<summary><code>docker-compose.yml</code>. Show the code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3.7"</span></span>
<span id="cb9-2"></span>
<span id="cb9-3">services<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-4">  power1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-5">    image<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> registry.gitlab.com<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>rgt47<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>power1_app<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>power1_image<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>v1<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.0</span></span>
<span id="cb9-6">    restart<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> unless<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>stopped</span>
<span id="cb9-7">    expose<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-8">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3838"</span></span>
<span id="cb9-9">  caddy<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-10">    image<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> caddy<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>.<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.4</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>alpine</span>
<span id="cb9-11">    restart<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> always</span>
<span id="cb9-12">    ports<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-13">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"443:443"</span></span>
<span id="cb9-14">    volumes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-15">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">$</span>PWD<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Caddyfile<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>etc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>caddy<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Caddyfile</span>
<span id="cb9-16">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">$</span>PWD<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>site<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>srv</span>
<span id="cb9-17">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> caddy_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>data</span>
<span id="cb9-18">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> caddy_config<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>config</span>
<span id="cb9-19">    depends_on<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-20">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> power1</span>
<span id="cb9-21">    environment<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-22">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> HOST<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgtlab.org"</span></span>
<span id="cb9-23">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> EMAIL<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgthomas@ucsd.edu"</span></span>
<span id="cb9-24">volumes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-25">  caddy_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-26">  caddy_config<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span></code></pre></div>
</details>
</section>
<section id="landing-page" class="level2" data-number="3.4">
<h2 data-number="3.4" class="anchored" data-anchor-id="landing-page"><span class="header-section-number">3.4</span> Landing Page</h2>
<p>Lastly, we need an html file, <code>index.html</code> in a subdirectory named <code>site</code> that provides the landing page for our server.</p>
<details class="code-fold">
<summary><code>index.html</code>. Show the code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;!</span>DOCTYPE html<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-2"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>html<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-3">  <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>head<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-4">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>meta charset<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utf-8"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-5">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>meta http<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>equiv<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X-UA-Compatible"</span> content<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IE=edge"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-6">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>meta name<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"viewport"</span> content<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"width=device-width, initial-scale=1"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-7">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>title<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>Power Calculators<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>title<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-8">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>link rel<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stylesheet"</span> href<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://unpkg.com/bulma@0.9.0/css/bulma.min.css"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-9">  <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span>head<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-10">  <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>body<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-11">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>div id<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"app"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-12">      <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>section class<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hero is-small"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-13">        <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>div class<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hero-body"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-14">          <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>div class<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"container has-text-centered"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-15">            <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>h1 class<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>RGT Lab Power Calculators<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>h1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-16">          <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span>div<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-17">        <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span>div<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-18">      <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span>section<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-19">            <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>hr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-20"></span>
<span id="cb10-21">            <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>div class<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"columns"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-22">              <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>div class<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"column is-4 is-offset-1"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-23">      <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>img src<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/rgt47/power0/blob/master/power1.png?raw=true"</span></span>
<span id="cb10-24">        width<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"200"</span> height<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"250"</span>  ”float<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> left; padding<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>px <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>px <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>px <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>px;” <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-25">              <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span>div<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-26">              <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>div class<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"column is-6"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-27">                <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>h1 class<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> Power1 App <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>h1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-28">                <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>p<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> Power <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> two<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>sample t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>test <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>p<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-29">                <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>br<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-30">                <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>a href<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./rebecca/"</span> class<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"button is-info"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>Go to app<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>a<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-31">              <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span>div<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-32">            <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span>div<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-33"></span>
<span id="cb10-34">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span>div<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-35">  <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span>body<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-36"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span>html<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
</details>
<p>At this point our <code>power1_app</code> repo looks like this:</p>
<pre class="text"><code>.
├── Caddyfile
├── Dockerfile
├── docker-compose.yml
└── site
    └── index.html</code></pre>
</section>
</section>
<section id="gitlab" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Gitlab</h1>
<p>Push the new content to gitlab.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push</span></code></pre></div>
<p>Login to <code>gitlab</code> and issue a personal access token. Save it as <code>gitlab_access_token</code> in the <code>power1_app</code> directory.</p>
<p>Next login to the virtual server and clone the repo from gitlab.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ssh</span> rgtlab.org</span>
<span id="cb13-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> gitlab_access_token <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb13-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> login registry.gitlab.com <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> rgt47 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--password-stdin</span></span>
<span id="cb13-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://gitlab.com/rgt47/power1_app.git</span></code></pre></div>
<p>Lastly, cd into <code>power1_app</code> directory and run</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> compose up <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span></span></code></pre></div>
<p>and you’re good to go! The <code>power1_shiny</code> app is available at:</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">https://rgtlab.org/</span></span></code></pre></div>
</section>
<section id="appendices" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Appendices</h1>
<section id="tip-1.-docker-on-m1-macbook." class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="tip-1.-docker-on-m1-macbook."><span class="header-section-number">5.1</span> Tip 1. Docker on M1 macbook.</h2>
<p>To get docker functioning properly with <code>rocker</code> images on M1 Mac desktop use <code>--platform</code> option.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> power1_shiny <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--platform</span> linux/x86_64 .</span>
<span id="cb16-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> 80:3838 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--platform</span> linux/x86_64 power1_shiny</span></code></pre></div>
</section>
<section id="tip-2-add-user-to-docker-group-on-server." class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="tip-2-add-user-to-docker-group-on-server."><span class="header-section-number">5.2</span> Tip 2 add user to docker group on server.</h2>
<p>Add ubuntu to the docker group to allow docker to run without sudo.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> usermod <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-aG</span> docker <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${USER}</span></span></code></pre></div>
</section>
<section id="tip-3-ssh-config-file." class="level2" data-number="5.3">
<h2 data-number="5.3" class="anchored" data-anchor-id="tip-3-ssh-config-file."><span class="header-section-number">5.3</span> Tip 3 ssh config file.</h2>
<p>For convenience, construct a <code>config</code> file in <code>~/.ssh</code> as:</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb18-1"></span>
<span id="cb18-2"></span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Host</span> rgtlab.org</span>
<span id="cb18-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">HostName</span> 13.57.139.31 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># static IP</span></span>
<span id="cb18-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">User</span> ubuntu <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># default user on ubuntu server</span></span>
<span id="cb18-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Port</span> 22  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the default port ssh uses</span></span>
<span id="cb18-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">IdentityFile</span> ~/.ssh/power1_app.pem</span></code></pre></div>
<p>then you can ssh into the new server with</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sh</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ssh rgtlab.org</span></code></pre></div>
</section>
</section>
<section id="references" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> References</h1>
<ul>
<li><a href="https://focusonr.org/posts/server_setup_aws_console/">Set up a virtual server on AWS (in anticipation of hosting Shiny apps)</a></li>
<li><a href="https://focusonr.org/posts/server_setup_aws_cli/">Set up a virtual server on AWS with AWS CLI</a></li>
<li><a href="https://hosting.analythium.io/shiny-apps-with-docker-compose-part-1-development/">Shiny Apps with Docker Compose, Part 1: Development</a></li>
<li><a href="https://hosting.analythium.io/shiny-apps-with-docker-compose-part-2-production/">Shiny Apps with Docker Compose, Part 2: Production</a></li>
</ul>
</section>
<section id="appendix" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> APPENDIX</h1>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb20-1"></span>
<span id="cb20-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">2023-12-02</span></span>
<span id="cb20-3"></span>
<span id="cb20-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">workflow.</span> steps to go from</span>
<span id="cb20-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">a</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">have</span> an idea for a shiny app to help julia</span>
<span id="cb20-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">to</span></span>
<span id="cb20-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">b</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">a</span> secure app available at https://rgtlab.org/julia_stats</span>
<span id="cb20-8"></span>
<span id="cb20-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1.</span> log into gitlab to set up the private holding repositories:</span>
<span id="cb20-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rgt47/julia_data</span> and rgt47/julia_images</span>
<span id="cb20-11"></span>
<span id="cb20-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">################################################# in gitlab </span></span>
<span id="cb20-13"></span>
<span id="cb20-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span>   click on <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">New</span> project<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> in upper right corner. Then choose <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Create Blank</span></span>
<span id="cb20-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  Project"</span>. </span>
<span id="cb20-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Then</span> in <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">repository</span> name<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> field enter <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">julia_data</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>.</span>
<span id="cb20-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span>   leave <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">deployment</span> target<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> empty.</span>
<span id="cb20-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span>   make the repo private,</span>
<span id="cb20-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span>   Click <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Create</span> project<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> blue button at the bottom of the page </span>
<span id="cb20-20">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">to</span> create the repo.</span>
<span id="cb20-21"></span>
<span id="cb20-22"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">repeat</span> for a second project named julia_images.</span>
<span id="cb20-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> project public </span>
<span id="cb20-24"></span>
<span id="cb20-25"></span>
<span id="cb20-26"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">create</span> a personal access token as follows: </span>
<span id="cb20-27"></span>
<span id="cb20-28"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">left</span> sidebar click avatar.</span>
<span id="cb20-29"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">edit</span> profile</span>
<span id="cb20-30">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">access</span> tokens</span>
<span id="cb20-31">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">click</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"add new token"</span></span>
<span id="cb20-32">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">name:</span> julia_prj</span>
<span id="cb20-33">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">expiration</span> date: one month 9/28/24</span>
<span id="cb20-34">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">scope:</span> api</span>
<span id="cb20-35"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copy</span> token to clipboard</span>
<span id="cb20-36"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">looks</span> something like this: </span>
<span id="cb20-37"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">glpat-hUKXsZKkhVAb4CT7hTZj</span></span>
<span id="cb20-38"></span>
<span id="cb20-39"></span>
<span id="cb20-40"></span>
<span id="cb20-41"></span>
<span id="cb20-42"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">back</span> on laptop</span>
<span id="cb20-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">################################################# on laptop </span></span>
<span id="cb20-44"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone both new directories to ~/sbx</span>
<span id="cb20-45"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://gitlab.com/rgt47/julia_data.git</span>
<span id="cb20-46"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://gitlab.com/rgt47/julia_images.git</span>
<span id="cb20-47"></span>
<span id="cb20-48"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> julia_data</span>
<span id="cb20-49"></span>
<span id="cb20-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create gitlab personal token file. </span></span>
<span id="cb20-51"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> gitlab_token_julia</span>
<span id="cb20-52"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">glpat-hUKXsZKkhVAb4CT7hTZj</span></span>
<span id="cb20-53"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">^D</span></span>
<span id="cb20-54"></span>
<span id="cb20-55"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> shiny_app</span>
<span id="cb20-56"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> website</span>
<span id="cb20-57"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> shiny_app</span>
<span id="cb20-58"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">develop</span> shiny code <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">app.R</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">in</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">shiny_app</span> directory.</span>
<span id="cb20-59"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">run</span> code to validate.</span>
<span id="cb20-60"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">R</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"library(shiny); runApp('app.R', launch=T)"</span></span>
<span id="cb20-61"></span>
<span id="cb20-62"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> back up to repo root</span>
<span id="cb20-63"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ~/sbx/julia_data</span>
<span id="cb20-64"></span>
<span id="cb20-65"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">create</span> dockerfile :</span>
<span id="cb20-66"></span>
<span id="cb20-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Dockerfile</span></span>
<span id="cb20-68"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">FROM</span> rocker/shiny:4.2.0</span>
<span id="cb20-69"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> rm <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-rf</span> /srv/shiny-server</span>
<span id="cb20-70"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">COPY</span> /shiny_app/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> /srv/shiny-server/</span>
<span id="cb20-71"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">USER</span> shiny</span>
<span id="cb20-72"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">CMD</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/usr/bin/shiny-server"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb20-73"></span>
<span id="cb20-74"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">run</span> docker build</span>
<span id="cb20-75"></span>
<span id="cb20-76"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> registry.gitlab.com/rgt47/julia_data/shiny_image:v1.0 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--platform</span> linux/x86_64 .</span>
<span id="cb20-77"></span>
<span id="cb20-78"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">push</span> image to gitlab</span>
<span id="cb20-79"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># login to gitlab</span></span>
<span id="cb20-80"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> gitlab_token <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> login registry.gitlab.com <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> rgt47 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--password-stdin</span></span>
<span id="cb20-81"></span>
<span id="cb20-82"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> push registry.gitlab.com/rgt47/julia_data/shiny_image:v1.0</span>
<span id="cb20-83"></span>
<span id="cb20-84"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">create</span> Caddyfile, docker-compose.yml, website/index.html</span>
<span id="cb20-85"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">see</span> end of this section for examples<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb20-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># push julia_data content to github</span></span>
<span id="cb20-87"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add .</span>
<span id="cb20-88"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"commit support files for Shiny app."</span></span>
<span id="cb20-89"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push</span>
<span id="cb20-90"></span>
<span id="cb20-91"></span>
<span id="cb20-92"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">spin-up</span> server on aws rgtlab.org</span>
<span id="cb20-93"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">need</span> keypair, security group, and instance <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">other</span> parameters known:</span>
<span id="cb20-94"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">vpc</span> id, subnet id, ami id, storage size, static ip</span>
<span id="cb20-95"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">***</span> make sure static IP is available and domain name and IP are associated</span>
<span id="cb20-96"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">before</span> beginning instance install</span>
<span id="cb20-97"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ~/bin/aws/aws_create_keypair.sh <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-k</span> julia_app</span>
<span id="cb20-98"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">key_pair_name</span> is julia_app</span>
<span id="cb20-99"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ~/bin/aws/aws_create_security_group.sh <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-s</span> julia_app</span>
<span id="cb20-100"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">error</span> in command line parsing. Expect options n and p</span>
<span id="cb20-101"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ~/bin/aws/aws_create_security_group.sh <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-n</span> julia_app <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> 22 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> 443</span>
<span id="cb20-102"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">sg</span> group name = julia_app</span>
<span id="cb20-103"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">security</span> group ID = sg-008cace70d32f6267</span>
<span id="cb20-104"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> vz <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">vim</span> .zshrc<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb20-105"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#update sg id and project name in .zshrc and source</span></span>
<span id="cb20-106"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> sz <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> .zshrc<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb20-107"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ~/bin/aws/aws_create_instance.sh <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-p</span> julia_app</span>
<span id="cb20-108"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">i-06c9b50e6c6e03874</span></span>
<span id="cb20-109"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">should</span> be only one instance id. if more than one, check aws console for multiple</span>
<span id="cb20-110"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">instances</span> with same prj name</span>
<span id="cb20-111"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">wait</span> 15 seconds for instance to generate and then associate static IP</span>
<span id="cb20-112"></span>
<span id="cb20-113"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">check</span> ~/.ssh/config to be sure it has correct keypair name and IP</span>
<span id="cb20-114"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">address.</span></span>
<span id="cb20-115"></span>
<span id="cb20-116"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check that domain name, hostname, and secret key are correct</span></span>
<span id="cb20-117"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Host</span> rgtlab.org</span>
<span id="cb20-118">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">HostName</span> 13.56.101.209</span>
<span id="cb20-119">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">StrictHostKeyChecking</span> no</span>
<span id="cb20-120">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">User</span> ubuntu</span>
<span id="cb20-121">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Port</span> 22</span>
<span id="cb20-122">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">IdentityFile</span> ~/.ssh/julia_app.pem</span>
<span id="cb20-123"></span>
<span id="cb20-124">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">should</span> be able to log in as</span>
<span id="cb20-125">   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ssh <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rgtlab.org</span></span>
<span id="cb20-126"></span>
<span id="cb20-127"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scp</span> files to rgtlab for</span>
<span id="cb20-128"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gitlab</span> access</span>
<span id="cb20-129"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> scp <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gitlab_token</span> rgtlab.org:~</span>
<span id="cb20-130"></span>
<span id="cb20-131"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">login</span> to rgtlab.org</span>
<span id="cb20-132"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">check</span> aws_start_up code worked</span>
<span id="cb20-133"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> /var/log/cloud-init-output.log</span>
<span id="cb20-134"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">clone</span> the code directory from gitlab</span>
<span id="cb20-135"></span>
<span id="cb20-136"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://gitlab.com/rgt47/julia_data.git</span>
<span id="cb20-137"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">login</span> for docker</span>
<span id="cb20-138"></span>
<span id="cb20-139"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">:</span>~/julia_data$ docker login registry.gitlab.com <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> rgt47 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> glpat-hUKXsZKkhVAb4CT7hTZj</span>
<span id="cb20-140"></span>
<span id="cb20-141"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">registry.gitlab.com/rgt47/julia_data/shiny_image:v1.0</span></span>
<span id="cb20-142"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> compose stop</span>
<span id="cb20-143"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> compose rm <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span></span>
<span id="cb20-144"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> compose pull</span>
<span id="cb20-145"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> compose up <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span></span>
<span id="cb20-146"></span>
<span id="cb20-147"></span>
<span id="cb20-148"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">~/master-repo</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">main</span> ✘<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">✖✹</span> ᐅ cat Caddyfile</span>
<span id="cb20-149"></span>
<span id="cb20-150"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rgtlab.org</span> {</span>
<span id="cb20-151"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">basicauth</span> /julia/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> {</span>
<span id="cb20-152">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Bob</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$2</span>a<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$1</span>4<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$Zkx19XLiW6VYouLHR5NmfOFU0z2GTNmpkT</span>/5qqR7hx4IjWJPDhjvG</span>
<span id="cb20-153"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-154"></span>
<span id="cb20-155">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">root</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> /srv</span>
<span id="cb20-156">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">handle_path</span> /julia/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> {</span>
<span id="cb20-157">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">reverse_proxy</span> julia:3838</span>
<span id="cb20-158">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-159">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">file_server</span></span>
<span id="cb20-160"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-161"></span>
<span id="cb20-162"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> cat <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker-compose.yml</span></span>
<span id="cb20-163"></span>
<span id="cb20-164"></span>
<span id="cb20-165"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">version:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3.7"</span></span>
<span id="cb20-166"></span>
<span id="cb20-167"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">services:</span></span>
<span id="cb20-168">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">watchtower:</span></span>
<span id="cb20-169">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">container_name:</span> watchtower</span>
<span id="cb20-170">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">restart:</span> always</span>
<span id="cb20-171">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">environment:</span></span>
<span id="cb20-172">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">WATCHTOWER_POLL_INTERVAL:</span> 3600</span>
<span id="cb20-173">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">TZ:</span> America/Los_Angeles</span>
<span id="cb20-174">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">WATCHTOWER_CLEANUP:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"true"</span></span>
<span id="cb20-175">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">WATCHTOWER_DEBUG:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"true"</span></span>
<span id="cb20-176">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">image:</span> containrrr/watchtower</span>
<span id="cb20-177">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">volumes:</span></span>
<span id="cb20-178">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> /var/run/docker.sock:/var/run/docker.sock</span>
<span id="cb20-179">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> /home/ubuntu/.docker/config.json:/config.json</span>
<span id="cb20-180">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">julia:</span></span>
<span id="cb20-181">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">image:</span> registry.gitlab.com/rgt47/julia_data/shiny_image:v1.0</span>
<span id="cb20-182">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">restart:</span> unless-stopped</span>
<span id="cb20-183">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ports:</span></span>
<span id="cb20-184">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9000:3838"</span></span>
<span id="cb20-185">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">caddy:</span></span>
<span id="cb20-186">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">image:</span> caddy:2.6.4-alpine</span>
<span id="cb20-187">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ports:</span></span>
<span id="cb20-188">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"80:80"</span></span>
<span id="cb20-189">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"443:443"</span></span>
<span id="cb20-190">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">volumes:</span></span>
<span id="cb20-191">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PWD</span>/Caddyfile:/etc/caddy/Caddyfile</span>
<span id="cb20-192">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PWD</span>/website:/srv</span>
<span id="cb20-193">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> caddy_data:/data</span>
<span id="cb20-194"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">volumes:</span></span>
<span id="cb20-195">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">caddy_data:</span></span>
<span id="cb20-196"></span>
<span id="cb20-197"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">~/master-repo</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">main</span> ✘<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">✖✹</span> ᐅ cat site/index.html</span>
<span id="cb20-198"></span>
<span id="cb20-199"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>!DOCTYPE <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">html</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-200"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>html<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-201">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>head<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-202">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>meta <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">charset</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utf-8"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-203">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>meta <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">http-equiv=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X-UA-Compatible"</span> content=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IE=edge"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-204">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>meta <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"viewport"</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">content</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"width=device-width, initial-scale=1"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-205">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>Power <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Calculators</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-206">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>link <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">rel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stylesheet"</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">href</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://unpkg.com/bulma@0.9.0/css/bulma.min.css"</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-207">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/head<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-208">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>body<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-209">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>div <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"app"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-210">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>section <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hero is-small"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-211">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>div <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hero-body"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-212">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>div <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"container has-text-centered"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-213">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>h1 <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>RGT <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Lab</span> Power Calculators<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/h1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-214">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/div<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-215">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/div<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-216">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/section<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-217">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>hr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-218"></span>
<span id="cb20-219">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>div <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"columns"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-220">              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>div <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"column is-4 is-offset-1"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-221">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>img <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">src</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/rgt47/power0/blob/master/power1.png?raw=true"</span></span>
<span id="cb20-222">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"200"</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"250"</span>  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">”float:</span> left<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">padding:</span> 3px 3px 0px 3px<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">”</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-223">              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/div<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-224">              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>div <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"column is-6"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-225">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>h1 <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> Power1 <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">App</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/h1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-226">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> Power <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> two<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-sample</span> t-test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-227">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>br<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-228">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>a <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">href</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./julia/"</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"button is-info"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>Go <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">to</span> app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-229">              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/div<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-230">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/div<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-231"></span>
<span id="cb20-232"></span>
<span id="cb20-233">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/div<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-234">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/body<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-235"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/html<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-236"></span></code></pre></div>
<section id="prerequisites" class="level2" data-number="7.1">
<h2 data-number="7.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">7.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="7.2">
<h2 data-number="7.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">7.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="7.3">
<h2 data-number="7.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">7.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="7.4">
<h2 data-number="7.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">7.4</span> Further Reading</h2>
<p>In development</p>


<!-- -->

</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {A {Concise} {Strategy} to Get Your {Shiny} {App} {Online,}
    {Securely} and {Continuously} {Updated.}},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/dockerize_compose/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“A Concise Strategy to Get Your
Shiny App Online, Securely and Continuously Updated. .”</span> May 13,
2025. <a href="https://focusonr.org/posts/dockerize_compose/">https://focusonr.org/posts/dockerize_compose/</a>.
</div></div></section></div> ]]></description>
  <category>AWS</category>
  <category>Docker</category>
  <category>Shiny</category>
  <category>docker-compose</category>
  <guid>https://focusonr.org/posts/dockerize_compose/</guid>
  <pubDate>Wed, 14 May 2025 02:36:04 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/dockerize_compose/img/aws.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Making optimal use of ChatGPT and other chatbots for data science</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/chatbots_in_stats/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/chatbots_in_stats/img/chatgpt.png" class="img-fluid figure-img"></p>
<figcaption>chatGPT</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>When it comes to data science, having access to the right tools and resources can make a significant difference in the quality and efficiency of your work. Chatbots, such as ChatGPT, have emerged as powerful tools that can assist data scientists in various tasks, from data analysis and visualization to model building and evaluation. In this guide, we’ll explore how you can make optimal use of ChatGPT and other chatbots for data science tasks, providing tips and examples to help you leverage these tools effectively.</p>
<section id="whats-in-a-name" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="whats-in-a-name"><span class="header-section-number">1.1</span> Whats in a name?</h2>
<p>GPT in ChatGPT stands for Generative Pre-trained Transformer. • Generative: It generates text rather than just analyzing or classifying it. • Pre-trained: It is trained on a large dataset before being fine-tuned for specific tasks. • Transformer: It uses the Transformer architecture, a neural network model designed for natural language processing (NLP).</p>
<p>Essentially, ChatGPT is a chatbot built on a GPT model, which is designed to understand and generate human-like text based on prompts</p>
<p>From a recent article in Nature:</p>
<p>“ChatGPT stunned the world on its launch in November 2022. Powered by a large language model (LLM) and trained on much of the text published on the Internet, the artificial intelligence (AI) chatbot, created by OpenAI in San Francisco, California, makes the latest advances in natural-language processing broadly accessible by providing a dialogue-based interface capable of answering complex questions, composing sophisticated essays and generating source code. One obvious question was: how could this tool improve science?”</p>
<p><a href="https://www.nature.com/articles/d41586-024-02630-z?utm_source=Live+Audience&amp;utm_campaign=9cc439b1df-nature-briefing-daily-20240815&amp;utm_medium=email&amp;utm_term=0_b27a691814-9cc439b1df-50792172">Nature: Chatbots in science: What can ChatGPT do for you?</a></p>
<p>Lets start with a couple examples to get an idea of how to use ChatGPT for data science tasks.</p>
</section>
<section id="example-work-up-of-a-regression-analysis-for-the-iris-data-set." class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="example-work-up-of-a-regression-analysis-for-the-iris-data-set."><span class="header-section-number">1.2</span> Example work up of a regression analysis for the iris data set.</h2>
<ol type="1">
<li>Prompt: “I want to do a trial data analysis in R of the Fisher iris data set that is distributed with R. I want to start with logistic regression analysis and want to use K-fold cross-validation. I want to use an ROC curve to visualize the results.”</li>
</ol>
<p>comment: this is a good example of a prompt that is clear and specific. It provides many of the necessary context and requirements for the task. However, it is not completely unambiguous. It does not specify the number of folds for cross-validatikn. It also does not specify the R package to use for the aanalysis. There ae several to choose from.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">install.packages</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"caret"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install if not already installed</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">install.packages</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pROC"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install if not already installed</span></span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">install.packages</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glmnet"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install if not already installed</span></span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">library</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">caret</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">library</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pROC</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">library</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">glmnet</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prepare binary dataset</span></span>
<span id="cb1-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">data</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">iris</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">iris_binary</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- iris[iris<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$Species</span> != <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"setosa"</span>, ]</span>
<span id="cb1-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">iris_binary</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$Species</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- factor<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">iris_binary</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$Species</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Split the data into training and test sets</span></span>
<span id="cb1-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">set.seed</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">42</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">trainIndex</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- createDataPartition<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">iris_binary</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$Species</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> p = 0.8, list = FALSE<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">train_data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- iris_binary[trainIndex, ]</span>
<span id="cb1-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">test_data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- iris_binary[-trainIndex, ]</span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the data into matrix format as required by glmnet</span></span>
<span id="cb1-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">x_train</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- model.matrix<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Species</span> ~ ., train_data<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[,-1]</span></span>
<span id="cb1-21"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">y_train</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- train_data<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$Species</span></span>
<span id="cb1-22"></span>
<span id="cb1-23"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">x_test</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- model.matrix<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Species</span> ~ ., test_data<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[,-1]</span></span>
<span id="cb1-24"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">y_test</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- test_data<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$Species</span></span>
<span id="cb1-25"></span>
<span id="cb1-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up cross-validation for Lasso regression on the training data</span></span>
<span id="cb1-27"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">train_control</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- trainControl<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">method</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cv"</span>, number = 10, classProbs = TRUE, summaryFunction = twoClassSummary<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-28"></span>
<span id="cb1-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the lasso model using glmnet (alpha=1 for Lasso)</span></span>
<span id="cb1-30"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lasso_model</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- train<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">x</span> = x_train, y = y_train, method = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glmnet"</span>, trControl = train_control, tuneGrid = expand.grid<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">alpha</span> = 1, lambda = seq<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">0.001,</span> 0.1, by = 0.001<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> family = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"binomial"</span>, metric = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ROC"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-31"></span>
<span id="cb1-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make predictions on the test set</span></span>
<span id="cb1-33"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">test_predictions</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- predict<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lasso_model,</span> newdata = x_test, type = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prob"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[,2]</span></span>
<span id="cb1-34"></span>
<span id="cb1-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot ROC curve for the test set</span></span>
<span id="cb1-36"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">roc_curve_test</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- roc<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">y_test,</span> test_predictions, levels = rev<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">levels</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">y_test</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)))</span></span>
<span id="cb1-37"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">plot</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">roc_curve_test,</span> col = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, lwd = 2, main = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ROC Curve for Lasso Regression on Test Data"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-38"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">v</span></span>
<span id="cb1-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate AUC and its 95% confidence interval</span></span>
<span id="cb1-40"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">auc_value</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- auc<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">roc_curve_test</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-41"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ci</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- ci.auc<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">roc_curve_test,</span> conf.level = 0.95<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-42"></span>
<span id="cb1-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add AUC with 95% confidence interval to the plot</span></span>
<span id="cb1-44"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">legend_text</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- paste<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AUC ="</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> round<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">auc_value,</span> 2<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"\n95% CI:"</span>, round<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ci</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> 2<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span>, round<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ci</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> 2<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb1-45"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">legend</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottomright"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> legend = legend_text, col = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, lwd = 2<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div>
<p>On completion of the analysis, the user may have additional questions or requests. For example, they may ask why use 10 folds specifically? Or why split the 80:20? Why use the lasso regression model?</p>
<p>They can just ask the chatbot directly.</p>
<p>Pronpt: why split the data set if we’re doing 10-fold cross validation?</p>
<p>ChatGPT answer: ### <strong>Why Not Split?</strong> - <strong>10-fold CV inherently splits the data multiple times</strong><br>
- Each fold acts as a validation set once, while the remaining 9 folds serve as the training set. - Every observation is used for both training and testing across different iterations.</p>
<ul>
<li><strong>An additional 80:20 split is redundant</strong>
<ul>
<li>It would unnecessarily reduce the amount of data available for training.</li>
<li>K-fold CV already provides a better estimate of model performance.</li>
</ul></li>
</ul>
<section id="when-would-we-still-use-an-8020-split" class="level3" data-number="1.2.1">
<h3 data-number="1.2.1" class="anchored" data-anchor-id="when-would-we-still-use-an-8020-split"><span class="header-section-number">1.2.1</span> <strong>When Would We Still Use an 80:20 Split?</strong></h3>
<ul>
<li>If we want <strong>one final test set</strong> to evaluate model performance <strong>after tuning</strong> hyperparameters using K-fold CV.
<ul>
<li>Example: Use <strong>80% for training</strong>, perform <strong>10-fold CV on this training set</strong>, and then evaluate on the held-out <strong>20% test set</strong>.</li>
<li>This prevents <strong>data leakage</strong> and ensures the final model is evaluated on completely unseen data.</li>
</ul></li>
</ul>
<hr>
</section>
<section id="best-practice-for-model-selection" class="level3" data-number="1.2.2">
<h3 data-number="1.2.2" class="anchored" data-anchor-id="best-practice-for-model-selection"><span class="header-section-number">1.2.2</span> <strong>Best Practice for Model Selection</strong></h3>
<ol type="1">
<li><strong>Cross-validation alone (no 80:20 split)</strong>
<ul>
<li>When optimizing model parameters and assessing performance.<br>
</li>
<li>Avoids unnecessary data loss.<br>
</li>
<li>Every observation contributes to both training and validation.</li>
</ul></li>
<li><strong>80:20 Split + Cross-validation on training set</strong>
<ul>
<li>If we want to <strong>train the final model on the full dataset</strong>,<br>
</li>
<li>Then evaluate <strong>generalization</strong> on a completely independent holdout test set.</li>
</ul></li>
</ol>
<p>For your Fisher Iris dataset analysis, <strong>just using 10-fold CV is sufficient</strong> unless you plan to tune hyperparameters before a final evaluation. 🚀 for a 95% confidence interval calculationgM “should I split my data set into train and test parts if I’m using k-fold cross-validation?” “add a 95% confidence interval calculation to the AUC annotation in the ROC plot” “do the same analysis but use lasso regression instead of logistic regression”</p>
</section>
</section>
</section>
<section id="r-code" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> R code</h1>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load necessary packages</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Data manipulation</span></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(caret)       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># K-fold cross-validation</span></span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(pROC)        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ROC curve analysis</span></span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the Iris dataset</span></span>
<span id="cb2-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(iris)</span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter to create a binary classification problem</span></span>
<span id="cb2-10">iris_bin <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> iris <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Species <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"virginica"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use only "setosa" and "versicolor"</span></span>
<span id="cb2-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Species =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(Species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"setosa"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"versicolor"</span>)))</span>
<span id="cb2-13"></span>
<span id="cb2-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up 10-fold cross-validation</span></span>
<span id="cb2-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For reproducibility</span></span>
<span id="cb2-16">cv_folds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createFolds</span>(iris_bin<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">list =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">returnTrain =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-17"></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store results</span></span>
<span id="cb2-19">roc_curves <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb2-20">predictions <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">actual =</span> iris_bin<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">predicted_prob =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)</span>
<span id="cb2-21"></span>
<span id="cb2-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Perform K-fold cross-validation</span></span>
<span id="cb2-23"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(cv_folds)) {</span>
<span id="cb2-24">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Split into training and test sets</span></span>
<span id="cb2-25">  train_index <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cv_folds[[i]]</span>
<span id="cb2-26">  train_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> iris_bin[train_index, ]</span>
<span id="cb2-27">  test_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> iris_bin[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>train_index, ]</span>
<span id="cb2-28">  </span>
<span id="cb2-29">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fit logistic regression model</span></span>
<span id="cb2-30">  model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(Species <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> ., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> train_data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> binomial)</span>
<span id="cb2-31">  </span>
<span id="cb2-32">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make predictions (probability of being "versicolor")</span></span>
<span id="cb2-33">  test_probs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> test_data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"response"</span>)</span>
<span id="cb2-34">  </span>
<span id="cb2-35">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store predictions</span></span>
<span id="cb2-36">  predictions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>predicted_prob[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>train_index] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> test_probs</span>
<span id="cb2-37">  </span>
<span id="cb2-38">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute ROC curve</span></span>
<span id="cb2-39">  roc_curves[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">roc</span>(test_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species, test_probs, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">levels</span>(iris_bin<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species)))</span>
<span id="cb2-40">}</span>
<span id="cb2-41"></span>
<span id="cb2-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute mean ROC curve</span></span>
<span id="cb2-43">roc_avg <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">roc</span>(predictions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>actual, predictions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>predicted_prob, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">levels</span>(iris_bin<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species)))</span>
<span id="cb2-44"></span>
<span id="cb2-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot ROC curve</span></span>
<span id="cb2-46"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(roc_avg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ROC Curve for Logistic Regression (Iris Data)"</span>)</span>
<span id="cb2-47"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">a =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Diagonal reference line</span></span></code></pre></div>
</section>
<section id="complete-r-code-for-lasso-regression-with-loocv-on-the-entire-dataset" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Complete R Code for Lasso Regression with LOOCV on the Entire Dataset</h1>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prepare binary dataset</span></span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(iris)</span>
<span id="cb3-4">iris_binary <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> iris[iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"setosa"</span>, ]</span>
<span id="cb3-5">iris_binary<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(iris_binary<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species)</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the data into matrix format as required by glmnet</span></span>
<span id="cb3-8">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">model.matrix</span>(Species <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> ., iris_binary)[,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb3-9">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> iris_binary<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species</span>
<span id="cb3-10"></span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up LOOCV for Lasso regression on the entire dataset</span></span>
<span id="cb3-12">train_control <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trainControl</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LOOCV"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">classProbs =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">summaryFunction =</span> twoClassSummary)</span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the lasso model using glmnet (alpha=1 for Lasso)</span></span>
<span id="cb3-15">lasso_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">train</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glmnet"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trControl =</span> train_control, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tuneGrid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand.grid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lambda =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>)), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"binomial"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metric =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ROC"</span>)</span>
<span id="cb3-16"></span>
<span id="cb3-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make predictions using LOOCV</span></span>
<span id="cb3-18">predictions <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(lasso_model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prob"</span>)[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb3-19"></span>
<span id="cb3-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot ROC curve for the entire dataset</span></span>
<span id="cb3-21">roc_curve <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">roc</span>(y, predictions, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">levels</span>(y)))</span>
<span id="cb3-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(roc_curve, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ROC Curve for Lasso Regression with LOOCV"</span>)</span>
<span id="cb3-23"></span>
<span id="cb3-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate AUC and its 95% confidence interval</span></span>
<span id="cb3-25">auc_value <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">auc</span>(roc_curve)</span>
<span id="cb3-26">ci <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ci.auc</span>(roc_curve, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.level =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>)</span>
<span id="cb3-27"></span>
<span id="cb3-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add AUC with 95% confidence interval to the plot</span></span>
<span id="cb3-29">legend_text <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AUC ="</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(auc_value, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">95% CI:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(ci[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(ci[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb3-30"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottomright"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> legend_text, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</section>
<section id="todays-date-is-2024-11-10" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> today’s date is 2024-11-10</h1>
<p>Trying to get the vim plugin for openai to work. having trouble vim can’t find the python module OpenAI</p>
</section>
<section id="useful-prompts" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> useful prompts:</h1>
<p>Have chatGPT provide the README.md file as a download. “provide the README.md file as a download.”</p>
</section>
<section id="guide-to-building-submitting-and-managing-the-zzlongplot-r-package" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Guide to Building, Submitting, and Managing the <code>zzlongplot</code> R Package</h1>
<section id="step-1-setting-up-the-package-structure" class="level2" data-number="6.1">
<h2 data-number="6.1" class="anchored" data-anchor-id="step-1-setting-up-the-package-structure"><span class="header-section-number">6.1</span> Step 1: Setting Up the Package Structure</h2>
<ol type="1">
<li><strong>Create a New Package Directory</strong>:
<ul>
<li><p>Use <code>usethis</code> to create a package directory:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_package</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"path/to/zzlongplot"</span>)</span></code></pre></div></li>
<li><p>This sets up the necessary directory structure with folders like <code>R/</code> and files like <code>DESCRIPTION</code>.</p></li>
</ul></li>
<li><strong>Add the Core Script</strong>:
<ul>
<li>Place the <code>zzlongplot.R</code> file in the <code>R/</code> directory.</li>
</ul></li>
<li><strong>Set Up the <code>DESCRIPTION</code> File</strong>:
<ul>
<li><p>Edit the <code>DESCRIPTION</code> file to include metadata about the package. Use <code>usethis::use_description()</code> to create and fill this file:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use_description</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fields =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb5-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Flexible Longitudinal Plotting in R"</span>,</span>
<span id="cb5-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Description =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Provides tools for generating observed and change plots in longitudinal datasets."</span>,</span>
<span id="cb5-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Version =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.1.0"</span>,</span>
<span id="cb5-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Author =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Your Name [aut, cre]"</span>,</span>
<span id="cb5-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Maintainer =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Your Name &lt;your_email@example.com&gt;"</span>,</span>
<span id="cb5-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">License =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MIT"</span>,</span>
<span id="cb5-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Encoding =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UTF-8"</span></span>
<span id="cb5-9">))</span></code></pre></div></li>
</ul></li>
<li><strong>Add Dependencies</strong>:
<ul>
<li><p>List package dependencies in the <code>DESCRIPTION</code> file under <code>Imports</code>. For example:</p>
<pre class="plaintext"><code>Imports:
  dplyr,
  ggplot2,
  patchwork</code></pre></li>
</ul></li>
</ol>
<hr>
</section>
<section id="step-2-document-the-package" class="level2" data-number="6.2">
<h2 data-number="6.2" class="anchored" data-anchor-id="step-2-document-the-package"><span class="header-section-number">6.2</span> Step 2: Document the Package</h2>
<ol type="1">
<li><strong>Add Roxygen2 Comments</strong>:
<ul>
<li>Ensure all functions in <code>zzlongplot.R</code> have Roxygen2 comments for documentation.</li>
</ul></li>
<li><strong>Generate Documentation</strong>:
<ul>
<li><p>Run:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">document</span>()</span></code></pre></div></li>
<li><p>This creates help files in the <code>man/</code> directory and updates the <code>NAMESPACE</code> file.</p></li>
</ul></li>
<li><strong>Create a Vignette</strong>:
<ul>
<li><p>Add the vignette to introduce the package:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use_vignette</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Introduction_to_zzlongplot"</span>)</span></code></pre></div></li>
<li><p>Place the provided <code>zzlongplot-vignette.Rmd</code> file in the <code>vignettes/</code> directory and build it:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build_vignettes</span>()</span></code></pre></div></li>
</ul></li>
</ol>
<hr>
</section>
<section id="step-3-test-the-package" class="level2" data-number="6.3">
<h2 data-number="6.3" class="anchored" data-anchor-id="step-3-test-the-package"><span class="header-section-number">6.3</span> Step 3: Test the Package</h2>
<ol type="1">
<li><strong>Add Unit Tests</strong>:
<ul>
<li><p>Use <code>usethis</code> to set up a testing framework:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use_testthat</span>()</span></code></pre></div></li>
<li><p>Place the <code>test-zzlongplot.R</code> file in <code>tests/testthat/</code>.</p></li>
</ul></li>
<li><strong>Run Tests</strong>:
<ul>
<li><p>Run all tests:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test</span>()</span></code></pre></div></li>
</ul></li>
</ol>
<hr>
</section>
<section id="step-4-check-the-package" class="level2" data-number="6.4">
<h2 data-number="6.4" class="anchored" data-anchor-id="step-4-check-the-package"><span class="header-section-number">6.4</span> Step 4: Check the Package</h2>
<ol type="1">
<li><strong>Build and Check</strong>:
<ul>
<li><p>Build the package:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build</span>()</span></code></pre></div></li>
<li><p>Check the package for CRAN compliance:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">check</span>()</span></code></pre></div></li>
</ul></li>
<li><strong>Fix Issues</strong>:
<ul>
<li>Address any warnings or errors reported by <code>devtools::check()</code>.</li>
</ul></li>
</ol>
<hr>
</section>
<section id="step-5-submit-to-cran" class="level2" data-number="6.5">
<h2 data-number="6.5" class="anchored" data-anchor-id="step-5-submit-to-cran"><span class="header-section-number">6.5</span> Step 5: Submit to CRAN</h2>
<ol type="1">
<li><strong>Prepare for Submission</strong>:
<ul>
<li><p>Ensure the package passes <code>R CMD check</code> with no warnings, errors, or notes.</p></li>
<li><p>Compress the package into a <code>.tar.gz</code> file using:</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build</span>()</span></code></pre></div></li>
</ul></li>
<li><strong>Submit to CRAN</strong>:
<ul>
<li>Go to the <a href="https://cran.r-project.org/submit.html">CRAN submission page</a>.</li>
<li>Upload the <code>.tar.gz</code> file and fill out the required metadata.</li>
</ul></li>
<li><strong>Respond to Feedback</strong>:
<ul>
<li>CRAN maintainers might request changes. Address them promptly and resubmit if needed.</li>
</ul></li>
</ol>
<hr>
</section>
<section id="step-6-set-up-a-github-repository" class="level2" data-number="6.6">
<h2 data-number="6.6" class="anchored" data-anchor-id="step-6-set-up-a-github-repository"><span class="header-section-number">6.6</span> Step 6: Set Up a GitHub Repository</h2>
<ol type="1">
<li><strong>Initialize a Git Repository</strong>:
<ul>
<li><p>In the package directory, run:</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> init</span>
<span id="cb15-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add .</span>
<span id="cb15-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Initial commit"</span></span></code></pre></div></li>
</ul></li>
<li><strong>Create a Repository on GitHub</strong>:
<ul>
<li><p>Use the GitHub website or the <code>gh</code> CLI tool:</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> repo create yourusername/zzlongplot <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--public</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>.</span></code></pre></div></li>
</ul></li>
<li><strong>Push the Code</strong>:
<ul>
<li><p>Push the code to GitHub:</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> branch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-M</span> main</span>
<span id="cb17-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> origin main</span></code></pre></div></li>
</ul></li>
</ol>
<hr>
</section>
<section id="step-7-manage-the-development-repository" class="level2" data-number="6.7">
<h2 data-number="6.7" class="anchored" data-anchor-id="step-7-manage-the-development-repository"><span class="header-section-number">6.7</span> Step 7: Manage the Development Repository</h2>
<ol type="1">
<li><strong>Add Version Control</strong>:
<ul>
<li><p>Use Git for version control. For example, create a branch for new features:</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb18-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> checkout <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-b</span> feature-new-plot</span></code></pre></div></li>
</ul></li>
<li><strong>Tag Releases</strong>:
<ul>
<li><p>Tag versions for releases:</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> tag <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-a</span> v0.1.0 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"First release"</span></span>
<span id="cb19-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push origin v0.1.0</span></code></pre></div></li>
</ul></li>
<li><strong>Add Continuous Integration</strong>:
<ul>
<li><p>Set up GitHub Actions for testing:</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">usethis::use_github_action_check_standard()</span></span></code></pre></div></li>
</ul></li>
<li><strong>Publish Development Versions</strong>:
<ul>
<li>Use GitHub to manage development versions and issues.</li>
</ul></li>
</ol>
<hr>
</section>
<section id="step-8-maintain-the-package" class="level2" data-number="6.8">
<h2 data-number="6.8" class="anchored" data-anchor-id="step-8-maintain-the-package"><span class="header-section-number">6.8</span> Step 8: Maintain the Package</h2>
<ol type="1">
<li><strong>Address Issues</strong>:
<ul>
<li>Monitor and address issues reported by users.</li>
</ul></li>
<li><strong>Update the Package</strong>:
<ul>
<li>For updates, increment the version number in <code>DESCRIPTION</code> and tag the new version.</li>
</ul></li>
</ol>
<hr>
</section>
<section id="prerequisites" class="level2" data-number="6.9">
<h2 data-number="6.9" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">6.9</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="6.10">
<h2 data-number="6.10" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">6.10</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="6.11">
<h2 data-number="6.11" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">6.11</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="6.12">
<h2 data-number="6.12" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">6.12</span> Further Reading</h2>
<p>In development</p>


<!-- -->

</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Making Optimal Use of {ChatGPT} and Other Chatbots for Data
    Science},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/chatbots_in_stats/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Making Optimal Use of ChatGPT
and Other Chatbots for Data Science.”</span> May 13, 2025. <a href="https://focusonr.org/posts/chatbots_in_stats/">https://focusonr.org/posts/chatbots_in_stats/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/chatbots_in_stats/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/chatbots_in_stats/img/chatGPT" medium="image"/>
</item>
<item>
  <title>coding with genAI</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/coding_with_genAI/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/coding_with_genAI/img/chatgpt.png" class="img-fluid figure-img"></p>
<figcaption>quarto</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>start with notes from two blog posts:</p>
<p><a href="https://learnprompting.org/blog/how_to_use_generative_AI_for_code?srsltid=AfmBOor0napY262j0HcM1DHf3bsQA1cCtiO8t1HPaJmm2mu8d4K-NGxa">How to Use Generative AI for Coding: The Ultimate Guide for Every Programmer</a></p>
<p><a href="https://www.youtube.com/watch?v=b70ME9N-ct0&amp;t=14s">ChatGPT for Data Analysis - YouTube</a></p>
<section id="prerequisites" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">1.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">1.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">1.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">1.4</span> Further Reading</h2>
<p>In development</p>


<!-- -->

</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Coding with {genAI}},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/coding_with_genAI/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Coding with genAI.”</span> May
13, 2025. <a href="https://focusonr.org/posts/coding_with_genAI/">https://focusonr.org/posts/coding_with_genAI/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/coding_with_genAI/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/coding_with_genAI/img/chatgpt.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>Configure the command line for data science development</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/config_term_zsh/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/config_term_zsh/img/iterm2.png" class="img-fluid figure-img"></p>
<figcaption>iterm2</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>The command line is a powerful tool for data science development. It allows you to interact with your computer in a way that is not possible with a graphical user interface. In this guide, we will show you how to configure the command line for data science development on both macOS and Linux.</p>
<p>On both macOS and linux, we will be using kitty as our terminal emulator and zsh as our shell.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">brew</span> install kitty</span></code></pre></div>
<p>Install kitty on Linux mint as follow:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt-get install kitty</span></code></pre></div>
<p>There are a huge number of configuration options for kitty. Here are the few that recommened to change for usability purposes.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ~/.config/kitty/kitty.conf</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">map</span> ctrl+shift+z       toggle_layout stack</span>
<span id="cb3-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">draw_minimal_borders</span> yes</span>
<span id="cb3-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">background_opacity</span> 0.99</span>
<span id="cb3-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">font_family</span>     FiraCode Nerd Font Mono</span>
<span id="cb3-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">font_size</span>       14.0</span>
<span id="cb3-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">window_margin_width</span>    5 </span>
<span id="cb3-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">background_image</span>        /Users/zenn/docs/backgrounds/NxyVIMp.jpeg</span>
<span id="cb3-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">window_border_width</span>     1.5pt</span>
<span id="cb3-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">include</span> current-theme.conf</span></code></pre></div>
</section>
<section id="notes-on-setting-up-iterm2" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Notes on setting up iterm2:</h1>
<p>Useful Keyboard shortcuts</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cmd</span> + shift + enter <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> maximize current window <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">especially</span> useful when you use split windows<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cmd</span> + t <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> open a new tab</span>
<span id="cb4-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cmd</span> + w <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> close focused window</span>
<span id="cb4-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cmd</span> + d <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> split window vertically</span>
<span id="cb4-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cmd</span> + shift + d <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> split window horizontally</span>
<span id="cb4-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cmd</span> + <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">{</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">..</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> Move to tab with number <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">{</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">..</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cmd</span> + i <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> change name of the tab</span></code></pre></div>
<p>Set up the status bar for time, git, directory. This reduces the burden on the shell prompt.</p>
<p>settings/profiles/session/</p>
<p>check “status bar enabled” at bottom of screen</p>
<p>In interactive screen drag “current directory”, “Empty space”, and “git state” into Active components section.</p>
<p>settings/appearance</p>
<p>“Status Bar location” select “Bottom”</p>
<p>or alternatively</p>
<p>cd ~</p>
<p>ln -s ~/Dropbox/dotfiles/iterm2Profiles.json .</p>
<p>in iterm2 profiles/Other Actions/Import JSON profiles iterm2Profiles.json</p>
<p>Set out the configuration needs for the shell</p>
<p>Good place to start:</p>
<p>discuss plugins particularly</p>
<p>z vs scd vs wd</p>
</section>
<section id="zshrc" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> <code>.zshrc</code></h1>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"></span>
<span id="cb5-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PS1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%B%2~ %(?:%F{green}☕%f:%F{red}☔%f)%b '</span></span>
<span id="cb5-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">setopt</span> auto_cd auto_pushd pushd_ignore_dups pushdminus</span>
<span id="cb5-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">bindkey</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span></span>
<span id="cb5-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">autoload</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-U</span> compinit <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">compinit</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">compinit</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">compdef</span> _dirs d</span>
<span id="cb5-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> /opt/homebrew/etc/profile.d/autojump.sh</span>
<span id="cb5-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> ~/.iterm2_shell_integration.zsh</span>
<span id="cb5-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</span>
<span id="cb5-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span>  /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh</span>
<span id="cb5-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> ~/.config/zsh/.zsh_aliases</span>
<span id="cb5-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> ~/.config/zsh/.zsh_functions</span>
<span id="cb5-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> ~/.config/zsh/.zsh_exports</span></code></pre></div>
<section id="configzsh.zsh_aliases" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="configzsh.zsh_aliases"><span class="header-section-number">3.1</span> <code>~/.config/zsh/.zsh_aliases</code></h2>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb6-1"></span>
<span id="cb6-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> mm=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mutt'</span></span>
<span id="cb6-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> sk=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'open -a Skim'</span></span>
<span id="cb6-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> vc=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vim ~/.vimrc'</span></span>
<span id="cb6-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> vz=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vim ~/.zshrc'</span></span>
<span id="cb6-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> sz=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'source ~/.zshrc'</span></span>
<span id="cb6-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> p2=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enscript -C -2 -r -j --media=Letter'</span></span>
<span id="cb6-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> p1=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enscript  -j --media=Letter'</span></span>
<span id="cb6-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> yr=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yabai --restart-service"</span></span>
<span id="cb6-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> lt=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'eza -lrFha -sold'</span></span>
<span id="cb6-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> mvim=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Applications/MacVim.app/Contents/bin/mvim"</span></span>
<span id="cb6-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> tp=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'trash-put -v'</span></span>
<span id="cb6-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> rm=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'echo "This is not the command you are looking for."; false'</span></span>
<span id="cb6-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> s=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'scd'</span></span>
<span id="cb6-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> ZZ=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'exit'</span></span>
<span id="cb6-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> r=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"radian"</span></span>
<span id="cb6-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> nt=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nvim"</span></span>
<span id="cb6-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-g</span> ...=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'../..'</span></span>
<span id="cb6-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-g</span> ....=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'../../..'</span></span>
<span id="cb6-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-g</span> .....=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'../../../..'</span></span>
<span id="cb6-21"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-g</span> ......=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'../../../../..'</span></span>
<span id="cb6-22"></span>
<span id="cb6-23"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cd -'</span></span>
<span id="cb6-24"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> 1=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cd -1'</span></span>
<span id="cb6-25"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> 2=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cd -2'</span></span>
<span id="cb6-26"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> 3=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cd -3'</span></span>
<span id="cb6-27"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> 4=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cd -4'</span></span>
<span id="cb6-28"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> 5=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cd -5'</span></span>
<span id="cb6-29"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> 6=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cd -6'</span></span>
<span id="cb6-30"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> 7=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cd -7'</span></span>
<span id="cb6-31"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> 8=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cd -8'</span></span>
<span id="cb6-32"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> 9=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cd -9'</span></span>
<span id="cb6-33"></span>
<span id="cb6-34"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> md=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mkdir -p'</span></span>
<span id="cb6-35"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> rd=rmdir</span>
<span id="cb6-36"></span>
<span id="cb6-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># List directory contents</span></span>
<span id="cb6-38"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> lsa=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ls -lah'</span></span>
<span id="cb6-39"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> l=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ls -lah'</span></span>
<span id="cb6-40"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> ll=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ls -lh'</span></span>
<span id="cb6-41"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> la=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ls -lAh'</span></span>
<span id="cb6-42"></span>
<span id="cb6-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># search for directory and cd to it</span></span>
<span id="cb6-44"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> sd=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd ~ &amp;&amp; cd </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\$</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(find * -type d -not -path '*/Library/*' | fzf)"</span></span></code></pre></div>
</section>
<section id="configzsh.zsh_exports" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="configzsh.zsh_exports"><span class="header-section-number">3.2</span> <code>~/.config/zsh/.zsh_exports</code></h2>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb7-1"></span>
<span id="cb7-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">EDITOR</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vim"</span></span>
<span id="cb7-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">TEXINPUTS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.:/Users/zenn/shr/images:/Users/zenn/shr:'</span></span>
<span id="cb7-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PATH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".:.local/bin:/opt/homebrew/sbin:/opt/homebrew/bin:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PATH</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin"</span></span>
<span id="cb7-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">vpc_id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vpc-14814b73"</span></span>
<span id="cb7-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">subnet_id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"subnet-f02c90ab"</span></span>
<span id="cb7-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ami_id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ami-014d05e6b24240371"</span></span>
<span id="cb7-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">keypair_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rebecca_app"</span></span>
<span id="cb7-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">proj_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rebecca_app"</span></span>
<span id="cb7-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">instance_type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t2.micro"</span></span>
<span id="cb7-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">storage_size</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"30"</span></span>
<span id="cb7-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ami_id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ami-014d05e6b24240371"</span></span>
<span id="cb7-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">security_grp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sg-008cace70d32f6267"</span></span>
<span id="cb7-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">static_ip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'13.56.101.209'</span></span>
<span id="cb7-15"></span>
<span id="cb7-16"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> rg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&gt;</span> /dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb7-17">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">FZF_DEFAULT_COMMAND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rg --files --hidden --no-ignore-vcs'</span></span>
<span id="cb7-18">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">FZF_DEFAULT_OPTS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-m --height 50% --border'</span></span>
<span id="cb7-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb7-20"></span>
<span id="cb7-21"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fg=011,bg=black,bold,underline"</span></span>
<span id="cb7-22"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">LS_COLORS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pi=01;33:so=01;33:do=01;33:bd=01;33:cd=01;33:su=01;35:sg=01;35:ca=01;35:ex=01;32'</span></span>
<span id="cb7-23"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">LSCOLORS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ExGxDxDxCxDxDxFxFxexEx'</span></span></code></pre></div>
</section>
<section id="configzsh.zsh_functions" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="configzsh.zsh_functions"><span class="header-section-number">3.3</span> <code>~/.config/zsh/.zsh_functions</code></h2>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb8-1"></span>
<span id="cb8-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"> d ()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb8-3">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-n</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb8-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dirs</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$@</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb8-5">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb8-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dirs</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> 10</span>
<span id="cb8-7">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb8-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb8-9"></span>
<span id="cb8-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mma ()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/Applications/Mathematica.app/Contents/MacOS/WolframKernel</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-script</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$1</span> }</span>
<span id="cb8-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"> gz()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb8-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add .</span>
<span id="cb8-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-a</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$1</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb8-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push</span>
<span id="cb8-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="references" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> References</h1>
<p><a href="https://thevaluable.dev/zsh-install-configure-mouseless/">Configuring Zsh Without Dependencies</a></p>
<p>read top 5 medium articles <a href="https://medium.com/weekly-webtips/my-terminal-setu-iterm2-zsh-powerlevel10k-f7101ffc72c2">My Terminal Setup: iTerm2 + ZSH + Powerlevel10k | by Zubair Ahmed | Webtips | Medium</a></p>
<p><a href="https://www.kuda.ai/blog/iterm2">Settings For a Better iTerm2 Experience</a></p>
<p><a href="https://codeahoy.com/learn/macossetup/ch3/">iTerm2 Setup and Customization | CodeAhoy</a></p>
<section id="prerequisites" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">4.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">4.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="4.3">
<h2 data-number="4.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">4.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="4.4">
<h2 data-number="4.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">4.4</span> Further Reading</h2>
<p>In development</p>


<!-- -->

</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Configure the Command Line for Data Science Development},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/config_term_zsh/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Configure the Command Line for
Data Science Development.”</span> May 13, 2025. <a href="https://focusonr.org/posts/config_term_zsh/">https://focusonr.org/posts/config_term_zsh/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/config_term_zsh/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/config_term_zsh/img/iterm2.png" medium="image" type="image/png" height="75" width="144"/>
</item>
<item>
  <title>Configure ultisnips to streamline R and Rmd coding</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/config_ultisnips/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/config_ultisnips/img/vimR.png" class="img-fluid figure-img"></p>
<figcaption>iterm2</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Snippets are a useful mechanism to streamline coding in R, Rmarkdown, and Quarto and really any other programming language. They are code templates that can be inserted as replacements for trigger strings the progammer enters. They can be set up to be automatic or on-demand or contingent on ??.</p>
<div class="quarto-video"><video id="video_shortcode_videojs_video1" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title=""><source src="img/test.mp4"></video></div>
</section>
<section id="references" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> References</h1>
<ul>
<li><p><a href="https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt">The ultisnips help page on github</a></p></li>
<li><p><a href="https://ejmastnak.com/tutorials/vim-latex/ultisnips/">UltiSnips Plugin Guide for LaTeX | Vim and LaTeX Series Part 2 | ejmastnak</a></p></li>
</ul>
<section id="prerequisites" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">2.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">2.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">2.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">2.4</span> Further Reading</h2>
<p>In development</p>


<!-- -->

</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Configure Ultisnips to Streamline {R} and {Rmd} Coding},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/config_ultisnips/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Configure Ultisnips to
Streamline R and Rmd Coding.”</span> May 13, 2025. <a href="https://focusonr.org/posts/config_ultisnips/">https://focusonr.org/posts/config_ultisnips/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/config_ultisnips/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/config_ultisnips/img/iterm2.png" medium="image" type="image/png"/>
</item>
<item>
  <title>Setting up a vim environment for R data science code development</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/configure_vim_for_r/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/configure_vim_for_r/img/vim.png" class="img-fluid figure-img"></p>
<figcaption>vimlogo</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Setting up a vim for use with R can be accomplished in a few steps. This post offers a basic overview of the choices followed by some specific installation steps. I suggest that these are done incrementally.</p>
<p>Vim may be extended by plugins to add features and simplify usage. Several plugins are recommended for simplifying the coding session with R. These include:</p>
<ul>
<li>Nvim-R <a href="https://github.com/jalvesaq/Nvim-R">GitHub - jalvesaq/Nvim-R: Vim plugin to work with R</a> which helps to</li>
<li>UltiSnips for snippets</li>
<li>Vimtex for Latex with R to generate PDF</li>
</ul>
<p>I test R frequently from within Nvim-R and less frequently run tests from the command line using <code>test_check("mypackage")</code> .</p>
</section>
<section id="what-is-the-result" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> What is the result?</h1>
<ul>
<li>Work on mostly .R files but some .Rmd</li>
<li>See a list of objects in the R environment in a window alongside the code file</li>
<li>Send lines of R code to R running in its own window.</li>
<li>Save time with prebuilt snippets for common tasks.</li>
<li>Automatically check the syntax of code as you work</li>
<li>Run tests on the code as needed</li>
<li>Build the resulting package if needed</li>
<li>Fold long code blocks</li>
<li>Hop around in the document easily</li>
<li>Output PDF (via latex), run in a web browser, or create other document types</li>
</ul>
<p>What you will need:</p>
<ul>
<li>R installed</li>
<li>vim or nvim installed (I’ll show nvim)</li>
<li>an R plugin</li>
<li>a plugin manager</li>
<li>a status line manager</li>
<li>a file explorer</li>
<li>and a few optional items</li>
</ul>
<p>Plugin choice Vim-R-Plugin has been replaced by Nvim-R.</p>
</section>
<section id="setup" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Setup</h1>
<p>I recommend the following steps for Mac or Linux.</p>
<ul>
<li>Install R (I recommend using homebrew or the ubuntu standard installation)</li>
<li>Install Nvim (I prefer Neovim because it has excellent support for LSP (language servers).</li>
<li>Install a plugin manager (I’ll use vim-plug)</li>
<li>Create a minimal configuration</li>
<li>Add plugins</li>
<li>Test</li>
<li>Add more plugins as needed</li>
<li>Add refinements</li>
</ul>
<section id="install-a-plugin-manager-vim-plug" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="install-a-plugin-manager-vim-plug"><span class="header-section-number">3.1</span> Install a plugin manager vim-plug</h2>
<p>Install vim-plug. From the home directory, run:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fLo</span> ~/.vim/autoload/plug.vim <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--create-dirs</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-2">  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span></code></pre></div>
</section>
<section id="set-up-a-plugin" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="set-up-a-plugin"><span class="header-section-number">3.2</span> Set up a plugin</h2>
<p>Add to ~/.vim/vimrc or init.vim or init.lua</p>
<pre class="vim"><code>Plug 'neoclide/coc.nvim', {'branch': 'release'}</code></pre>
<p>Then run</p>
<pre class="vim"><code>:PlugInstall</code></pre>
</section>
<section id="setup-language-server" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="setup-language-server"><span class="header-section-number">3.3</span> Setup language server</h2>
<pre class="vim"><code>:CocInstall coc-r-lsp</code></pre>
</section>
<section id="suggested-vim.confignviminit.vim" class="level2" data-number="3.4">
<h2 data-number="3.4" class="anchored" data-anchor-id="suggested-vim.confignviminit.vim"><span class="header-section-number">3.4</span> Suggested vim/.config/nvim/init.vim</h2>
<p>Suggested configuration to get started. I’ll explain after.</p>
<pre class="vim"><code>call plug#begin("~/.vim/plugged")
" Plugin Section
set nocompatible
Plug 'morhetz/gruvbox'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'jalvesaq/Nvim-R', {'branch': 'stable'}
Plug 'ncm2/ncm2'
Plug 'roxma/nvim-yarp'
Plug 'gaalcaras/ncm-R'
Plug 'preservim/nerdtree'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'neoclide/coc.nvim', {'branch': 'release'} " Language Server Protocol (LSP) support
Plug 'SirVer/ultisnips'
Plug 'quangnguyen30192/cmp-nvim-ultisnips'
Plug 'honza/vim-snippets'
Plug 'lervag/vimtex'
Plug 'tmhedberg/SimpylFold'
Plug 'tpope/vim-surround'
Plug 'jalvesaq/vimcmdline'
" End Plugin Section
call plug#end()

" Basic settings
colorscheme gruvbox
set background=dark
syntax enable
filetype plugin indent on
set tabstop=4
set shiftwidth=4
set expandtab
set number
set relativenumber
set textwidth=80
set splitright
set nobackup
set nowritebackup
set updatetime=300
set signcolumn=yes

" R settings (specific to Nvim-R)
" These are some examples of settings for Nvim-R
let R_app = "radian"  " Use radian if you have it installed (pip install radian)
let R_cmd = "R"
let R_hl_term = 0
let R_rconsole_width = 80
let R_min_editor_width = 80
let g:R_auto_start = 2
let R_assign = 2  " Use _ for assignment
let R_silent_term = 1
let R_close_term = 1

" LSP settings (Coc.nvim)
" Autocomplete settings
inoremap &lt;expr&gt; &lt;Tab&gt; pumvisible() ? "\&lt;C-n&gt;" : "\&lt;Tab&gt;"
inoremap &lt;expr&gt; &lt;S-Tab&gt; pumvisible() ? "\&lt;C-p&gt;" : "\&lt;S-Tab&gt;"
inoremap &lt;silent&gt;&lt;expr&gt; &lt;CR&gt; pumvisible() ? coc#_select_confirm() : "\&lt;C-g&gt;u\&lt;CR&gt;"

" UltiSnips settings
let g:UltiSnipsExpandTrigger="&lt;c-j&gt;"
let g:UltiSnipsJumpForwardTrigger="&lt;c-j&gt;"
let g:UltiSnipsJumpBackwardTrigger="&lt;c-k&gt;"

" Custom keymappings
nmap &lt;C-n&gt; :NERDTreeToggle&lt;CR&gt;
nnoremap &lt;leader&gt;f :Files&lt;CR&gt;
nnoremap &lt;leader&gt;g :Rg&lt;CR&gt;

" Key mappings for sending lines to R
nmap &lt;localleader&gt;ss &lt;Plug&gt;RStart
vmap &lt;localleader&gt;ss &lt;Plug&gt;RStart
nmap &lt;localleader&gt;r &lt;Plug&gt;RSendLine
vmap &lt;localleader&gt;r &lt;Plug&gt;RSendSelection
nmap &lt;localleader&gt;l &lt;Plug&gt;RSendLine
nmap &lt;localleader&gt;p &lt;Plug&gt;RSendParagraph</code></pre>
<p>Verify that the plugins were installed by starting nvim and typing <code>:checkhealth</code>. You should have most of these items working. If not, either disable the troublesome plugin by commenting it out with a ” character at beginning of the line or looking up the solution.</p>
<p>Most problems here are solvable with a few web searches.</p>
</section>
</section>
<section id="troubleshooting-plugin-issues" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Troubleshooting plugin issues</h1>
<p>Here are some issues that I have found:</p>
<ol type="1">
<li>Language server (COC.nvim) requires nodejs to be installed</li>
<li>Nvim-R calls out to R, but can’t find it - make sure R is in your PATH</li>
<li>Some plugins have incompatible keybindings - remapping can solve this</li>
</ol>
<section id="solution-to-nodejs-issue" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="solution-to-nodejs-issue"><span class="header-section-number">4.1</span> Solution to nodejs issue</h2>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># On Mac </span></span>
<span id="cb6-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">brew</span> install node</span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># On Ubuntu</span></span>
<span id="cb6-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fsSL</span> https://deb.nodesource.com/setup_lts.x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-E</span> bash <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb6-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt-get install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> nodejs</span></code></pre></div>
</section>
</section>
<section id="advanced-enhancements" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Advanced enhancements</h1>
<section id="ultisnips---adding-custom-snippets" class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="ultisnips---adding-custom-snippets"><span class="header-section-number">5.1</span> UltiSnips - adding custom snippets</h2>
<p>UltiSnips is a powerful snippet engine. You can create custom snippets for R in a file like <code>~/.config/nvim/UltiSnips/r.snippets</code>.</p>
<p>Here’s an example of some useful R snippets:</p>
<pre class="vim"><code>snippet df "Create data frame"
data.frame(
  ${1:col1} = ${2:value1},
  ${3:col2} = ${4:value2}
)
endsnippet

snippet fun "Function definition"
${1:function_name} &lt;- function(${2:arguments}) {
  ${3:body}
}
endsnippet

snippet for "For loop"
for (${1:i} in ${2:sequence}) {
  ${3:body}
}
endsnippet</code></pre>
</section>
<section id="vim-fugitive-for-git-integration" class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="vim-fugitive-for-git-integration"><span class="header-section-number">5.2</span> Vim-Fugitive for Git integration</h2>
<p>If you’re using Git for version control, vim-fugitive is an excellent plugin that gives you Git capabilities right from Vim:</p>
<pre class="vim"><code>" Add to your plugin section
Plug 'tpope/vim-fugitive'

" Common commands:
" :Git - equivalent to git status
" :Git commit - commit changes
" :Git push - push to remote
" :Git pull - pull from remote
" :Git blame - see who wrote what</code></pre>
</section>
<section id="learning-path" class="level2" data-number="5.3">
<h2 data-number="5.3" class="anchored" data-anchor-id="learning-path"><span class="header-section-number">5.3</span> Learning Path</h2>
<p>Learning Vim + R can be overwhelming at first. Here’s a suggested pathway:</p>
<ol type="1">
<li>Start with basic Vim movements (hjkl, w, b, etc.)</li>
<li>Learn how to send code to R using Nvim-R (<localleader>r)</localleader></li>
<li>Gradually add more plugins and learn their features</li>
<li>Customize your configuration as you identify pain points</li>
</ol>
<p>Remember that the goal is to make your workflow more efficient. Don’t try to learn everything at once - add features gradually as you get comfortable.</p>
</section>
</section>
<section id="using-with-devtools-package" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Using with devtools package</h1>
<p>When developing R packages, the devtools package is incredibly useful. You can integrate it with Nvim-R:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># In your R session</span></span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(devtools)</span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a new package</span></span>
<span id="cb9-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_package</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"~/path/to/mypackage"</span>)</span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test your package</span></span>
<span id="cb9-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test</span>()</span>
<span id="cb9-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Document your package</span></span>
<span id="cb9-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">document</span>()</span>
<span id="cb9-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install your package</span></span>
<span id="cb9-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install</span>()</span></code></pre></div>
</section>
<section id="one-more-thing" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> One more thing…</h1>
<p>I’ll update this guide with more tips and tricks in the future. Happy coding! ## Prerequisites</p>
<p>In development</p>
<section id="step-by-step-implementation" class="level2" data-number="7.1">
<h2 data-number="7.1" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">7.1</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="7.2">
<h2 data-number="7.2" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">7.2</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="7.3">
<h2 data-number="7.3" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">7.3</span> Further Reading</h2>
<p>In development</p>


<!-- -->

</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Setting up a Vim Environment for {R} Data Science Code
    Development},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/configure_vim_for_r/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Setting up a Vim Environment
for R Data Science Code Development.”</span> May 13, 2025. <a href="https://focusonr.org/posts/configure_vim_for_r/">https://focusonr.org/posts/configure_vim_for_r/</a>.
</div></div></section></div> ]]></description>
  <category>Vim</category>
  <guid>https://focusonr.org/posts/configure_vim_for_r/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/configure_vim_for_r/img/vim.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Setting up an R development environment on github</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <dc:creator>RG Thomas</dc:creator>
  <link>https://focusonr.org/posts/develop_r_package/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/develop_r_package/img/git.png" class="img-fluid figure-img" style="width:1.5in"></p>
<figcaption>purrr</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level2" data-number="0.1">
<h2 data-number="0.1" class="anchored" data-anchor-id="introduction"><span class="header-section-number">0.1</span> Introduction</h2>
<p>Its often the case that a data scientist needs to share an R function with a co-worker or a student. This post describes a step by step methodology for wrapping the function in a package, that includes a number of support files, and sharing it either via github or CRAN. This may seem like overkill for the simple task of sharing some code, but over time, not having to address the many technical issues that can arise when sharing a code in a more ad hoc manner will undoubtedly be appreciated.</p>
</section>
<section id="the-problemdata" class="level2" data-number="0.2">
<h2 data-number="0.2" class="anchored" data-anchor-id="the-problemdata"><span class="header-section-number">0.2</span> The Problem/Data</h2>
<p>The initial goal is to create a directory (or repository) that contains the package contents on your local computer. The top level elements of the package are the <code>DESCRIPTION</code> file, the <code>NAMESPACE</code> file, the <code>R</code> directory, the <code>tests</code> directory, and the <code>man</code> directory. Additional files such as a <code>README.md</code>, a <code>LICENSE</code> file are optional but recommended. The <code>DESCRIPTION</code> file contains metadata about the package such as the package name, the version number, the author, and the license. The <code>NAMESPACE</code> file contains the export and import declarations. The <code>R</code> directory contains the R functions. The <code>tests</code> directory contains the unit tests. The <code>man</code> directory contains the documentation for the functions.</p>
<section id="step-1-initial-repo-setup" class="level3" data-number="0.2.1">
<h3 data-number="0.2.1" class="anchored" data-anchor-id="step-1-initial-repo-setup"><span class="header-section-number">0.2.1</span> Step 1: Initial Repo Setup</h3>
<p>Start by using the various helpful tools in the <code>devtools</code> and <code>usethis</code> packages to facilitate the repository building process.</p>
<p>Open <code>R</code> from the shell prompt in your development directory. and run the command <code>usethis::create_package("zz_package")</code> to create the package directory, an <code>R</code> subdirectory, and the <code>DESCRIPTION</code> and <code>NAMESPACE</code> files. Assuming the package will be named <code>zz_package</code>.</p>
<p>The code below creates the package directory structure.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">install.packages</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"devtools"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">library</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">devtools</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">usethis::create_package</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"zz_package"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div>
<p>This creates the following directory structure and generates the <code>DESCRIPTION</code> and <code>NAMESPACE</code> files.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">zz_package</span> ☕ tree <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--charset</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ascii</span>
<span id="cb2-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb2-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> DESCRIPTION</span>
<span id="cb2-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> NAMESPACE</span>
<span id="cb2-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> R</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">zz_package</span> ☕ more DESCRIPTION</span>
<span id="cb2-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Package:</span> my_package</span>
<span id="cb2-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Title:</span> What the Package Does <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">One</span> Line, Title Case<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb2-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Version:</span> 0.0.0.9000</span>
<span id="cb2-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Authors@R:</span></span>
<span id="cb2-12">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">person</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"First"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Last"</span>, , <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"first.last@example.com"</span>, role = c<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aut"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cre"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb2-13">           <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">comment</span> = c<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ORCID</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"YOUR-ORCID-ID"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb2-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Description:</span> What the package does <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">one</span> paragraph<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb2-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">License:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>use_mit_license<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>use_gpl3_license<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)`</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">or</span> friends to pick a</span>
<span id="cb2-16">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">license</span></span>
<span id="cb2-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Encoding:</span> UTF-8</span>
<span id="cb2-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Roxygen:</span> list<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">markdown</span> = TRUE<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb2-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RoxygenNote:</span> 7.3.2</span></code></pre></div>
<p>Next use the <code>usethis</code> package tools to generate repository support files.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">usethis::use_git()</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">usethis::use_github()</span></span>
<span id="cb3-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">use_gpl_license</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">version</span> = 3, include_future = TRUE<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">usethis::use_readme_md()</span></span>
<span id="cb3-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">usethis::use_code_of_conduct</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgthomas@ucsd.edu"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">usethis::use_tidy_contributing()</span></span></code></pre></div>
<p>Next copy the <code>R</code> file containing the function to the <code>R</code> directory and add a <code>#'</code> Roxygen2 comment block to the top of the file providing a description of the functions in the file.</p>
<p>Then call <code>devtools::document()</code> to generate the <code>man</code> directory containing the help page.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">devtools::document()</span></span></code></pre></div>
<p>At this point the directory structure looks like this.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">julia</span> prj/zz_package ☕ tree <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--charset</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ascii</span>
<span id="cb5-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb5-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> DESCRIPTION   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># package Metadata</span></span>
<span id="cb5-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> NAMESPACE     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Exports and imports declarations</span></span>
<span id="cb5-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> R             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># R functions</span></span>
<span id="cb5-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> zz_package.R</span>
<span id="cb5-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> man           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Documentation for the functions</span></span>
<span id="cb5-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--</span> zz_package.Rd</span></code></pre></div>
<p>The next step is to set up testing.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">usethis::use_testthat()</span></span></code></pre></div>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">call</span> inside R</span>
<span id="cb7-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">usethis::use_test</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"zz_package"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div>
<p>This open an editor. Enter the unit tests using the test_that function.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test: Empty dataframe error</span></span>
<span id="cb8-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">test_that</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t2f throws an error for empty dataframe"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb8-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">empty_df</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- data.frame<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-4">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">expect_error</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">my_package</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">empty_df,</span> filename = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"empty_table"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">df</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> must not be empty"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-5"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div>
<p>Initate a git repository, add the files, and do an initial commit. When any of files change repeat the commit process to commit the changes.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> init</span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add .</span>
<span id="cb9-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Initial commit"</span></span></code></pre></div>
<p>Once all the pieces are in place in the local repository push the content to the cloud. First step is to set up a new repository on github.</p>
<p>As the code is developed and additional packages are required add each dependency (e.g.&nbsp;<code>kableExtra</code>) (e.g.&nbsp;kableExtra<code>) (e.g. kableExtra</code>) whth the <code>use_package</code> function. For example if the <code>kableExtra</code> package is required to generate a formatted table add</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">usethis::use_package</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"kableExtra"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> type = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Imports"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div>
<p>At interim stages run the build, install, and test functions to ensure that the package is functioning correctly. Finally do a full check using <code>devtools::check()</code>. This reflects the checks that CRAN will perform when you submit the package.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">devtools::build()</span></span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">devtools::install()</span></span>
<span id="cb11-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">devtools::test()</span></span>
<span id="cb11-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">devtools::check()</span></span></code></pre></div>
</section>
</section>
<section id="debugging-workflow" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Debugging workflow</h1>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> checkout <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-b</span> fix-bug</span></code></pre></div>
<pre><code>    Debug locally and isolate the issue.</code></pre>
<ul>
<li><pre><code>   Create a local branch (fix-bug) for the fix.</code></pre></li>
<li>git checkout -b fix-bug</li>
<li><pre><code>   Make and test the changes.</code></pre></li>
<li>Run devtools::test() to confirm all tests pass.</li>
<li>Use devtools::check() to validate the package.</li>
<li>git add .</li>
<li>git commit -m “Fix issue with my_package function”</li>
<li>git push</li>
<li>Merge the branch into the main branch and clean up.</li>
<li>git checkout main</li>
<li>git merge fix-bug</li>
<li>git branch -d fix-bug</li>
<li>git push</li>
<li><pre><code>   Open a Pull Request.</code></pre></li>
<li><pre><code>   Update the version number </code></pre></li>
<li>usethis::use_version(“patch”)</li>
<li>and push the final changes.</li>
<li>git push</li>
</ul>
</section>
<section id="debugging-workflow-from-chatgpt" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Debugging Workflow from chatGPT</h1>
<p>Follow these steps to debug and fix issues in your R package:</p>
<ol type="1">
<li><strong>Debug Locally</strong>
<ul>
<li>Isolate the issue using R debugging tools like <code>browser()</code>, <code>traceback()</code>, or <code>debug()</code>.</li>
</ul></li>
<li><strong>Create a Local Git Branch</strong>
<ul>
<li><p>Create a branch for the fix to isolate your changes:</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb18-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> checkout <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-b</span> fix-bug</span></code></pre></div></li>
</ul></li>
<li><strong>Make and Test Changes</strong>
<ul>
<li><p>Modify your code to fix the issue and add or update unit tests as needed.</p></li>
<li><p>Run tests to confirm functionality:</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test</span>()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Confirm all tests pass</span></span>
<span id="cb19-2">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">check</span>() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Validate the package complies with CRAN standards</span></span></code></pre></div></li>
</ul></li>
<li><strong>Commit Your Changes</strong>
<ul>
<li><p>Stage and commit your changes:</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add .</span>
<span id="cb20-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fix issue with my_package function"</span></span></code></pre></div></li>
</ul></li>
<li><strong>Push the Branch</strong>
<ul>
<li><p>Push the branch to GitHub for collaboration or to prepare for merging:</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push origin fix-bug</span></code></pre></div></li>
</ul></li>
<li><strong>Open a Pull Request</strong>
<ul>
<li>Open a Pull Request (PR) on GitHub to merge the fix into the main branch. Include a clear description of the changes.</li>
</ul></li>
<li><strong>Merge and Clean Up</strong>
<ul>
<li><p>After review and approval, merge the branch into the main branch:</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> checkout main</span>
<span id="cb22-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> merge fix-bug</span></code></pre></div></li>
<li><p>Delete the branch locally and remotely:</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> branch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span> fix-bug</span>
<span id="cb23-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push origin <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--delete</span> fix-bug</span></code></pre></div></li>
</ul></li>
<li><strong>Test the Main Branch</strong>
<ul>
<li><p>Ensure the main branch passes all tests:</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test</span>()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Confirm functionality</span></span>
<span id="cb24-2">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">check</span>() <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Validate compliance</span></span></code></pre></div></li>
</ul></li>
<li><strong>Update the Version Number</strong>
<ul>
<li><p>Increment the package version using <code>usethis::use_version()</code>:</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1">usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use_version</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"patch"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use "patch", "minor", or "major"</span></span></code></pre></div></li>
<li><p>Commit and push the version update:</p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb26-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add DESCRIPTION</span>
<span id="cb26-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bump version to 1.0.1"</span></span>
<span id="cb26-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push</span></code></pre></div></li>
</ul></li>
</ol>
<section id="reproducibility" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="reproducibility"><span class="header-section-number">2.1</span> Reproducibility</h2>
<div class="cell">
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print session info for reproducibility</span></span>
<span id="cb27-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sessionInfo</span>()</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>R version 4.5.0 (2025-04-11)
Platform: aarch64-apple-darwin20
Running under: macOS Sequoia 15.4.1

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib 
LAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

time zone: America/Los_Angeles
tzcode source: internal

attached base packages:
[1] stats     graphics  grDevices datasets  utils     methods   base     

other attached packages:
 [1] here_1.0.1         shiny_1.10.0       styler_1.10.3      quarto_1.4.4       pacman_0.5.1       readxl_1.4.5       knitr_1.50         lubridate_1.9.4    forcats_1.0.0      stringr_1.5.1     
[11] dplyr_1.1.4        purrr_1.0.4        readr_2.1.5        tidyr_1.3.1        tibble_3.2.1       ggplot2_3.5.2      tidyverse_2.0.0    tidytuesdayR_1.1.2 rmarkdown_2.29     kableExtra_1.4.0  
[21] janitor_2.2.1      datapasta_3.1.0    ggthemes_5.1.0     conflicted_1.2.0   DT_0.33            naniar_1.1.0       devtools_2.4.5     usethis_3.1.0     

loaded via a namespace (and not attached):
 [1] tidyselect_1.2.1  viridisLite_0.4.2 R.utils_2.13.0    fastmap_1.2.0     promises_1.3.2    digest_0.6.37     timechange_0.3.0  mime_0.13         lifecycle_1.0.4   ellipsis_0.3.2   
[11] processx_3.8.6    magrittr_2.0.3    compiler_4.5.0    rlang_1.1.6       tools_4.5.0       yaml_2.3.10       htmlwidgets_1.6.4 pkgbuild_1.4.7    xml2_1.3.8        pkgload_1.4.0    
[21] miniUI_0.1.1.1    R.cache_0.16.0    withr_3.0.2       R.oo_1.27.0       grid_4.5.0        urlchecker_1.0.1  profvis_0.4.0     xtable_1.8-4      colorspace_2.1-1  scales_1.3.0     
[31] cli_3.6.4         generics_0.1.3    remotes_2.5.0     rstudioapi_0.17.1 tzdb_0.5.0        sessioninfo_1.2.3 cachem_1.1.0      cellranger_1.1.0  vctrs_0.6.5       jsonlite_2.0.0   
[41] hms_1.1.3         visdat_0.6.0      systemfonts_1.2.2 glue_1.8.0        ps_1.9.0          stringi_1.8.7     gtable_0.3.6      later_1.4.2       munsell_0.5.1     pillar_1.10.2    
[51] htmltools_0.5.8.1 R6_2.6.1          rprojroot_2.0.4   evaluate_1.0.3    R.methodsS3_1.8.2 memoise_2.0.1     snakecase_0.11.1  httpuv_1.6.15     Rcpp_1.0.14       svglite_2.1.3    
[61] xfun_0.52         fs_1.6.6          pkgconfig_2.0.3  </code></pre>
</div>
</div>
</section>
<section id="next-steps" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="next-steps"><span class="header-section-number">2.2</span> Next Steps</h2>
<ul>
<li>Suggest areas for further exploration</li>
<li>Mention potential improvements</li>
<li>Invite reader engagement</li>
</ul>
</section>
<section id="references" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="references"><span class="header-section-number">2.3</span> References</h2>
<ul>
<li>Cite your sources</li>
<li>Link to relevant documentation</li>
<li>Credit other contributors</li>
</ul>
<hr>
</section>
</section>
<section id="debugging-errors-with-devtoolstest" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Debugging Errors with <code>devtools::test()</code></h1>
<p>This guide provides a step-by-step process to debug errors occurring during <code>devtools::test()</code> for R packages.</p>
<hr>
<section id="step-1-understand-the-devtoolstest-workflow" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="step-1-understand-the-devtoolstest-workflow"><span class="header-section-number">3.1</span> Step 1: Understand the <code>devtools::test()</code> Workflow</h2>
<ol type="1">
<li><strong>What It Does</strong>:
<ul>
<li>Runs all test scripts in the <code>tests/testthat/</code> directory using the <strong>testthat</strong> package.</li>
<li>Reports errors, warnings, and failed assertions.</li>
</ul></li>
<li><strong>Output Format</strong>:
<ul>
<li>Lists the file and test name where the error occurred.</li>
<li>Provides the expected and actual outputs (if applicable).</li>
<li>Shows the error message and traceback for debugging.</li>
</ul></li>
</ol>
<hr>
</section>
<section id="step-2-interpret-the-error-message" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="step-2-interpret-the-error-message"><span class="header-section-number">3.2</span> Step 2: Interpret the Error Message</h2>
<p>Run <code>devtools::test()</code> in your R console or IDE terminal and note the output. Focus on:</p>
<ol type="1">
<li><strong>Test File and Test Name</strong>:
<ul>
<li><p>Example:</p>
<pre><code>── Failure (test-zzlongplot.R:31:3): parse_formula handles grouping and faceting variables ──
result$y (`actual`) not equal to "y" (`expected`).</code></pre></li>
<li><p>This indicates:</p>
<ul>
<li>The error is in <code>test-zzlongplot.R</code>.</li>
<li>It occurred in the test named <code>parse_formula handles grouping and faceting variables</code>.</li>
</ul></li>
</ul></li>
<li><strong>Error Details</strong>:
<ul>
<li><p>Example:</p>
<pre><code>`actual`:   "y ~ x | group"
`expected`: "y"</code></pre></li>
<li><p>The test expected <code>result$y</code> to be <code>"y"</code>, but the actual output was <code>"y ~ x | group"</code>.</p></li>
</ul></li>
<li><strong>Traceback</strong>:
<ul>
<li>The traceback provides a stack of function calls leading to the error. Use <code>traceback()</code> immediately after the test failure to get additional context.</li>
</ul></li>
</ol>
<hr>
</section>
<section id="step-3-isolate-the-problem" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="step-3-isolate-the-problem"><span class="header-section-number">3.3</span> Step 3: Isolate the Problem</h2>
<ol type="1">
<li><strong>Run the Test Manually</strong>:
<ul>
<li><p>Extract the failing test from the test file and run it manually:</p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(testthat)</span>
<span id="cb31-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"path/to/zzlongplot/R/parse_formula.R"</span>)</span>
<span id="cb31-3">result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parse_formula</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> group <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> facet_y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> facet_x)</span>
<span id="cb31-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_equal</span>(result<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y"</span>)</span></code></pre></div></li>
<li><p>This helps verify if the error occurs outside the testing framework.</p></li>
</ul></li>
<li><strong>Verify Input Data</strong>:
<ul>
<li>Ensure that the inputs to the function are as expected. For example, check if the formula passed to <code>parse_formula</code> matches the expected format.</li>
</ul></li>
<li><strong>Use Debugging Tools</strong>:
<ul>
<li><p>Insert <code>browser()</code> into the failing function to step through its execution:</p>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1">parse_formula <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(formula) {</span>
<span id="cb32-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">browser</span>()</span>
<span id="cb32-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Function logic...</span></span>
<span id="cb32-4">}</span></code></pre></div></li>
<li><p>When the code pauses at <code>browser()</code>, inspect the environment using:</p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ls</span>()</span>
<span id="cb33-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(formula)</span></code></pre></div></li>
</ul></li>
</ol>
<hr>
</section>
<section id="step-4-debugging-common-errors" class="level2" data-number="3.4">
<h2 data-number="3.4" class="anchored" data-anchor-id="step-4-debugging-common-errors"><span class="header-section-number">3.4</span> Step 4: Debugging Common Errors</h2>
<section id="error-1-assertion-failures" class="level3" data-number="3.4.1">
<h3 data-number="3.4.1" class="anchored" data-anchor-id="error-1-assertion-failures"><span class="header-section-number">3.4.1</span> Error 1: Assertion Failures</h3>
<p>Example:</p>
<pre><code>result$y (`actual`) not equal to "y" (`expected`).</code></pre>
<p><strong>Steps</strong>: 1. Check the test code: - Verify if the <code>expect_equal()</code> or similar assertion accurately reflects the intended behavior. - Example: <code>r      expect_equal(result$y, "y")</code> - If the test expectation is wrong, update it to match the correct behavior.</p>
<ol start="2" type="1">
<li>Check the function output:
<ul>
<li><p>Run the function manually with the same inputs and inspect its output:</p>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb35-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parse_formula</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> group <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> facet_y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> facet_x)</span></code></pre></div></li>
</ul></li>
<li>Fix the function logic:
<ul>
<li>If the function output is incorrect, debug the function implementation.</li>
</ul></li>
</ol>
<hr>
</section>
<section id="error-2-unexpected-errors-or-warnings" class="level3" data-number="3.4.2">
<h3 data-number="3.4.2" class="anchored" data-anchor-id="error-2-unexpected-errors-or-warnings"><span class="header-section-number">3.4.2</span> Error 2: Unexpected Errors or Warnings</h3>
<p>Example:</p>
<pre><code>Error: Input must be a formula object</code></pre>
<p><strong>Steps</strong>: 1. Reproduce the Error: - Identify the exact input that triggers the error.</p>
<ol start="2" type="1">
<li>Add Input Validation:
<ul>
<li><p>Validate inputs at the start of the function to catch issues early.</p>
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inherits</span>(formula, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"formula"</span>)) {</span>
<span id="cb37-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stop</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input must be a formula object"</span>)</span>
<span id="cb37-3">}</span></code></pre></div></li>
</ul></li>
<li>Check for Edge Cases:
<ul>
<li>Test the function with edge cases, such as missing or malformed inputs.</li>
</ul></li>
</ol>
<hr>
</section>
<section id="error-3-missing-dependencies" class="level3" data-number="3.4.3">
<h3 data-number="3.4.3" class="anchored" data-anchor-id="error-3-missing-dependencies"><span class="header-section-number">3.4.3</span> Error 3: Missing Dependencies</h3>
<p>Example:</p>
<pre><code>Error: could not find function "mutate"</code></pre>
<p><strong>Steps</strong>: 1. Check Imports: - Ensure the missing function’s package is listed under <code>Imports</code> in <code>DESCRIPTION</code>.</p>
<ol start="2" type="1">
<li>Explicitly Load Dependencies:
<ul>
<li><p>Use the <code>::</code> operator to call functions explicitly:</p>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb39-1">dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(...)</span></code></pre></div></li>
</ul></li>
<li>Add <code>requireNamespace()</code>:
<ul>
<li><p>Dynamically load namespaces if not attached:</p>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb40-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">requireNamespace</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dplyr"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quietly =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)) {</span>
<span id="cb40-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stop</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dplyr is required for this function."</span>)</span>
<span id="cb40-3">}</span></code></pre></div></li>
</ul></li>
</ol>
<hr>
</section>
</section>
<section id="step-5-add-debugging-output" class="level2" data-number="3.5">
<h2 data-number="3.5" class="anchored" data-anchor-id="step-5-add-debugging-output"><span class="header-section-number">3.5</span> Step 5: Add Debugging Output</h2>
<ol type="1">
<li><strong>Print Debugging Information</strong>:
<ul>
<li><p>Add <code>print()</code> or <code>cat()</code> statements to inspect variables:</p>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb41-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Parsed y:"</span>, y_var, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div></li>
</ul></li>
<li><strong>Use Logging</strong>:
<ul>
<li>Use a logging package like <strong>logger</strong> to add structured debug messages.</li>
</ul></li>
</ol>
<hr>
</section>
<section id="step-6-rerun-tests" class="level2" data-number="3.6">
<h2 data-number="3.6" class="anchored" data-anchor-id="step-6-rerun-tests"><span class="header-section-number">3.6</span> Step 6: Rerun Tests</h2>
<p>After making changes: 1. Save the modified code and test files. 2. Re-run the tests: <code>r    devtools::test()</code></p>
<hr>
</section>
<section id="step-7-finalize-fixes" class="level2" data-number="3.7">
<h2 data-number="3.7" class="anchored" data-anchor-id="step-7-finalize-fixes"><span class="header-section-number">3.7</span> Step 7: Finalize Fixes</h2>
<ol type="1">
<li><strong>Remove Debugging Code</strong>:
<ul>
<li>Remove <code>browser()</code>, <code>print()</code>, and other debug artifacts.</li>
</ul></li>
<li><strong>Re-run Full Checks</strong>:
<ul>
<li>Run <code>devtools::check()</code> to ensure the package passes all CRAN checks.</li>
</ul></li>
</ol>
<hr>
</section>
<section id="example-workflow-for-debugging" class="level2" data-number="3.8">
<h2 data-number="3.8" class="anchored" data-anchor-id="example-workflow-for-debugging"><span class="header-section-number">3.8</span> Example Workflow for Debugging</h2>
<ol type="1">
<li><p>Identify the failing test:</p>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb42-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test</span>()</span></code></pre></div></li>
<li><p>Manually isolate and debug the test:</p>
<div class="sourceCode" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb43-1">result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">parse_formula</span>(y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> group <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> facet_y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> facet_x)</span>
<span id="cb43-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(result)</span></code></pre></div></li>
<li><p>Add debugging statements:</p>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb44-1">parse_formula <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(formula) {</span>
<span id="cb44-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(formula)</span>
<span id="cb44-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">browser</span>()</span>
<span id="cb44-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Logic...</span></span>
<span id="cb44-5">}</span></code></pre></div></li>
<li><p>Fix the issue and re-test:</p>
<div class="sourceCode" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb45-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test</span>()</span></code></pre></div></li>
<li><p>Remove debugging artifacts and run final checks:</p>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb46-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">check</span>()</span></code></pre></div></li>
</ol>
<hr>
</section>
<section id="conclusion" class="level2" data-number="3.9">
<h2 data-number="3.9" class="anchored" data-anchor-id="conclusion"><span class="header-section-number">3.9</span> Conclusion</h2>
<p>Debugging <code>devtools::test()</code> errors involves interpreting error messages, isolating failing tests, and systematically diagnosing issues in your code. With these steps, you can identify and fix problems effectively.</p>
<hr>
</section>
<section id="prerequisites" class="level2" data-number="3.10">
<h2 data-number="3.10" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">3.10</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="3.11">
<h2 data-number="3.11" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">3.11</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="3.12">
<h2 data-number="3.12" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">3.12</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="3.13">
<h2 data-number="3.13" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">3.13</span> Further Reading</h2>
<p>In development</p>


<!-- -->

</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald and Thomas, RG},
  title = {Setting up an {R} Development Environment on Github},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/develop_r_package/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald, and RG Thomas. 2025. <span>“Setting up an R
Development Environment on Github.”</span> May 13, 2025. <a href="https://focusonr.org/posts/develop_r_package/">https://focusonr.org/posts/develop_r_package/</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>Analysis</category>
  <category>Tutorial</category>
  <guid>https://focusonr.org/posts/develop_r_package/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/develop_r_package/img/git.png" medium="image" type="image/png" height="60" width="144"/>
</item>
<item>
  <title>Adding Windows as a Second OS on Thinkpad</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/dual_boot_thinkpad/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/dual_boot_thinkpad/img/windows.png" class="img-fluid figure-img" style="width:50.0%"></p>
<figcaption>Windows</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Step by step instructions for adding Windows as a second OS on a thinkpad.</p>
<section id="setting-and-motivation" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="setting-and-motivation"><span class="header-section-number">1.1</span> Setting and motivation</h2>
<p><strong>check thinkpad model</strong> I have a relatively new Lenova Thinkpad, Carbon X1 Gen 9. It came with Ubuntu installed and now I want to add Windows 11 as a second OS.</p>
<p>I have a 1TB SSD and I have allocated 500GB to Ubuntu. I want to allocate 500GB to Windows.</p>
</section>
</section>
<section id="steps" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Steps</h1>
<ol type="1">
<li><em>Create a <code>Windows</code> bootable USB</em>. On the <code>thinkpad</code> running <code>Ubuntu</code> open <code>firefox</code> and download a <code>Windows</code> ISO from the <code>Microsoft</code> website to the <code>~/Downloads</code> directory. <a href="https://www.microsoft.com/en-us/software-download/windows11">Download Windows 11</a> <strong>check</strong> I tried using balenaEtcher on my macbook but that was a no go since the Windows ISO did not have a partition table. Use Ventoy to create a bootable USB. <a href="https://www.ventoy.net/en/index.html">Ventoy</a></li>
</ol>
<p>From the Ventoy website:</p>
<blockquote class="blockquote">
<p>“What is Ventoy Ventoy is an open source tool to create bootable USB drive for ISO/WIM/IMG/VHD(x)/EFI files. With ventoy, you don’t need to format the disk over and over, you just need to copy the ISO/WIM/IMG/VHD(x)/EFI files to the USB drive and boot them directly. You can copy many files at a time and ventoy will give you a boot menu to select them (screenshot). You can also browse ISO/WIM/IMG/VHD(x)/EFI files in local disks and boot them. x86 Legacy BIOS, IA32 UEFI, x86_64 UEFI, ARM64 UEFI and MIPS64EL UEFI are supported in the same way. Most types of OS supported (Windows/WinPE/Linux/ChromeOS/Unix/VMware/Xen…) 1200+ image files are tested (list), 90%+ distros in distrowatch.com supported (details)”</p>
</blockquote>
<p>From Wikipedia:</p>
<blockquote class="blockquote">
<p>“Ventoy is a free and open-source utility used for creating bootable USB media storage devices with files such as .iso, .wim, .img, .vhd(x), and .efi. Once Ventoy is installed onto a USB drive, there is no need to reformat the USB drive to add new installation files. Instead, it is enough to copy .iso, .wim, .img, .vhd(x), or .efi file(s) to the USB drive.[2][3][4] Ventoy presents the user with a boot menu to select one of the installation files held on the USB drive.”</p>
</blockquote>
<p>Download Ventoy from https://www.ventoy.net/ Extract the downloaded package Run the installation script:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ventoy-x.x.xx</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ./Ventoy2Disk.sh <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> /dev/sdX</span></code></pre></div>
<p>where <code>x.x.xx</code> is the version number and <code>sdX</code> is the USB drive.</p>
<ol start="2" type="1">
<li><em>Create a <code>Linux Mint</code> bootable USB</em>. On the <code>thinkpad</code> running <code>Ubuntu</code> open <code>firefox</code> and download a <code>Mint</code> ISO from the <code>Mint</code> website to the <code>~/Downloads</code> directory. <a href="https://www.linuxmint.com/edition.php?id=319">Linux Mint 22.1 "Xia" - Linux Mint</a></li>
</ol>
<section id="prerequisites" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">2.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">2.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">2.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">2.4</span> Further Reading</h2>
<p>In development</p>


<!-- -->

</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Adding {Windows} as a {Second} {OS} on {Thinkpad}},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/dual_boot_thinkpad/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Adding Windows as a Second OS
on Thinkpad.”</span> May 13, 2025. <a href="https://focusonr.org/posts/dual_boot_thinkpad/">https://focusonr.org/posts/dual_boot_thinkpad/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/dual_boot_thinkpad/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/dual_boot_thinkpad/img/windows.png" medium="image" type="image/png" height="26" width="144"/>
</item>
<item>
  <title>Extend Shiny power app to five tabs</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/extend_shiny_app/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/extend_shiny_app/img/shiny.png" class="img-fluid figure-img"></p>
<figcaption>Shiny</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>This post chronicles the journey taken to extend a medium complexity Shiny app providing an interactive power analysis for the two independent group continuous endpoint experiment to a multi-tab app providing power analysis for five different study designs.</p>
</section>
<section id="methods" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Methods</h1>
<section id="modules" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="modules"><span class="header-section-number">2.1</span> Modules</h2>
</section>
<section id="golem" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="golem"><span class="header-section-number">2.2</span> Golem</h2>
</section>
<section id="package" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="package"><span class="header-section-number">2.3</span> Package</h2>
</section>
</section>
<section id="references" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> References</h1>
<section id="prerequisites" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">3.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">3.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">3.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="3.4">
<h2 data-number="3.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">3.4</span> Further Reading</h2>
<p>In development</p>


<!-- -->

</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Extend {Shiny} Power App to Five Tabs},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/extend_shiny_app/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Extend Shiny Power App to Five
Tabs.”</span> May 13, 2025. <a href="https://focusonr.org/posts/extend_shiny_app/">https://focusonr.org/posts/extend_shiny_app/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/extend_shiny_app/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/extend_shiny_app/img/shiny.png" medium="image" type="image/png" height="167" width="144"/>
</item>
<item>
  <title>Install Arch Linux on a Macbook Air</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/install_arch_on_macbook/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://focusonr.org/posts/install_arch_on_macbook/img/Archlinux-logo.png" class="img-fluid" style="width:2in"></p>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>The specific goal of this “DIY” project is to refurbish a 2016 <code>macbook air</code> laptop with a contemporary <code>linux</code> operating system.</p>
<p>The OS we’ll focus on for this post is <code>Arch Linux</code>, a rolling <code>Linux</code> distribution. Why <code>Arch</code>? Well, we’re looking for a lightweight, fast installing distro that has access to the <code>AUR</code> repository of apps. There are many other considerations that can go into choosing a linux distribution, but for our purposes, this is the main one.</p>
</section>
<section id="download" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Download</h1>
<p>To get started, acquire a copy of the <code>Arch Linux</code> distribution. The simplist way to do this is to download the latest <code>ISO</code> image file and “burn” it onto a <code>USB</code> drive. (We’ll use an <code>Apple 2021 Macbook Air</code> laptop running <code>macos Sonoma</code> to facilite the download and writing onto a 60 <code>GB</code> <code>USB</code> drive.) At this writing the latest <code>iso</code> file is version <code>2024.08.01</code> which is based on linux kernel: <code>6.10.2</code>. The ISO Size is <code>1.1 GB</code>. We’ll use a torrent file ( <code>archlinux-2024.07.08-x86_64.iso.torrent</code>) to download the <code>iso</code> file using the torrent client <code>Transmission</code>.</p>
<p>Also download the associated <code>sha256sum.txt</code> file.</p>
<p>To start the download install the mac app <a href="https://transmissionbt.com/download">Transmission</a> and add the torrent file.</p>
<p>Once download is complete check the integrity of your local ISO file, generate its SHA256 checksum and compare it to the content of the <code>sha256sum.txt</code> file:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>  sha256sum  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">archlinux-2024.07.01-x86_64.iso</span></span></code></pre></div>
<p>compare to SHA256 sums from the download site. In our case:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">398dceea2d04767fbb8b61a9e824f2c8f5eacf62b2cb5006fd63321d978d48bc</span></span></code></pre></div>
</section>
<section id="install-arch-on-a-macbook-air" class="level1 page-columns page-full" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Install Arch on a Macbook Air</h1>
<p>The target machine is a 2016 13-inch <code>MacBook Air</code> with one Thunderbolt 3 port.</p>
<p>Next transfer the <code>iso</code> file to a <code>USB</code> flash drive using one of several methods. On <code>macos</code> we suggest using the app <code>balanaEtcher</code>. You can download <code>balanaEtcher</code> <a href="https://etcher.balena.io/">here</a>.</p>
<p>Insert the <code>USB</code> flash drive into the target <code>macbook</code> and reboot. Hold the <code>ALT</code> key while the machine reboots and you’ll be presented with a screen offering boot drive options. Select the icon for the <code>USB</code> drive. A <code>grub</code> menu will appear.<sup>1</sup></p>
<div class="no-row-height column-margin column-container"><div id="fn1"><p><sup>1</sup>&nbsp; <strong>GNU GRand Unified Bootloader (GRUB)</strong>. “When your Linux operating system starts up, GRUB is the first program that runs. It loads the kernel of the operating system, and then the kernel loads the rest of the operating system, including the shell, the desktop environment, and other operating system features.” <font size="1"> <a href="&quot;https://www.codecademy.com/resources/blog/grub-linux/&quot;">codecademy.com</a> </font> </p></div></div><p>From the <code>Grub</code> menu select <code>Arch Linux install medium (x86_64, UEFI)</code><br>
and the <code>arch</code> install program will start.</p>
</section>
<section id="install-base-arch-components" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Install Base Arch Components</h1>
<p>To allow cut and paste from macos to target laptop connect on your local network via ssh.</p>
<section id="connect-to-target-machine-with-ssh" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="connect-to-target-machine-with-ssh"><span class="header-section-number">4.1</span> Connect to target machine with ssh</h2>
<p>configure WIFI</p>
<ul>
<li><p>bash&gt; iwctl</p></li>
<li></li>
<li><p>idw&gt; device list (optional) (assume device is <code>wlan0</code>)</p></li>
<li><p>idw&gt; station wlan0 scan (optional)</p></li>
<li><p>idw&gt; station <code>wlan0</code> connect <code>rgtnet2</code></p></li>
<li><p>passphrase for <code>rgtnet2</code></p></li>
<li><p>idw&gt; exit</p></li>
<li><p>(assume the local IP address is 10.0.1.176)</p></li>
<li><p>Set a password for root user. You’ll need it to log in.</p></li>
<li><p>bash&gt; passwd</p></li>
<li><pre><code>  (enter `z` password)</code></pre></li>
<li><p>New password: <code>z</code></p></li>
<li><p>Retype new password: <code>z</code></p></li>
</ul>
<p>Now switch over to the mac.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ssh</span>  root@10.0.1.176</span></code></pre></div>
</section>
<section id="begin-install-process" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="begin-install-process"><span class="header-section-number">4.2</span> Begin install process</h2>
<p>First step:</p>
<ul>
<li>partition harddisk:</li>
</ul>
<p>bash&gt; cfdisk /dev/nvme0n1</p>
<p>Use interface to create two partitions:</p>
<ol type="1">
<li>EFI type of size 1gb</li>
<li>root of size entire rest of disk.</li>
<li>write partition to disk</li>
</ol>
<p>check the partition:</p>
<ul>
<li>Format the partitions.
<ul>
<li>EFI disk is fat32</li>
<li>Root is ext4</li>
</ul></li>
</ul>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># run in three parts</span></span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># part 1</span></span>
<span id="cb5-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mkfs.fat</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-F32</span> /dev/nvme0n1p1</span>
<span id="cb5-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mkfs.ext4</span> /dev/nvme0n1p2</span>
<span id="cb5-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadkeys</span> mac-us</span>
<span id="cb5-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">timedatectl</span> set-ntp true</span>
<span id="cb5-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mount</span> /dev/nvme0n1p2 /mnt</span>
<span id="cb5-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">reflector</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> https  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--save</span> /etc/pacman.d/mirrorlist <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--country</span> US <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--latest</span> 15<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-9">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--sort</span> rate </span>
<span id="cb5-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pacman</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-Sy</span></span>
<span id="cb5-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pacstrap</span> /mnt base  linux linux-firmware sudo</span>
<span id="cb5-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">genfstab</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-U</span> /mnt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> /mnt/etc/fstab</span>
<span id="cb5-13"></span>
<span id="cb5-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># part 2</span></span>
<span id="cb5-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">arch-chroot</span> /mnt</span>
<span id="cb5-16"></span>
<span id="cb5-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># part 3</span></span>
<span id="cb5-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ln</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-sf</span> /usr/share/zoneinfo/America/Los\_Angeles /etc/localtime</span>
<span id="cb5-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sed</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i.bak</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'s/#en_US\.UTF-8 UTF-8/en_US.UTF-8 UTF-8/'</span> /etc/locale.gen</span>
<span id="cb5-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">locale-gen</span></span>
<span id="cb5-21"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> zz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> /etc/hostname</span>
<span id="cb5-22"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> LANG=en_US.UTF-8  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> locale.conf</span>
<span id="cb5-23"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pacman</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-S</span>  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--noconfirm</span> networkmanager intel-ucode grub efibootmgr <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-24">  docker xorg-server xf86-video-intel gnome cinnamon vim sudo openssh <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-25">  zsh base-devel  pandoc r firefox git fzf ripgrep zathura</span>
<span id="cb5-26"></span>
<span id="cb5-27"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">systemctl</span> enable NetworkManager gdm sshd docker</span>
<span id="cb5-28"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> /boot/efi</span>
<span id="cb5-29"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mount</span> /dev/nvme0n1p1 /boot/efi</span>
<span id="cb5-30"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grub-install</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--target</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>x86_64-efi <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--bootloader-id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>GRUB <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--efi-directory</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/boot/efi</span>
<span id="cb5-31"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grub-mkconfig</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> /boot/grub/grub.cfg</span>
<span id="cb5-32"></span>
<span id="cb5-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># next items are interactive</span></span>
<span id="cb5-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#### in sudoers uncomment # %wheel ALL=(ALL) ALL</span></span>
<span id="cb5-35"></span>
<span id="cb5-36"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">vim</span> /etc/sudoers</span>
<span id="cb5-37"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">useradd</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-G</span> wheel <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> /bin/bash z</span>
<span id="cb5-38"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">passwd</span> z</span>
<span id="cb5-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># password for root</span></span>
<span id="cb5-40"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">passwd</span></span>
<span id="cb5-41"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span></span>
<span id="cb5-42"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">umount</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-l</span> /mnt</span></code></pre></div>
<p>Thats it. The base system is ready to go. Reboot and login with the admin username and password you provided earlier. To choose the <code>Cinnamon</code> desktop environment, select <code>z</code> as the user and then click on the selection wheel. The default desktop is <code>Gnome</code>, but an option to switch to <code>Cinnamon</code> is offered.</p>
</section>
</section>
<section id="interface-configuration" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Interface configuration</h1>
<p>Set keyboard and trackpad preferences:</p>
<ol type="1">
<li>Toggle <code>Reverse scrolling direction</code>. Use Super key (Command on mac) to open menu. Type Touchpad in text box.</li>
</ol>
<p>Select <code>Mouse and Touchpad</code></p>
<p>Open Touchpad tab</p>
<p>Toggle <code>Reverse scrolling direction</code></p>
<ol start="2" type="1">
<li>Select “Swap <code>Esc</code> and <code>Caps-Lock</code></li>
</ol>
<p>Type Keyboard in overview text box.</p>
<p>Select in sequence <code>Keyboard</code> &gt; <code>Layouts</code> &gt; <code>Options</code> &gt; <code>Caps Lock behavior</code></p>
<p>Select “Swap <code>Esc</code> and <code>Caps-Lock</code> (This is an important setting for <code>vim</code> use.)</p>
<ol start="3" type="1">
<li>Set shortcuts for <code>close window</code> and <code>toggle maximization</code></li>
</ol>
<p>Type Keyboard in overview text box.</p>
<ul>
<li>Open <code>Shortcuts</code> &gt; <code>Windows</code>.</li>
<li>Set <code>Toggle maximization state</code> to <code>Super-F</code></li>
<li>Set <code>Close window</code> to <code>Super-Q</code></li>
</ul>
</section>
<section id="additional-software-setup" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Additional Software setup</h1>
<section id="setup-yay" class="level2" data-number="6.1">
<h2 data-number="6.1" class="anchored" data-anchor-id="setup-yay"><span class="header-section-number">6.1</span> setup YAY</h2>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb6-1"> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> git clone https://aur.archlinux.org/yay-git.git  </span>
<span id="cb6-2"> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> chown <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-R</span> z:z ./yay-git</span>
<span id="cb6-3"> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> yay-git</span>
<span id="cb6-4"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">makepkg</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-si</span></span>
<span id="cb6-5"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yay</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-Syu</span> </span>
<span id="cb6-6"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yay</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-S</span> autojump</span>
<span id="cb6-7"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yay</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-S</span> zsh-autosuggestions-git</span>
<span id="cb6-8"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yay</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-S</span> zotero</span></code></pre></div>
<p>Make <code>zsh</code> the default shell.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> chsh <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-s</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span> zsh<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<p>Start Dropbox to transfer working environment</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yay</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-S</span> dropbox</span>
<span id="cb8-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dropbox</span> </span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># builtin autostart from preferences 8/12/24</span></span></code></pre></div>
<p>Dropbox startup process will launch a “Sign in” web page. Login with Dropbox credentials through web page.</p>
<p>Next</p>
<p>Run bash shell script <code>~/Dropbox/dotfiles/set_up_links.sh</code> to set up symbolic links (e.g.&nbsp;<code>ln -s ~/Dropbox/prj ~/prj</code>). See Appendix 1 below for details.</p>
<p>Set up the shell (zsh) per the post [link to set up terminal post]</p>
<p>Install <code>zotero</code> using software manager and set up syncing (login: rgthomas)</p>
<p>add <code>vimium</code> extension to <code>firefox</code></p>
</section>
</section>
<section id="appendix-1.-script-to-set-up-links-from-local-home-to-dropbox" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> Appendix 1. Script to set up links from local Home to Dropbox</h1>
<p><code>set_up_links.sh</code></p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/zsh</span></span>
<span id="cb9-2"></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># since the install process creates a .config directory move it temporarily</span></span>
<span id="cb9-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mv</span> ~/.config ~/.config.tmp</span>
<span id="cb9-5"></span>
<span id="cb9-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create links to hidden files from ~/Dropbox/dotfiles directories</span></span>
<span id="cb9-7"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ff</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".zshrc"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".viminfo"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".vimrc"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".local"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".vim"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".vimplugins"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".config"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".Rprofile"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb9-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> P <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${ff</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[@]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb9-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb9-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"create  a link for Dropbox/dotfiles version of </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$P</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> in Home"</span></span>
<span id="cb9-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ln</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/Dropbox/dotfiles/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$P</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$P</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb9-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb9-14"></span>
<span id="cb9-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># copy the original ".config" files into new linked .config</span></span>
<span id="cb9-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cp</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-R</span> ~/config.tmp/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> ~/.config</span>
<span id="cb9-17"></span>
<span id="cb9-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create new directories (links) for working files from Dropbox</span></span>
<span id="cb9-19"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dd</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sandbox"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bin"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"docs"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prj"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"work"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ssh"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shr"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb9-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> P <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${dd</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[@]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb9-21"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb9-22">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"create  a link for Dropbox/dotfiles version of echo </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$P</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> in Home"</span></span>
<span id="cb9-23">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ln</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/Dropbox/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$P</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$P</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb9-24"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</section>
<section id="appendix-2" class="level1" data-number="8">
<h1 data-number="8"><span class="header-section-number">8</span> Appendix 2</h1>
<p>Connect to new machine via ssh from mac laptop</p>
<p>First on the new machine (zz)</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scp</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> /Users/zenn/Dropbox/work/teaching/fmph243b/project1 z@10.0.1.178:~</span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scp</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> /Users/zenn/Dropbox/dotfiles/kickstart  z@10.0.1.178:~</span></code></pre></div>
<ul>
<li><p>Install R packages</p>
<ul>
<li><p>Use</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> /usr/lib/R/</span>
<span id="cb11-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> chown <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-R</span> z:z library</span>
<span id="cb11-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">R</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'install.packages("pacman", repo="cran.rstudio.com")'</span></span>
<span id="cb11-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">R</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'install.packages("rmarkdown", repo="cran.rstudio.com")'</span></span>
<span id="cb11-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">R</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tinytex::install_tinytex()'</span></span></code></pre></div></li>
</ul></li>
<li><p>Install zotero</p></li>
</ul>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yay</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-S</span> zotero</span></code></pre></div>
<p>Possible Shortcut</p>
<p>Install dropbox first. You could wait for <code>Dropbox</code> to finish installing or you could use scp to copy and run the two shell scripts: <code>install_app.sh</code> and <code>set_up_links.sh</code> from <code>~/Dropbox/dotfiles</code>. These two shells can run in parallel with <code>Dropbox</code> installing.</p>
<section id="prerequisites" class="level2" data-number="8.1">
<h2 data-number="8.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">8.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="8.2">
<h2 data-number="8.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">8.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="8.3">
<h2 data-number="8.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">8.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="8.4">
<h2 data-number="8.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">8.4</span> Further Reading</h2>
<p>In development</p>


<!-- -->

</section>
</section>


<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Install {Arch} {Linux} on a {Macbook} {Air}},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/install_arch_on_macbook/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Install Arch Linux on a Macbook
Air.”</span> May 13, 2025. <a href="https://focusonr.org/posts/install_arch_on_macbook/">https://focusonr.org/posts/install_arch_on_macbook/</a>.
</div></div></section></div> ]]></description>
  <category>Mint</category>
  <category>linux</category>
  <category>R</category>
  <category>Python</category>
  <category>Julia</category>
  <guid>https://focusonr.org/posts/install_arch_on_macbook/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/install_arch_on_macbook/img/Archlinux-logo.png" medium="image" type="image/png" height="48" width="144"/>
</item>
<item>
  <title>Working example for generating multiple plots inside a map2 call</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/plots_from_purrr/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/plots_from_purrr/img/purrr.jpg" class="img-fluid figure-img" style="width:2in"></p>
<figcaption>purrr</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Consider the problem of running a data analysis requiring a separate analysis for each of <code>n</code> strata. For example consider an effort to model the relationship between <code>Bill length</code> and <code>Flipper length</code> across three different species of penguins.</p>
<p>We can work with the dataset <code>penguins</code> included in the package <code>palmerpenguins</code></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">library</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">palmerpenguins</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div>
<p>One naive approach is to split the dataset and do three separate analyses:</p>
<p>The R package <code>purrr</code> provides a straightforward method to conduct the analyses with a single command. Assume the set of data tables are contained in a list of dataframes. Also assume the analysis is a simple visualization of a potential linear association between two features,</p>
<p><embed src="index_files/figure-html/unnamed-chunk-2-1.pdf" class="img-fluid" width="768"><embed src="index_files/figure-html/unnamed-chunk-2-2.pdf" class="img-fluid" width="768"></p>
</section>
<section id="plots-for-every-variable-and-each-species-map-inside-map-see-ref-2-below" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Plots for every variable and each species map inside map see ref 2 below</h1>
</section>
<section id="combine-plots-in-a-upper-triangular-grid-with-correlation-coefs" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> combine plots in a upper triangular grid with correlation coefs</h1>
</section>
<section id="code" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Code</h1>
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode numberSource r numberLines code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(pacman)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p_load</span>(grid, patchwork, rlang, purrr, palmerpenguins, tidyverse, knitr)</span>
<span id="cb2-3"></span>
<span id="cb2-4">opts_chunk<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set</span>(</span>
<span id="cb2-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">warning =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">message =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">echo =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fig.width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb2-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fig.height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">results =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"asis"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dev =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pdf"</span></span>
<span id="cb2-7">)</span>
<span id="cb2-8">df0 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample_n</span>(penguins, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">na.omit</span>()</span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># nn = 50 ; df1 = sample_n(penguins, 50)</span></span>
<span id="cb2-10">df1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">split</span>(df0, df0<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>species)</span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># df2 = penguins |&gt; group_by(species)</span></span>
<span id="cb2-12"></span>
<span id="cb2-13"></span>
<span id="cb2-14">ct <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(df0)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]</span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># mm = expand.grid(names(df1[3:6]), names(df1[3:6]))</span></span>
<span id="cb2-16">nn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">combn</span>(ct, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb2-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(nn) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> letters[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb2-18">nn2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(nn) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">g =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sex"</span>)</span>
<span id="cb2-19"></span>
<span id="cb2-20">zz.scatter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(data, formula, ...) {</span>
<span id="cb2-21">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># function to take a dataframe, and a formula with potentially a '|' group</span></span>
<span id="cb2-22">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     option and return scatterplot matrix with optional R^2, loess smooth,</span></span>
<span id="cb2-23">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     or least squares line.</span></span>
<span id="cb2-24">}</span>
<span id="cb2-25"></span>
<span id="cb2-26">plt1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(a, b, g, spc, df_split) {</span>
<span id="cb2-27">  out_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df_split <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> .data[[a]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> .data[[b]])) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-28">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> .data[[g]]), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-29">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-30">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"purple"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"green"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-31">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()</span>
<span id="cb2-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">assign</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(spc, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>, a, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>, b), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> out_plot, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">envir =</span> .GlobalEnv)</span>
<span id="cb2-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(out_plot)</span>
<span id="cb2-34">}</span>
<span id="cb2-35"></span>
<span id="cb2-36"></span>
<span id="cb2-37">temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map2</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(df1), <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(df_split, spc) {</span>
<span id="cb2-38">  nn2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pmap</span>(<span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(a, b, g) {</span>
<span id="cb2-39">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plt1</span>(b, a, g, spc, df_split)</span>
<span id="cb2-40">  })</span>
<span id="cb2-41">})</span>
<span id="cb2-42"></span>
<span id="cb2-43">temp2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list_flatten</span>(temp)</span>
<span id="cb2-44">X <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> grid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textGrob</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Species 1"</span>)</span>
<span id="cb2-45">temp2[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_spacer</span>()</span>
<span id="cb2-46">temp2[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> X</span>
<span id="cb2-47"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wrap_plots</span>(temp2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-48">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_layout</span>(</span>
<span id="cb2-49">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guides =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"collect"</span>,</span>
<span id="cb2-50">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis_titles =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"collect"</span></span>
<span id="cb2-51">  ) </span>
<span id="cb2-52">A <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb2-53">p2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span>
<span id="cb2-54">p3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]]</span>
<span id="cb2-55">p4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]]</span>
<span id="cb2-56">p5 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]]</span>
<span id="cb2-57">p6 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]]</span>
<span id="cb2-58">p7 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb2-59">p8 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span>
<span id="cb2-60">p9 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]]</span>
<span id="cb2-61">p10 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]]</span>
<span id="cb2-62">p11 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]]</span>
<span id="cb2-63">p12 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]]</span>
<span id="cb2-64">p13 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb2-65">p14 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span>
<span id="cb2-66">p15 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]]</span>
<span id="cb2-67">p16 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]]</span>
<span id="cb2-68">p17 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]]</span>
<span id="cb2-69">p18 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]][[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]]</span>
<span id="cb2-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># names(temp)</span></span>
<span id="cb2-71"></span>
<span id="cb2-72">layout <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-73"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">X##</span></span>
<span id="cb2-74"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">ABC</span></span>
<span id="cb2-75"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">#DE</span></span>
<span id="cb2-76"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">##F</span></span>
<span id="cb2-77"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Y##</span></span>
<span id="cb2-78"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">GHI</span></span>
<span id="cb2-79"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">#JK</span></span>
<span id="cb2-80"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">##L</span></span>
<span id="cb2-81"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Z##</span></span>
<span id="cb2-82"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">MNO</span></span>
<span id="cb2-83"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">#PQ</span></span>
<span id="cb2-84"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">##R</span></span>
<span id="cb2-85"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-86">X <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> grid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textGrob</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Species 1"</span>)</span>
<span id="cb2-87">t2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> grid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textGrob</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Species 2"</span>)</span>
<span id="cb2-88">t3 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> grid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textGrob</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Species 3"</span>)</span>
<span id="cb2-89"></span>
<span id="cb2-90">out <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wrap_plots</span>(</span>
<span id="cb2-91">  X , A, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">B =</span> p2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">C =</span> p3, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">D =</span> p4, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">E =</span> p5, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">F =</span> p6, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Y =</span> t2,</span>
<span id="cb2-92">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">G =</span> p7, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">H =</span> p8, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">I =</span> p9, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">J =</span> p10, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">K =</span> p11, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">L =</span> p12, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Z =</span> t3,</span>
<span id="cb2-93">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">M =</span> p13, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N =</span> p14, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">O =</span> p15, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">P =</span> p16, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Q =</span> p17, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">R =</span> p18,</span>
<span id="cb2-94">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">design =</span> layout</span>
<span id="cb2-95">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-96">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_layout</span>(</span>
<span id="cb2-97">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guides =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"collect"</span>,</span>
<span id="cb2-98">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis_titles =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"collect"</span></span>
<span id="cb2-99">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb2-100">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb2-101">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>,</span>
<span id="cb2-102">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.direction =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"horizontal"</span>,</span>
<span id="cb2-103">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb2-104">  )</span>
<span id="cb2-105"></span>
<span id="cb2-106">out</span></code></pre></div>
</details>
</section>
<section id="references" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> References</h1>
<p><a href="https://www.r-bloggers.com/2021/06/principal-components-and-penguins-by-ellis2013nz/">principal components analysis</a></p>
<p><a href="https://aosmith.rbind.io/2018/08/20/automating-exploratory-plots/">Automating exploratory plots with ggplot2 and purrr</a></p>
<section id="prerequisites" class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">5.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">5.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="5.3">
<h2 data-number="5.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">5.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="5.4">
<h2 data-number="5.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">5.4</span> Further Reading</h2>
<p>In development</p>


<!-- -->

</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Working Example for Generating Multiple Plots Inside a Map2
    Call},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/plots_from_purrr/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Working Example for Generating
Multiple Plots Inside a Map2 Call.”</span> May 13, 2025. <a href="https://focusonr.org/posts/plots_from_purrr/">https://focusonr.org/posts/plots_from_purrr/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/plots_from_purrr/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/plots_from_purrr/img/purrr.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>RCT validation language</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/rct_validation_lang/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://focusonr.org/posts/rct_validation_lang/img/lua.png" class="img-fluid"></p>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Consider a simple programming language to capture the essence of clinical trial data base validation logic.</p>
<p>Similar in concept to Coffeescript (compiles to Lua) or Moonscript (compiles to Javascript).</p>
<p>Idea is for trial design and initiation team to collaborate (say on gppgle docs) to develop the quality control validation logic and then translate that language into a series of snippets in Lua (using Lpeg)</p>
<p>https://www.inf.puc-rio.br/~roberto/lpeg/</p>
<section id="consider-matlab-to-r-converter" class="level3" data-number="1.0.1">
<h3 data-number="1.0.1" class="anchored" data-anchor-id="consider-matlab-to-r-converter"><span class="header-section-number">1.0.1</span> consider matlab to R converter</h3>
<p><a href="https://cran.r-project.org/web/packages/matconv/index.html">CRAN - Package matconv</a></p>
<p>Consider using openClinica as a starting point.</p>
<p>Ensuring data accuracy and integrity is crucial in clinical trials, as it directly impacts the reliability of study outcomes and regulatory compliance. Data validation encompasses a series of processes aimed at verifying that the collected data is accurate, complete, and consistent.</p>
<p>Key Components of Data Validation: 1. Edit Checks: Automated rules applied during data entry to identify discrepancies, such as out-of-range values or logical inconsistencies. These checks prompt immediate corrections, enhancing data quality. 2. Source Data Verification (SDV): A process where data entered into the case report forms (CRFs) is cross-verified with original source documents to ensure accuracy. While traditional SDV involves comprehensive verification, targeted SDV focuses on critical data points, optimizing resources without compromising data integrity. ￼ 3. Batch Validation: Periodic reviews of accumulated data to identify trends or patterns indicating potential errors, allowing for timely interventions.</p>
<p>Implementing Effective Data Validation: • Standardization: Utilizing standardized data formats and terminologies ensures uniformity across multiple sites and studies, facilitating easier data aggregation and analysis. • Validation Plans: Developing comprehensive data validation plans that outline specific checks, procedures, and responsible personnel helps in systematically ensuring data quality. • Advanced Technologies: Employing Electronic Data Capture (EDC) systems with built-in validation functionalities streamlines data entry and validation processes, reducing manual errors. ￼</p>
<p>Regulatory Compliance:</p>
<p>Adhering to regulatory guidelines, such as those from the FDA and EMA, is essential. These guidelines emphasize the importance of data integrity and provide frameworks for implementing effective data validation processes. ￼</p>
<p>Challenges and Considerations:</p>
<p>Common challenges in data validation include managing large volumes of data, ensuring consistency across multiple sites, and maintaining data integrity throughout the trial. Addressing these challenges requires a combination of robust validation procedures, continuous training for personnel, and leveraging technological solutions to automate and monitor data validation activities.</p>
<p>In summary, data validation is a critical aspect of clinical data management, ensuring that the information collected during trials is reliable and accurate. Implementing structured validation processes, supported by technology and adherence to regulatory standards, enhances the credibility of clinical trial outcomes.</p>
<p>Electronic Data Capture (EDC) systems allow for advanced, automated data validation checks to ensure high data quality and integrity in clinical trials. In addition to basic range and format checks, here are some complex validation checks that can be programmed into EDC systems:</p>
<ol type="1">
<li><p>Temporal Consistency Checks • Ensures that date/time fields follow logical sequences. • Example: Visit date cannot be earlier than screening date or Adverse event resolution date must be after the event start date.</p></li>
<li><p>Cross-field Logical Consistency Checks • Validates relationships between multiple data fields. • Example: If a participant is marked as pregnant, then gender must be female. • Example: If a patient has received a COVID-19 vaccine, they should not be marked as “unvaccinated.”</p></li>
<li><p>Protocol Adherence Checks • Ensures data aligns with the study protocol. • Example: Weight-based drug dosage should be within protocol-defined limits based on patient body weight. • Example: Inclusion/exclusion criteria verification (e.g., Age must be between 18-65 years for eligibility).</p></li>
<li><p>Range Checks with Dynamic Thresholds • Instead of using static limits, thresholds are dynamically adjusted based on patient demographics or prior values. • Example: A hemoglobin level drop greater than 2 g/dL from baseline triggers a flag, rather than using a fixed normal range.</p></li>
<li><p>Plausibility Checks Using Historical Data • Detects outliers based on patient history or known disease patterns. • Example: A patient’s blood pressure should not suddenly drop from 140/90 to 80/40 unless a serious adverse event is recorded.</p></li>
<li><p>Missing Data Pattern Recognition • Flags missing data based on expected entry patterns. • Example: If “Yes” is marked for “Did the patient receive treatment?”, then treatment details must be entered.</p></li>
<li><p>MedDRA/WHO Drug Dictionary Validation • Checks that reported adverse events and medications match standardized medical dictionaries. • Example: If “Headache” is entered as an adverse event, it must map to the correct MedDRA term.</p></li>
<li><p>Conditional Queries Based on Risk-Based Monitoring • Uses machine learning or statistical rules to prioritize data review. • Example: If a site has a higher rate of protocol deviations, trigger additional data validation checks.</p></li>
<li><p>Visit and Event Sequencing Checks • Ensures that study visits and procedures occur in the correct order. • Example: Randomization must occur before the first dose of study drug is recorded.</p></li>
<li><p>Duplicate Record Detection • Identifies duplicate patients or entries using probabilistic matching. • Example: If two records have identical name, DOB, and enrollment date, trigger an alert for possible duplicate entry.</p></li>
</ol>
</section>
</section>
<section id="tools-for-implementing-complex-data-validation-checks-in-edc-systems" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> <strong>Tools for Implementing Complex Data Validation Checks in EDC Systems</strong></h1>
<section id="proprietary-edc-systems-with-built-in-validation" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="proprietary-edc-systems-with-built-in-validation"><span class="header-section-number">2.1</span> <strong>1. Proprietary EDC Systems with Built-in Validation</strong></h2>
<ul>
<li><strong>Medidata Rave</strong> (uses Medidata Rave Edit Check Scripts)</li>
<li><strong>Oracle Clinical / InForm</strong> (PL/SQL-based validation)</li>
<li><strong>IBM Clinical Development</strong></li>
<li><strong>Veeva Vault EDC</strong></li>
<li><strong>Castor EDC</strong></li>
<li>Provide graphical interfaces or scripting languages for validation rules.</li>
</ul>
<hr>
</section>
<section id="open-source-edc-systems-with-custom-validation-capabilities" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="open-source-edc-systems-with-custom-validation-capabilities"><span class="header-section-number">2.2</span> <strong>2. Open-Source EDC Systems with Custom Validation Capabilities</strong></h2>
<section id="a.-openclinica" class="level3" data-number="2.2.1">
<h3 data-number="2.2.1" class="anchored" data-anchor-id="a.-openclinica"><span class="header-section-number">2.2.1</span> <strong>a. OpenClinica</strong></h3>
<ul>
<li><p><strong>Validation Features:</strong></p>
<ul>
<li>Real-time edit checks (range, cross-field, logic-based).</li>
<li>Uses <strong>XPath expressions</strong> for validation.</li>
</ul></li>
<li><p><strong>Example Implementation:</strong></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode xml code-with-copy"><code class="sourceCode xml"><span id="cb1-1">&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rule</span>&gt;</span>
<span id="cb1-2">    &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">when</span>&gt;</span>
<span id="cb1-3">        /StudyEventData/FormData/ItemGroupData/ItemData[@ItemOID='AGE'] &gt; 100</span>
<span id="cb1-4">    &lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">when</span>&gt;</span>
<span id="cb1-5">    &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span>&gt;</span>
<span id="cb1-6">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">message</span>&gt;Age cannot be greater than 100 years.&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">message</span>&gt;</span>
<span id="cb1-7">    &lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span>&gt;</span>
<span id="cb1-8">&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rule</span>&gt;</span></code></pre></div></li>
<li><p><strong>Website:</strong> <a href="https://www.openclinica.com/">openclinica.com</a></p></li>
</ul>
<hr>
</section>
<section id="b.-redcap" class="level3" data-number="2.2.2">
<h3 data-number="2.2.2" class="anchored" data-anchor-id="b.-redcap"><span class="header-section-number">2.2.2</span> <strong>b. REDCap</strong></h3>
<ul>
<li><p><strong>Validation Features:</strong></p>
<ul>
<li>Real-time <strong>range and logic checks</strong>.</li>
<li>Uses <strong>branching logic</strong> and <strong>calculated fields</strong>.</li>
<li>Custom <strong>data quality rules</strong> via SQL queries.</li>
</ul></li>
<li><p><strong>Example Implementation:</strong></p>
<pre class="text"><code>[age] &gt; 18 AND [age] &lt; 65</code></pre></li>
<li><p><strong>Website:</strong> <a href="https://projectredcap.org/">projectredcap.org</a></p></li>
</ul>
<hr>
</section>
<section id="c.-clincapture" class="level3" data-number="2.2.3">
<h3 data-number="2.2.3" class="anchored" data-anchor-id="c.-clincapture"><span class="header-section-number">2.2.3</span> <strong>c.&nbsp;ClinCapture</strong></h3>
<ul>
<li><strong>Validation Features:</strong>
<ul>
<li>JavaScript-based validation for logic and range checks.</li>
<li>Custom queries to detect missing or inconsistent data.</li>
</ul></li>
<li><strong>Website:</strong> <a href="https://www.clincapture.com/">clincapture.com</a></li>
</ul>
<hr>
</section>
</section>
<section id="custom-validation-using-general-purpose-tools" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="custom-validation-using-general-purpose-tools"><span class="header-section-number">2.3</span> <strong>3. Custom Validation Using General-Purpose Tools</strong></h2>
<section id="a.-r-for-data-validation" class="level3" data-number="2.3.1">
<h3 data-number="2.3.1" class="anchored" data-anchor-id="a.-r-for-data-validation"><span class="header-section-number">2.3.1</span> <strong>a. R for Data Validation</strong></h3>
<ul>
<li><p><strong>Libraries:</strong> <code>validate</code>, <code>pointblank</code></p></li>
<li><p><strong>Example:</strong></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(validate)</span>
<span id="cb3-2">rules <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">validator</span>(</span>
<span id="cb3-3">  age <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>,</span>
<span id="cb3-4">  bmi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> bmi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,</span>
<span id="cb3-5">  start_date <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> end_date</span>
<span id="cb3-6">)</span>
<span id="cb3-7">check_results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">confront</span>(data, rules)</span>
<span id="cb3-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(check_results)</span></code></pre></div></li>
</ul>
<hr>
</section>
<section id="b.-python-for-data-validation" class="level3" data-number="2.3.2">
<h3 data-number="2.3.2" class="anchored" data-anchor-id="b.-python-for-data-validation"><span class="header-section-number">2.3.2</span> <strong>b. Python for Data Validation</strong></h3>
<ul>
<li><p><strong>Libraries:</strong> <code>pandera</code>, <code>cerberus</code></p></li>
<li><p><strong>Example:</strong></p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pandera <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DataFrameSchema, Column, Check</span>
<span id="cb4-2"></span>
<span id="cb4-3">schema <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataFrameSchema({</span>
<span id="cb4-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>: Column(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, Check(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">65</span>, error<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Age must be 18-65"</span>)),</span>
<span id="cb4-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bmi"</span>: Column(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>, Check(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, error<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BMI must be realistic"</span>)),</span>
<span id="cb4-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"start_date"</span>: Column(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>),</span>
<span id="cb4-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"end_date"</span>: Column(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, Check(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x, y: x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> y, error<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Start date must be before end date"</span>))</span>
<span id="cb4-8">})</span>
<span id="cb4-9"></span>
<span id="cb4-10">validated_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> schema.validate(df)</span></code></pre></div></li>
</ul>
<hr>
</section>
<section id="c.-sql-for-data-integrity-checks" class="level3" data-number="2.3.3">
<h3 data-number="2.3.3" class="anchored" data-anchor-id="c.-sql-for-data-integrity-checks"><span class="header-section-number">2.3.3</span> <strong>c.&nbsp;SQL for Data Integrity Checks</strong></h3>
<ul>
<li><p><strong>Example:</strong></p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">SELECT</span> patient_id, age</span>
<span id="cb5-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">FROM</span> clinical_data</span>
<span id="cb5-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">WHERE</span> age <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">OR</span> age <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>;</span></code></pre></div></li>
</ul>
<hr>
</section>
</section>
<section id="integrating-validation-into-edc-workflows" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="integrating-validation-into-edc-workflows"><span class="header-section-number">2.4</span> <strong>4. Integrating Validation into EDC Workflows</strong></h2>
<ul>
<li><strong>Automated Validation Pipelines:</strong> Apache NiFi, Talend, Pentaho for ETL-based validation.</li>
<li><strong>FHIR/CDISC Compliance:</strong> OpenCDISC Validator for CDISC standards (SDTM/ADaM).</li>
</ul>
<hr>
</section>
<section id="conclusion" class="level2" data-number="2.5">
<h2 data-number="2.5" class="anchored" data-anchor-id="conclusion"><span class="header-section-number">2.5</span> <strong>Conclusion</strong></h2>
<ul>
<li><strong>For real-time validation:</strong> OpenClinica, REDCap, and ClinCapture provide built-in rule engines.</li>
<li><strong>For custom validation:</strong> R, Python, and SQL offer greater flexibility. <strong>Which approach fits your use case best?</strong></li>
</ul>
</section>
</section>
<section id="shiny-form-validation-with-relational-data-and-machine-learning" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> <strong>Shiny Form Validation with Relational Data and Machine Learning</strong></h1>
<section id="can-shiny-create-forms-with-real-time-validation" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="can-shiny-create-forms-with-real-time-validation"><span class="header-section-number">3.1</span> <strong>Can Shiny Create Forms with Real-Time Validation?</strong></h2>
<p>Yes, <strong>Shiny</strong> can create forms with <strong>real-time validation</strong> by using built-in reactive validation functions and JavaScript-based checks. Shiny provides several approaches for validating user input before submission.</p>
<hr>
</section>
<section id="methods-for-real-time-validation-in-shiny" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="methods-for-real-time-validation-in-shiny"><span class="header-section-number">3.2</span> <strong>Methods for Real-Time Validation in Shiny</strong></h2>
<section id="validate-and-need-for-simple-input-validation" class="level3" data-number="3.2.1">
<h3 data-number="3.2.1" class="anchored" data-anchor-id="validate-and-need-for-simple-input-validation"><span class="header-section-number">3.2.1</span> <strong>1. <code>validate()</code> and <code>need()</code> for Simple Input Validation</strong></h3>
<ul>
<li>These functions allow dynamic validation of form inputs.</li>
<li>Error messages are displayed <strong>instantly</strong> when an invalid input is detected.</li>
</ul>
<section id="example-age-validation-must-be-between-18-65" class="level4" data-number="3.2.1.1">
<h4 data-number="3.2.1.1" class="anchored" data-anchor-id="example-age-validation-must-be-between-18-65"><span class="header-section-number">3.2.1.1</span> <strong>Example: Age Validation (Must be Between 18-65)</strong></h4>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb6-2"></span>
<span id="cb6-3">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb6-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">titlePanel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Real-Time Validation Example"</span>),</span>
<span id="cb6-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarLayout</span>(</span>
<span id="cb6-6">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarPanel</span>(</span>
<span id="cb6-7">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numericInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter Age:"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>),</span>
<span id="cb6-8">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">verbatimTextOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation_message"</span>),</span>
<span id="cb6-9">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"submit"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Submit"</span>)</span>
<span id="cb6-10">        ),</span>
<span id="cb6-11">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainPanel</span>()</span>
<span id="cb6-12">    )</span>
<span id="cb6-13">)</span>
<span id="cb6-14"></span>
<span id="cb6-15">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {</span>
<span id="cb6-16">    output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>validation_message <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderText</span>({</span>
<span id="cb6-17">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">validate</span>(</span>
<span id="cb6-18">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">need</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>age <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Age must be at least 18"</span>),</span>
<span id="cb6-19">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">need</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>age <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">65</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Age must be 65 or below"</span>)</span>
<span id="cb6-20">        )</span>
<span id="cb6-21">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valid input!"</span></span>
<span id="cb6-22">    })</span>
<span id="cb6-23">}</span>
<span id="cb6-24"></span>
<span id="cb6-25"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(ui, server)</span></code></pre></div>
<hr>
</section>
</section>
<section id="shinyvalidate-package-for-advanced-form-validation" class="level3" data-number="3.2.2">
<h3 data-number="3.2.2" class="anchored" data-anchor-id="shinyvalidate-package-for-advanced-form-validation"><span class="header-section-number">3.2.2</span> <strong>2. <code>shinyvalidate</code> Package for Advanced Form Validation</strong></h3>
<p>The <code>shinyvalidate</code> package allows multiple <strong>dependent</strong> form inputs to be validated <strong>before submission</strong>.</p>
<section id="example-multiple-field-validation-email-age" class="level4" data-number="3.2.2.1">
<h4 data-number="3.2.2.1" class="anchored" data-anchor-id="example-multiple-field-validation-email-age"><span class="header-section-number">3.2.2.1</span> <strong>Example: Multiple Field Validation (Email &amp; Age)</strong></h4>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shinyvalidate)</span>
<span id="cb7-3"></span>
<span id="cb7-4">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb7-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">titlePanel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shinyvalidate Example"</span>),</span>
<span id="cb7-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter Email:"</span>),</span>
<span id="cb7-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numericInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter Age:"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>),</span>
<span id="cb7-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"submit"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Submit"</span>),</span>
<span id="cb7-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">verbatimTextOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation_message"</span>)</span>
<span id="cb7-10">)</span>
<span id="cb7-11"></span>
<span id="cb7-12">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {</span>
<span id="cb7-13">    iv <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> InputValidator<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">new</span>()</span>
<span id="cb7-14">    </span>
<span id="cb7-15">    iv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_rule</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sv_email</span>()) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Validates email format</span></span>
<span id="cb7-16">    iv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_rule</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sv_between</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">65</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Age must be between 18 and 65</span></span>
<span id="cb7-17">    </span>
<span id="cb7-18">    iv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enable</span>()</span>
<span id="cb7-19">    </span>
<span id="cb7-20">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observeEvent</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>submit, {</span>
<span id="cb7-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (iv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is_valid</span>()) {</span>
<span id="cb7-22">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">showModal</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">modalDialog</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Form submitted successfully!"</span>))</span>
<span id="cb7-23">        } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb7-24">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">showModal</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">modalDialog</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Please fix errors before submitting."</span>))</span>
<span id="cb7-25">        }</span>
<span id="cb7-26">    })</span>
<span id="cb7-27">}</span>
<span id="cb7-28"></span>
<span id="cb7-29"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(ui, server)</span></code></pre></div>
<hr>
</section>
</section>
<section id="javascript-based-validation-for-immediate-feedback" class="level3" data-number="3.2.3">
<h3 data-number="3.2.3" class="anchored" data-anchor-id="javascript-based-validation-for-immediate-feedback"><span class="header-section-number">3.2.3</span> <strong>3. JavaScript-Based Validation for Immediate Feedback</strong></h3>
<p>Shiny supports <strong>JavaScript validation</strong> for client-side real-time validation <strong>before</strong> sending data to the server.</p>
<section id="example-real-time-numeric-input-restriction" class="level4" data-number="3.2.3.1">
<h4 data-number="3.2.3.1" class="anchored" data-anchor-id="example-real-time-numeric-input-restriction"><span class="header-section-number">3.2.3.1</span> <strong>Example: Real-Time Numeric Input Restriction</strong></h4>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb8-2"></span>
<span id="cb8-3">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb8-4">    tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">script</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">HTML</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb8-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        function validateNumericInput() {</span></span>
<span id="cb8-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            var input = document.getElementById('numInput').value;</span></span>
<span id="cb8-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            if (isNaN(input) || input &lt; 1 || input &gt; 100) {</span></span>
<span id="cb8-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                document.getElementById('error').innerHTML = 'Enter a valid number (1-100)';</span></span>
<span id="cb8-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            } else {</span></span>
<span id="cb8-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                document.getElementById('error').innerHTML = '';</span></span>
<span id="cb8-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            }</span></span>
<span id="cb8-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        }</span></span>
<span id="cb8-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    "</span>)),</span>
<span id="cb8-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"numInput"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter a number:"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">oninput =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validateNumericInput()"</span>),</span>
<span id="cb8-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">span</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color: red;"</span>)</span>
<span id="cb8-16">)</span>
<span id="cb8-17"></span>
<span id="cb8-18">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {}</span>
<span id="cb8-19"></span>
<span id="cb8-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(ui, server)</span></code></pre></div>
<hr>
</section>
</section>
</section>
<section id="can-javascript-access-relational-data-and-machine-learning-tools" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="can-javascript-access-relational-data-and-machine-learning-tools"><span class="header-section-number">3.3</span> <strong>Can JavaScript Access Relational Data and Machine Learning Tools?</strong></h2>
<p>Yes, <strong>JavaScript</strong> can access <strong>relational datasets</strong> and <strong>machine learning tools</strong> for real-time validation. This can be achieved through:</p>
<ol type="1">
<li><strong>Client-Side Validation via IndexedDB</strong> (local relational database in browser)</li>
<li><strong>AJAX Requests to Query a Remote Database</strong> (MySQL, PostgreSQL, etc.)</li>
<li><strong>Calling a Machine Learning Model via an API</strong> (TensorFlow.js, Python API)</li>
<li><strong>WebAssembly (WASM) for Local ML Computation</strong></li>
</ol>
<hr>
</section>
<section id="using-indexeddb-for-local-relational-data-validation" class="level2" data-number="3.4">
<h2 data-number="3.4" class="anchored" data-anchor-id="using-indexeddb-for-local-relational-data-validation"><span class="header-section-number">3.4</span> <strong>1. Using IndexedDB for Local Relational Data Validation</strong></h2>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb9-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb9-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> db<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-3">  </span>
<span id="cb9-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Open IndexedDB database</span></span>
<span id="cb9-5">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> request <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> indexedDB<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ClinicalDB"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-6">  request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">onsuccess</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">event</span>) {</span>
<span id="cb9-7">      db <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">event</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">target</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">result</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-8">  }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-9">  </span>
<span id="cb9-10">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">validateUserID</span>() {</span>
<span id="cb9-11">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> inputID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"userID"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-12">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> transaction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> db<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transaction</span>([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"patients"</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-13">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> objectStore <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transaction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">objectStore</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"patients"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-14">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> request <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectStore<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get</span>(inputID)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-15">      </span>
<span id="cb9-16">      request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">onsuccess</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>() {</span>
<span id="cb9-17">          <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">result</span>) {</span>
<span id="cb9-18">              <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">innerHTML</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invalid Patient ID!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-19">          } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb9-20">              <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">innerHTML</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-21">          }</span>
<span id="cb9-22">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-23">  }</span>
<span id="cb9-24"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb9-25"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">input</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"userID"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> oninput</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validateUserID()"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb9-26"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">span</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> style</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color: red;"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">span</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<hr>
</section>
<section id="using-ajax-to-query-a-remote-sql-database" class="level2" data-number="3.5">
<h2 data-number="3.5" class="anchored" data-anchor-id="using-ajax-to-query-a-remote-sql-database"><span class="header-section-number">3.5</span> <strong>2. Using AJAX to Query a Remote SQL Database</strong></h2>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb10-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">checkPatientID</span>() {</span>
<span id="cb10-3">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> userID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"userID"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-4">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fetch</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`/validate_id?userID=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>userID<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)</span>
<span id="cb10-5">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span>(response <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> response<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">json</span>())</span>
<span id="cb10-6">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span>(data <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb10-7">              <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">valid</span>) {</span>
<span id="cb10-8">                  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">innerHTML</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-9">              } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb10-10">                  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">innerHTML</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invalid Patient ID!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-11">              }</span>
<span id="cb10-12">          })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-13">  }</span>
<span id="cb10-14"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-15"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">input</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"userID"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> oninput</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"checkPatientID()"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-16"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">span</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> style</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color: red;"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">span</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<hr>
</section>
<section id="calling-a-machine-learning-model-for-validation" class="level2" data-number="3.6">
<h2 data-number="3.6" class="anchored" data-anchor-id="calling-a-machine-learning-model-for-validation"><span class="header-section-number">3.6</span> <strong>3. Calling a Machine Learning Model for Validation</strong></h2>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb11-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb11-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">validateAdverseEvent</span>() {</span>
<span id="cb11-3">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> eventText <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"eventText"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-4">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fetch</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`/predict_adverse_event`</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb11-5">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">method</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"POST"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb11-6">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">headers</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> { <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Content-Type"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"application/json"</span> }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb11-7">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">body</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">JSON</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stringify</span>({ <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> eventText })</span>
<span id="cb11-8">      })</span>
<span id="cb11-9">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span>(response <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> response<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">json</span>())</span>
<span id="cb11-10">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span>(data <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb11-11">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">innerHTML</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> </span>
<span id="cb11-12">              data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">valid</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Potentially invalid event!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-13">      })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-14">  }</span>
<span id="cb11-15"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb11-16"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">input</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"eventText"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> oninput</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validateAdverseEvent()"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb11-17"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">span</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> style</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color: red;"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">span</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<hr>
</section>
<section id="choosing-the-best-approach" class="level2" data-number="3.7">
<h2 data-number="3.7" class="anchored" data-anchor-id="choosing-the-best-approach"><span class="header-section-number">3.7</span> <strong>Choosing the Best Approach</strong></h2>
<table class="caption-top table">
<thead>
<tr class="header">
<th>Approach</th>
<th>Best For</th>
<th>Needs Server?</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>IndexedDB</strong></td>
<td>Local relational checks</td>
<td>❌ No</td>
</tr>
<tr class="even">
<td><strong>AJAX (SQL Backend)</strong></td>
<td>Large relational datasets</td>
<td>✅ Yes</td>
</tr>
<tr class="odd">
<td><strong>ML API (Python/Flask)</strong></td>
<td>Advanced validation via AI</td>
<td>✅ Yes</td>
</tr>
<tr class="even">
<td><strong>TensorFlow.js</strong></td>
<td>Local ML without server</td>
<td>❌ No</td>
</tr>
</tbody>
</table>
<hr>
</section>
<section id="conclusion-1" class="level2" data-number="3.8">
<h2 data-number="3.8" class="anchored" data-anchor-id="conclusion-1"><span class="header-section-number">3.8</span> <strong>Conclusion</strong></h2>
<ul>
<li><strong>For small datasets</strong>, use <strong>IndexedDB</strong> (local relational validation).</li>
<li><strong>For real-time database validation</strong>, use <strong>AJAX + SQL backend</strong>.</li>
<li><strong>For AI-powered checks</strong>, use <strong>Flask ML API</strong> or <strong>TensorFlow.js</strong>.</li>
</ul>
</section>
</section>
<section id="spreadsheet-driven-validation-system-for-shiny-forms" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> <strong>Spreadsheet-Driven Validation System for Shiny Forms</strong></h1>
<section id="your-idea-spreadsheet-driven-validation-system" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="your-idea-spreadsheet-driven-validation-system"><span class="header-section-number">4.1</span> <strong>Your Idea: Spreadsheet-Driven Validation System</strong></h2>
<p>Your idea of defining <strong>data validation rules in a spreadsheet</strong>, then <strong>processing them with Lua</strong> to generate <strong>JavaScript</strong> for <strong>Shiny validation</strong> is a <strong>great idea</strong>. This approach would: - Allow non-programmers (e.g., clinicians, data managers) to define <strong>custom validation rules</strong> in a familiar format (Excel, Google Sheets, CSV). - Automate the generation of <strong>JavaScript validation logic</strong> from a structured input (spreadsheet). - Integrate validation logic into <strong>Shiny</strong> dynamically, enabling real-time data validation.</p>
<hr>
</section>
<section id="has-this-been-done-before" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="has-this-been-done-before"><span class="header-section-number">4.2</span> <strong>Has This Been Done Before?</strong></h2>
<p>Yes, similar approaches have been explored, but not exactly in the way you describe.</p>
<ol type="1">
<li><strong>Spreadsheet-Driven Validation Rules</strong>
<ul>
<li><strong>Medidata Rave</strong> (commercial EDC system) allows validation checks to be defined in a <strong>spreadsheet-like rule editor</strong>.</li>
<li><strong>OpenClinica</strong> supports rule definitions in a <strong>spreadsheet format</strong> (ODK XLSForm).</li>
<li><strong>RedCAP</strong> allows some rule-based constraints in CSV.</li>
</ul></li>
<li><strong>Code Generation from Spreadsheets</strong>
<ul>
<li><strong>Google Sheets + Apps Script</strong>: People generate <strong>JavaScript validation</strong> from structured spreadsheet data.</li>
<li><strong>Lua for Code Generation</strong>: Lua is used in game engines and <strong>config-driven</strong> workflows, but it has not been widely used to generate <strong>JavaScript validation rules from spreadsheets</strong>.</li>
</ul></li>
</ol>
<p>Thus, <strong>your approach is novel in the clinical data validation context</strong>—this could be <strong>a powerful open-source tool</strong>.</p>
<hr>
</section>
<section id="why-this-is-a-good-idea" class="level2" data-number="4.3">
<h2 data-number="4.3" class="anchored" data-anchor-id="why-this-is-a-good-idea"><span class="header-section-number">4.3</span> <strong>Why This is a Good Idea</strong></h2>
<table class="caption-top table">
<colgroup>
<col style="width: 50%">
<col style="width: 50%">
</colgroup>
<thead>
<tr class="header">
<th>Feature</th>
<th>Benefit</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>Spreadsheet as Validation Rule Storage</strong></td>
<td>Easy for non-programmers to modify rules</td>
</tr>
<tr class="even">
<td><strong>Lua as Code Generator</strong></td>
<td>Fast, lightweight, and excellent for text processing</td>
</tr>
<tr class="odd">
<td><strong>JavaScript for Validation</strong></td>
<td>Enables <strong>real-time validation</strong> in <strong>Shiny</strong> without server overhead</td>
</tr>
<tr class="even">
<td><strong>Dynamic Validation Updates</strong></td>
<td>Changing the spreadsheet updates validation logic without modifying code</td>
</tr>
</tbody>
</table>
<hr>
</section>
<section id="how-it-would-work" class="level2" data-number="4.4">
<h2 data-number="4.4" class="anchored" data-anchor-id="how-it-would-work"><span class="header-section-number">4.4</span> <strong>How It Would Work</strong></h2>
<section id="define-rules-in-a-spreadsheet" class="level3" data-number="4.4.1">
<h3 data-number="4.4.1" class="anchored" data-anchor-id="define-rules-in-a-spreadsheet"><span class="header-section-number">4.4.1</span> <strong>1. Define Rules in a Spreadsheet</strong></h3>
<p>Each field in the Shiny app gets a validation rule in <strong>one cell per field</strong>.</p>
<table class="caption-top table">
<colgroup>
<col style="width: 30%">
<col style="width: 69%">
</colgroup>
<thead>
<tr class="header">
<th>Field</th>
<th>Validation Rule</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>age</td>
<td><code>age &gt;= 18 &amp;&amp; age &lt;= 65</code></td>
</tr>
<tr class="even">
<td>email</td>
<td><code>/^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$/i.test(email)</code></td>
</tr>
<tr class="odd">
<td>height</td>
<td><code>height &gt; 50 &amp;&amp; height &lt; 250</code></td>
</tr>
<tr class="even">
<td>bmi</td>
<td><code>weight / (height / 100) ** 2 &gt; 15 &amp;&amp; weight / (height / 100) ** 2 &lt; 50</code></td>
</tr>
</tbody>
</table>
<hr>
</section>
<section id="lua-script-processes-the-spreadsheet" class="level3" data-number="4.4.2">
<h3 data-number="4.4.2" class="anchored" data-anchor-id="lua-script-processes-the-spreadsheet"><span class="header-section-number">4.4.2</span> <strong>2. Lua Script Processes the Spreadsheet</strong></h3>
<p>A <strong>Lua script</strong> reads the spreadsheet (CSV, Excel) and <strong>generates JavaScript validation functions</strong>.</p>
<section id="example-lua-script-process_validation.lua" class="level4" data-number="4.4.2.1">
<h4 data-number="4.4.2.1" class="anchored" data-anchor-id="example-lua-script-process_validation.lua"><span class="header-section-number">4.4.2.1</span> <strong>Example Lua Script (<code>process_validation.lua</code>)</strong></h4>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode lua code-with-copy"><code class="sourceCode lua"><span id="cb12-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">csv</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"csv"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- Use a CSV library like `luacsv`</span></span>
<span id="cb12-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">file</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">io.open</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation_rules.csv"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb12-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">parsed_data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">csv</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*all"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb12-4"></span>
<span id="cb12-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">js_code</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"const validationRules = {</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb12-6"></span>
<span id="cb12-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">i</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">row</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ipairs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">parsed_data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb12-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">field</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">rule</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">row</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">row</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb12-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">js_code</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">js_code</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">string.format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'    "%s": function(value) { return %s; },</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">field</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">rule</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb12-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span></span>
<span id="cb12-11"></span>
<span id="cb12-12"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">js_code</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">js_code</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"};</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb12-13"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">close</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb12-14"></span>
<span id="cb12-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">js_file</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">io.open</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation.js"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb12-16"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">js_file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">js_code</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb12-17"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">js_file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">close</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb12-18"></span>
<span id="cb12-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Validation JavaScript generated successfully!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<hr>
</section>
</section>
<section id="javascript-file-is-included-in-shiny" class="level3" data-number="4.4.3">
<h3 data-number="4.4.3" class="anchored" data-anchor-id="javascript-file-is-included-in-shiny"><span class="header-section-number">4.4.3</span> <strong>3. JavaScript File is Included in Shiny</strong></h3>
<p>The <strong>generated JavaScript file (<code>validation.js</code>)</strong> is included in the Shiny app.</p>
<section id="example-of-integrating-validation.js-in-shiny" class="level4" data-number="4.4.3.1">
<h4 data-number="4.4.3.1" class="anchored" data-anchor-id="example-of-integrating-validation.js-in-shiny"><span class="header-section-number">4.4.3.1</span> <strong>Example of Integrating <code>validation.js</code> in Shiny</strong></h4>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb13-2"></span>
<span id="cb13-3">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb13-4">    tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">script</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">src=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation.js"</span>)),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Include generated JS</span></span>
<span id="cb13-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numericInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter Age:"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>),</span>
<span id="cb13-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter Email:"</span>),</span>
<span id="cb13-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"submit"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Submit"</span>),</span>
<span id="cb13-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">verbatimTextOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation_message"</span>)</span>
<span id="cb13-9">)</span>
<span id="cb13-10"></span>
<span id="cb13-11">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {</span>
<span id="cb13-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observeEvent</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>submit, {</span>
<span id="cb13-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Call JavaScript function to validate fields</span></span>
<span id="cb13-14">        shinyjs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runjs</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"if (!validationRules.age(input$age)) alert('Invalid Age!');"</span>)</span>
<span id="cb13-15">        shinyjs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runjs</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"if (!validationRules.email(input$email)) alert('Invalid Email!');"</span>)</span>
<span id="cb13-16">    })</span>
<span id="cb13-17">}</span>
<span id="cb13-18"></span>
<span id="cb13-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(ui, server)</span></code></pre></div>
<hr>
</section>
</section>
</section>
<section id="advantages-of-this-approach" class="level2" data-number="4.5">
<h2 data-number="4.5" class="anchored" data-anchor-id="advantages-of-this-approach"><span class="header-section-number">4.5</span> <strong>Advantages of This Approach</strong></h2>
<p>✅ <strong>Non-programmers can define validation rules</strong> in spreadsheets<br>
✅ <strong>Lua is fast &amp; lightweight for generating JavaScript</strong><br>
✅ <strong>JavaScript validation happens instantly in the browser</strong><br>
✅ <strong>Shiny remains reactive while offloading validation to the client</strong></p>
<hr>
</section>
<section id="potential-enhancements" class="level2" data-number="4.6">
<h2 data-number="4.6" class="anchored" data-anchor-id="potential-enhancements"><span class="header-section-number">4.6</span> <strong>Potential Enhancements</strong></h2>
<p>🚀 <strong>Support relational data</strong>: Extend Lua to query databases and include dynamic constraints<br>
🚀 <strong>Integrate ML</strong>: Add <strong>TensorFlow.js</strong> or an API to use machine learning for validation<br>
🚀 <strong>Validation UI</strong>: Build a Shiny app to visualize and edit validation rules dynamically</p>
<hr>
<section id="next-steps" class="level3" data-number="4.6.1">
<h3 data-number="4.6.1" class="anchored" data-anchor-id="next-steps"><span class="header-section-number">4.6.1</span> <strong>Next Steps</strong></h3>
<p>Would you like a <strong>working prototype</strong> where we generate JavaScript from a spreadsheet and use it in a Shiny app? 🚀</p>
</section>
</section>
</section>
<section id="dynamic-rule-reloading-and-database-integration-for-shiny-forms" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> <strong>Dynamic Rule Reloading and Database Integration for Shiny Forms</strong></h1>
<section id="dynamic-rule-reloading-spreadsheet-based" class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="dynamic-rule-reloading-spreadsheet-based"><span class="header-section-number">5.1</span> <strong>1. Dynamic Rule Reloading (Spreadsheet-Based)</strong></h2>
<section id="a.-spreadsheet-format-validation_rules.csv" class="level3" data-number="5.1.1">
<h3 data-number="5.1.1" class="anchored" data-anchor-id="a.-spreadsheet-format-validation_rules.csv"><span class="header-section-number">5.1.1</span> <strong>A. Spreadsheet Format (<code>validation_rules.csv</code>)</strong></h3>
<pre class="csv"><code>field,rule
age,age &gt;= 18 &amp;&amp; age &lt;= 65
email,/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(email)
height,height &gt; 50 &amp;&amp; height &lt; 250
bmi,weight / (height / 100) ** 2 &gt; 15 &amp;&amp; weight / (height / 100) ** 2 &lt; 50</code></pre>
<hr>
</section>
<section id="b.-lua-script-to-convert-csv-to-javascript-process_validation.lua" class="level3" data-number="5.1.2">
<h3 data-number="5.1.2" class="anchored" data-anchor-id="b.-lua-script-to-convert-csv-to-javascript-process_validation.lua"><span class="header-section-number">5.1.2</span> <strong>B. Lua Script to Convert CSV to JavaScript (<code>process_validation.lua</code>)</strong></h3>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode lua code-with-copy"><code class="sourceCode lua"><span id="cb15-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">csv</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"luacsv"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- Requires CSV parser library</span></span>
<span id="cb15-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">file</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">io.open</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation_rules.csv"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb15-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">parsed_data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">csv</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*all"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb15-4"></span>
<span id="cb15-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">js_code</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"const validationRules = {</span></span>
<span id="cb15-6"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb15-7"></span>
<span id="cb15-8"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">for i, row in ipairs(parsed_data) do</span></span>
<span id="cb15-9"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">    local field, rule = row[1], row[2]</span></span>
<span id="cb15-10"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">    js_code = js_code .. string.format('    "%s": function(value) { return %s; },</span></span>
<span id="cb15-11"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">', field, rule)</span></span>
<span id="cb15-12"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb15-13"></span>
<span id="cb15-14"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">js_code = js_code .. "};</span></span>
<span id="cb15-15"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb15-16"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">file:close()</span></span>
<span id="cb15-17"></span>
<span id="cb15-18"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">local js_file = io.open("validation.js", "w")</span></span>
<span id="cb15-19"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">js_file:write(js_code)</span></span>
<span id="cb15-20"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">js_file:close()</span></span>
<span id="cb15-21"></span>
<span id="cb15-22"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">print("Validation JavaScript generated successfully!")</span></span></code></pre></div>
<hr>
</section>
<section id="c.-shiny-app-with-automatic-rule-reloading-app.r" class="level3" data-number="5.1.3">
<h3 data-number="5.1.3" class="anchored" data-anchor-id="c.-shiny-app-with-automatic-rule-reloading-app.r"><span class="header-section-number">5.1.3</span> <strong>C. Shiny App with Automatic Rule Reloading (<code>app.R</code>)</strong></h3>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb16-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shinyjs)</span>
<span id="cb16-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(fs)</span>
<span id="cb16-4"></span>
<span id="cb16-5">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb16-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useShinyjs</span>(),</span>
<span id="cb16-7">    tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">script</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">src =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation.js"</span>)),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Include JS dynamically</span></span>
<span id="cb16-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">titlePanel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dynamic Validation Rules in Shiny"</span>),</span>
<span id="cb16-9">    </span>
<span id="cb16-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarLayout</span>(</span>
<span id="cb16-11">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarPanel</span>(</span>
<span id="cb16-12">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numericInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter Age:"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>),</span>
<span id="cb16-13">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter Email:"</span>),</span>
<span id="cb16-14">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numericInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"height"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter Height (cm):"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>),</span>
<span id="cb16-15">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numericInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"weight"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter Weight (kg):"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>),</span>
<span id="cb16-16">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"submit"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Submit"</span>),</span>
<span id="cb16-17">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">verbatimTextOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation_message"</span>)</span>
<span id="cb16-18">        ),</span>
<span id="cb16-19">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainPanel</span>()</span>
<span id="cb16-20">    )</span>
<span id="cb16-21">)</span>
<span id="cb16-22"></span>
<span id="cb16-23">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {</span>
<span id="cb16-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Watch for changes in the validation rules file</span></span>
<span id="cb16-25">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observe</span>({</span>
<span id="cb16-26">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">invalidateLater</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>, session)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check every 5 seconds</span></span>
<span id="cb16-27">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runjs</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"delete window.validationRules; $.getScript('validation.js');"</span>)</span>
<span id="cb16-28">    })</span>
<span id="cb16-29">    </span>
<span id="cb16-30">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observeEvent</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>submit, {</span>
<span id="cb16-31">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runjs</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            let ageValid = validationRules['age'](parseFloat($('#age').val()));</span></span>
<span id="cb16-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            let emailValid = validationRules['email']($('#email').val());</span></span>
<span id="cb16-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            let heightValid = validationRules['height'](parseFloat($('#height').val()));</span></span>
<span id="cb16-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            let bmi = parseFloat($('#weight').val()) / ((parseFloat($('#height').val()) / 100) ** 2);</span></span>
<span id="cb16-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            let bmiValid = validationRules['bmi'](bmi);</span></span>
<span id="cb16-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            </span></span>
<span id="cb16-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            let messages = [];</span></span>
<span id="cb16-39"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            if (!ageValid) messages.push('Invalid Age!');</span></span>
<span id="cb16-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            if (!emailValid) messages.push('Invalid Email!');</span></span>
<span id="cb16-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            if (!heightValid) messages.push('Invalid Height!');</span></span>
<span id="cb16-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            if (!bmiValid) messages.push('Invalid BMI!');</span></span>
<span id="cb16-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            </span></span>
<span id="cb16-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            if (messages.length &gt; 0) {</span></span>
<span id="cb16-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                alert(messages.join('</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'));</span></span>
<span id="cb16-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            } else {</span></span>
<span id="cb16-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                alert('All inputs are valid!');</span></span>
<span id="cb16-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            }</span></span>
<span id="cb16-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "</span>);</span>
<span id="cb16-50">    })</span>
<span id="cb16-51">}</span>
<span id="cb16-52"></span>
<span id="cb16-53"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(ui, server)</span></code></pre></div>
<p>✔ <strong>Every 5 seconds</strong>, Shiny reloads <code>validation.js</code> if <code>validation_rules.csv</code> was modified.<br>
✔ The new validation rules apply <strong>immediately</strong> in the browser.<br>
✔ No need to restart the Shiny app.</p>
<hr>
</section>
</section>
<section id="database-integration-for-validation-rules" class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="database-integration-for-validation-rules"><span class="header-section-number">5.2</span> <strong>2. Database Integration for Validation Rules</strong></h2>
<p>Instead of a CSV file, the validation rules can be <strong>stored in a database</strong> (e.g., MySQL, PostgreSQL, SQLite).</p>
<section id="a.-database-schema" class="level3" data-number="5.2.1">
<h3 data-number="5.2.1" class="anchored" data-anchor-id="a.-database-schema"><span class="header-section-number">5.2.1</span> <strong>A. Database Schema</strong></h3>
<p>Table: <strong>validation_rules</strong></p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb17-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">CREATE</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">TABLE</span> validation_rules (</span>
<span id="cb17-2">    field TEXT <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">PRIMARY</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">KEY</span>,</span>
<span id="cb17-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rule</span> TEXT</span>
<span id="cb17-4">);</span></code></pre></div>
<p>Example data:</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb18-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">INSERT</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">INTO</span> validation_rules (field, <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rule</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">VALUES</span></span>
<span id="cb18-2">(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'age'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'age &gt;= 18 &amp;&amp; age &lt;= 65'</span>),</span>
<span id="cb18-3">(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'email'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(email)'</span>),</span>
<span id="cb18-4">(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'height'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'height &gt; 50 &amp;&amp; height &lt; 250'</span>),</span>
<span id="cb18-5">(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bmi'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'weight / (height / 100) ** 2 &gt; 15 &amp;&amp; weight / (height / 100) ** 2 &lt; 50'</span>);</span></code></pre></div>
<hr>
</section>
<section id="b.-lua-script-to-fetch-rules-from-database-process_validation_db.lua" class="level3" data-number="5.2.2">
<h3 data-number="5.2.2" class="anchored" data-anchor-id="b.-lua-script-to-fetch-rules-from-database-process_validation_db.lua"><span class="header-section-number">5.2.2</span> <strong>B. Lua Script to Fetch Rules from Database (<code>process_validation_db.lua</code>)</strong></h3>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode lua code-with-copy"><code class="sourceCode lua"><span id="cb19-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sqlite3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lsqlite3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb19-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">db</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sqlite3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>open<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation.db"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb19-3"></span>
<span id="cb19-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">js_code</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"const validationRules = {</span></span>
<span id="cb19-5"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb19-6"></span>
<span id="cb19-7"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">for row in db:nrows("SELECT * FROM validation_rules") do</span></span>
<span id="cb19-8"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">    js_code = js_code .. string.format('    "%s": function(value) { return %s; },</span></span>
<span id="cb19-9"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">', row.field, row.rule)</span></span>
<span id="cb19-10"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb19-11"></span>
<span id="cb19-12"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">js_code = js_code .. "};</span></span>
<span id="cb19-13"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb19-14"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">local js_file = io.open("validation.js", "w")</span></span>
<span id="cb19-15"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">js_file:write(js_code)</span></span>
<span id="cb19-16"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">js_file:close()</span></span>
<span id="cb19-17"></span>
<span id="cb19-18"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">db:close()</span></span>
<span id="cb19-19"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">print("Validation JavaScript generated from database successfully!")</span></span></code></pre></div>
<p>This script queries the database and <strong>generates <code>validation.js</code> dynamically</strong>.</p>
<hr>
</section>
<section id="c.-modify-shiny-to-fetch-rules-from-database" class="level3" data-number="5.2.3">
<h3 data-number="5.2.3" class="anchored" data-anchor-id="c.-modify-shiny-to-fetch-rules-from-database"><span class="header-section-number">5.2.3</span> <strong>C. Modify Shiny to Fetch Rules from Database</strong></h3>
<p>Modify the <strong>Shiny <code>server</code> function</strong> to reload validation rules <strong>every 5 seconds</strong>.</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {</span>
<span id="cb20-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observe</span>({</span>
<span id="cb20-3">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">invalidateLater</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>, session)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reload every 5 seconds</span></span>
<span id="cb20-4">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lua process_validation_db.lua"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run Lua script</span></span>
<span id="cb20-5">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runjs</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"delete window.validationRules; $.getScript('validation.js');"</span>)</span>
<span id="cb20-6">    })</span>
<span id="cb20-7">}</span></code></pre></div>
<p>✔ <strong>Shiny queries the database every 5 seconds</strong> and updates validation rules dynamically.<br>
✔ Users can <strong>edit validation rules in the database</strong>, and they apply instantly.<br>
✔ <strong>No restart required</strong>.</p>
<hr>
</section>
</section>
<section id="comparison-spreadsheet-vs.-database" class="level2" data-number="5.3">
<h2 data-number="5.3" class="anchored" data-anchor-id="comparison-spreadsheet-vs.-database"><span class="header-section-number">5.3</span> <strong>Comparison: Spreadsheet vs.&nbsp;Database</strong></h2>
<table class="caption-top table">
<thead>
<tr class="header">
<th>Feature</th>
<th>CSV-Based Dynamic Rules</th>
<th>Database-Based Dynamic Rules</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>Storage</strong></td>
<td>Local file</td>
<td>Centralized database</td>
</tr>
<tr class="even">
<td><strong>Scalability</strong></td>
<td>Best for small teams</td>
<td>Ideal for large-scale use</td>
</tr>
<tr class="odd">
<td><strong>User Interface</strong></td>
<td>Spreadsheet</td>
<td>Web-based admin panel</td>
</tr>
<tr class="even">
<td><strong>Performance</strong></td>
<td>Fast</td>
<td>Requires DB query</td>
</tr>
</tbody>
</table>
<hr>
</section>
<section id="next-steps-1" class="level2" data-number="5.4">
<h2 data-number="5.4" class="anchored" data-anchor-id="next-steps-1"><span class="header-section-number">5.4</span> <strong>Next Steps</strong></h2>
<p>🔥 <strong>Would you like an admin panel in Shiny to edit validation rules directly?</strong><br>
🔥 <strong>Would you like to store validation rules in a NoSQL database (MongoDB)?</strong><br>
🚀 Let me know what enhancements you’d like! 🚀</p>
</section>
<section id="prerequisites" class="level2" data-number="5.5">
<h2 data-number="5.5" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">5.5</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="5.6">
<h2 data-number="5.6" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">5.6</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="5.7">
<h2 data-number="5.7" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">5.7</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="5.8">
<h2 data-number="5.8" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">5.8</span> Further Reading</h2>
<p>In development</p>


<!-- -->

</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {RCT Validation Language},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/rct_validation_lang/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“RCT Validation
Language.”</span> May 13, 2025. <a href="https://focusonr.org/posts/rct_validation_lang/">https://focusonr.org/posts/rct_validation_lang/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/rct_validation_lang/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/rct_validation_lang/img/lua.png" medium="image" type="image/png" height="96" width="144"/>
</item>
<item>
  <title>Mac Workflow for Tracking Daily Research Progress</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/research_management/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/research_management/img/organized.jpg" class="img-fluid figure-img"></p>
<figcaption>quarto</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Tracking daily research progress can quickly become overwhelming without a structured workflow. This guide outlines an efficient system using a well-organized directory structure, automated logging, ChatGPT for dictation and summarization, and Git for version control. By implementing this workflow, you can maintain clear, searchable research logs while reducing manual overhead.</p>
</section>
<section id="step-1-organize-your-research-folder-structure" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Step 1: Organize Your Research Folder Structure</h1>
<p>A structured directory keeps your research files easily accessible and prevents clutter. Use the following command to create a research workspace:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> ~/prj/research_update ~/prj/<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">{X1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">X2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">X3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">X4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">X5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">X6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">X7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">X8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">X9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">X10}</span></span></code></pre></div>
<p>Each project folder should contain:</p>
<ul>
<li><code>notes.md</code> – Running log of project progress</li>
<li><code>references.bib</code> – Citation management</li>
<li><code>data/</code> – Datasets and related files</li>
<li><code>coding/</code> – Code and analyses</li>
<li><code>figures/</code> – Graphs and visualizations</li>
<li><code>tables/</code> – Data summaries</li>
<li><code>archive/</code> – Storage for non-current files</li>
</ul>
</section>
<section id="step-2-implement-a-daily-logging-system" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Step 2: Implement a Daily Logging System</h1>
<p>Maintaining a centralized daily log helps consolidate research updates. Store daily progress for each repository in:</p>
<pre><code>
```sh
~/prj/research_update/daily_log.md</code></pre>
<p>To streamline the process, we use a script to automatically generate a structured prompt for ChatGPT.</p>
</section>
<section id="step-3-automate-dictation-summarization-via-chatgpt" class="level1 page-columns page-full" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Step 3: Automate Dictation &amp; Summarization via ChatGPT</h1>
<p>Use macos built-in dictation tool to provide audio summary, not necessary to follow normal dictation rules e.g.&nbsp;“new line” ChatGPT refines dictated notes into concise summaries.</p>
<section id="step-3.1-initialize-a-chatgpt-dictation-prompt-by" class="level2 page-columns page-full" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="step-3.1-initialize-a-chatgpt-dictation-prompt-by"><span class="header-section-number">4.1</span> Step 3.1: Initialize a chatGPT dictation prompt by</h2>
<p>running this <code>bash</code> script to copy a prelude to the chatGPT prompt to your clipboard: Call it <code>dp</code> (dictation prompt).</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get current date and time</span></span>
<span id="cb3-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">current_time</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span> +<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y-%m-%d %H:%M:%S"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the current directory name</span></span>
<span id="cb3-7"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">current_dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">basename</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PWD</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the prompt with explicit instructions</span></span>
<span id="cb3-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">prompt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I'm an academic biostatistician. I'm working on a data analysis project.</span></span>
<span id="cb3-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">I'm about to dictate daily research progress notes.  </span></span>
<span id="cb3-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">When I'm done, provide a concise summary that includes:  </span></span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">1. The date  and time of dictation (</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$current_time</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">).  The line with date and time</span></span>
<span id="cb3-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">should be the second line of the summary. The first line should be blank. The</span></span>
<span id="cb3-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">date and time line shound be enclosed in a box of ascii characters to set it apart.</span></span>
<span id="cb3-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">2. The name of the current research project directory (</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$current_dir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">).  </span></span>
<span id="cb3-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">3. Each line of the summary including the blank line and the date and time line</span></span>
<span id="cb3-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">and enclosing box lines should begin with </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$current_dir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> so that it can be</span></span>
<span id="cb3-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">extracted using ripgrep.  </span></span>
<span id="cb3-21"></span>
<span id="cb3-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">The notes start here: "</span></span>
<span id="cb3-23"></span>
<span id="cb3-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Copy the prompt to clipboard (MacOS pbcopy)</span></span>
<span id="cb3-25"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$prompt</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pbcopy</span></span>
<span id="cb3-26"></span>
<span id="cb3-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Notify the user</span></span>
<span id="cb3-28"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Prompt copied to clipboard. Paste it into ChatGPT when ready."</span></span></code></pre></div>

<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><embed src="img/flow.pdf" class="img-fluid"></p>
<figcaption>workflow</figcaption>
</figure>
</div>
</div></div></section>
<section id="step-3.2-dictating-notes" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="step-3.2-dictating-notes"><span class="header-section-number">4.2</span> Step 3.2: Dictating Notes</h2>
<ol type="1">
<li>Open ChatGPT (done automatically by “dp” script) and follow these steps:</li>
<li>copy text from clipboard into the prompt box.</li>
<li>submit prompt to prep chatGPT for summarization.</li>
<li>Click chatGPT microphone and Dictate your research notes.</li>
<li>When finished dictating submit prompt to ChatGPT for summarization.</li>
<li>Copy and generated summary onto the clipboard.</li>
</ol>
<p>Use the following script to append the summary to your daily log: and push the changes to daily_log.md to the remote repository on GitHub.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the current directory name</span></span>
<span id="cb4-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">current_dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">basename</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PWD</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the current date and time</span></span>
<span id="cb4-7"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">current_time</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span> +<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y-%m-%d %H:%M:%S"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-8"></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the clipboard content (MacOS pbpaste)</span></span>
<span id="cb4-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">clipboard_content</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pbpaste</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-11"></span>
<span id="cb4-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Echo the output</span></span>
<span id="cb4-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb4-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$clipboard_content</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> ~/prj/research_update/daily_log.md</span>
<span id="cb4-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> ~/prj/research_update/daily_log.md</span>
<span id="cb4-16"></span>
<span id="cb4-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Confirm success</span></span>
<span id="cb4-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Update for </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$current_dir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> appended to daily_log.md in ~/prj/research_update"</span></span>
<span id="cb4-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ~/prj/research_update</span>
<span id="cb4-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add .</span>
<span id="cb4-21">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-a</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Daily log update </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span> +<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%Y-%m-%d'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb4-22">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push</span></code></pre></div>
</section>
</section>
<section id="step-5-search-retrieve-past-notes" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Step 5: Search &amp; Retrieve Past Notes</h1>
<p>Use <code>grep</code> to find past research logs:</p>
<p>The following script searches the daily log for the current project directory and displays the results: Call it “sp” (search project).</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb5-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">current_dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">basename</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PWD</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rg</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$current_dir</span> ~/prj/research_update/daily_log.md <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cut</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c6-</span></span></code></pre></div>
</section>
<section id="summary-of-the-workflow" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Summary of the Workflow</h1>
<ol type="1">
<li>Organize project folders.</li>
<li>Set up a centralized daily log.</li>
<li>Use ChatGPT for dictation and summarization.</li>
<li>Automate log updates with a script.</li>
<li>Track changes with Git.</li>
<li>Easily search and retrieve past notes.</li>
</ol>
<p>By integrating this workflow, you’ll add structured daily documentation with minimal effort.</p>
</section>
<section id="appendix-experimental-approach" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> Appendix: Experimental Approach</h1>
<p>In theory it should be possible to use ChatGPT to generate the daily log directly</p>
<section id="prerequisites" class="level2" data-number="7.1">
<h2 data-number="7.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">7.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="7.2">
<h2 data-number="7.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">7.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="7.3">
<h2 data-number="7.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">7.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="7.4">
<h2 data-number="7.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">7.4</span> Further Reading</h2>
<p>In development</p>


<!-- -->

</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Mac {Workflow} for {Tracking} {Daily} {Research} {Progress}},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/research_management/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Mac Workflow for Tracking Daily
Research Progress.”</span> May 13, 2025. <a href="https://focusonr.org/posts/research_management/">https://focusonr.org/posts/research_management/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/research_management/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/research_management/img/organized.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Using the AWS command line interface to launch an EC2 server</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/server_setup_aws_cli/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://focusonr.org/posts/server_setup_aws_cli/img/aws.jpg" class="img-fluid"></p>
</div></div><section id="introduction" class="level1 page-columns page-full" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>This post suggests a straightforward strategy for quickly getting a secure <code>AWS EC2</code> server up and running.</p>
<p>In a separate post (<a href="https://focusonr.org/posts/setupaws/">here</a>) we address the same task using the interactive Elastic Compute Cloud (EC2) dashboard. While its certainly instructive to use the EC2 console interface to set up a working environment in <code>AWS</code> and launch a custom server, it can become a tedious process after the first few repetitions. In this post we’ll present a set of <code>bash</code> shell scripts to perform the same task, making use of the AWS command line interface (CLI).</p>
<p>To get started, install and configure the <code>awscli</code> app using the commands (on your <code>mac</code> workstation):</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>NB In this post commands issued at the shell prompt are prefaced with a right arrow “&gt;”</p>
</div></div><div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> brew <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install</span> awscli</span>
<span id="cb1-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>  aws <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">configure</span></span></code></pre></div>

<div class="no-row-height column-margin column-container"><div class="">
<p>Instructions to install the homebrew software management system on a mac can be found (<a href="https://brew.sh/">here</a>).</p>
</div></div><p>The <code>aws</code> app will initially ask for your <code>IAM</code> credentials. If you don’t have an <code>IAM</code> ID, Appendix 1 (here) provides details on obtaining <code>IAM</code> credentials from the AWS interface. Additional instructions from <code>Amazon</code> for installing the <code>AWS</code> command line interface can be found (<a href="https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html/">here</a>).</p>
</section>
<section id="scripts" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Scripts</h1>
<p>Nine parameters (besides the <code>IAM ID</code>) are required to be set for automated instance (server) generation via the <code>aws</code> API. The first eight are likely to be static and we suggest you “hardcode” them as environment variables in your shell configuration file.</p>
<p>An example follows (with <code>z-shell</code> syntax):</p>
<p>Parameters 1) and 2) <code>vpc_id</code> and <code>subnet_id</code> refer to TBD. The default <code>vpc_id</code> is assigned by AWS and can be found on the EC2 dashboard. The default <code>VPC</code> will have two subnets. Select one from the EC2 dashboard in which to launch the instance (<code>subnet_id</code>).</p>
<p>Add the following lines to your <code>.zshrc</code> file:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>       export <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">vpc_id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vpc-14814b73"</span></span>
<span id="cb2-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>       export <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">subnet_id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"subnet-f02c90ab"</span></span></code></pre></div>
<p>Parameters 3), 4) and 5) <code>ami_id</code>, <code>storage_size</code> and <code>instance_type</code> define the operating system and the capabilities of the server.</p>
<p>Add the following three lines to your <code>.zshrc</code> file:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ami_id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ami-014d05e6b24240371"</span></span>
<span id="cb3-2">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">instance_type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t2.micro"</span></span>
<span id="cb3-3">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">storage_size</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"30"</span></span></code></pre></div>
<p>Parameters 6) and 7) <code>key_name</code> and <code>security_grp</code> identify the ssh key-pair and the firewall:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">key_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"power1_app"</span></span>
<span id="cb4-2">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">security_grp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sg-0fef542d93849669c"</span></span></code></pre></div>
<p>Parameter 8) is the <code>static_ip</code> that identifies the server on the web:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">static_ip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"13.57.139.31"</span></span></code></pre></div>
<p>A ninth parameter <code>proj_name</code> can also be hardcoded or supplied at the time the script is called.</p>
<p>Below we offer four bash scripts.</p>
<ol type="1">
<li><p>The first creates a key pair to allow encrypted ssh communication between the server and your workstation.</p></li>
<li><p>The second generates a security group for the virtual server, i.e.&nbsp;a firewall.</p></li>
<li><p>The third script generates the virtual server taking physical server location, instance characteristics, firewall, static IP and project name as parameters.</p></li>
<li><p>The fourth script installs required software following server launch.</p></li>
</ol>
<section id="create-security-group-script" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="create-security-group-script"><span class="header-section-number">2.1</span> Create security group script</h2>
<p>Generate security group: `</p>
<p>Example:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> aws_create_security_group.sh <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-s</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$proj_name</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-g</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-k</span></span></code></pre></div>
<p>This version of the script creates a security group with options to open ports: 22, 80, 3838, 443, 9000, and 9001 with flags -g, -i, -j, -k, -l, -m respectively.</p>
<p>The default, i.e.&nbsp;no flags set, is to open 22 and 443 only. the security group name is set as the base directory name.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb7-1"></span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/usr/bin/env bash</span></span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Help()</span></span>
<span id="cb7-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb7-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span>  The script generates a new security group</span>
<span id="cb7-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span>  the group name is given with the <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> flag.</span>
<span id="cb7-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span>  ports are specificed with the <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> flag. Any number of ports can be listed</span>
<span id="cb7-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span>  Anticipated incoming ports are 22 ssh, 80 http, 3838 shiny and 443 https.</span>
<span id="cb7-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span>  Script will fail if group name is already in use on EC2.</span>
<span id="cb7-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span>  reads vpc_id from the environment variables set in .zshrc</span>
<span id="cb7-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span>  example usage for ports 22, 80 and 443:</span>
<span id="cb7-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span>  aws_create_security_group.sh <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> power1_app  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> 22 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> 80 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> 443</span>
<span id="cb7-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb7-14"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sg_grp_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">basename</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PWD</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb7-15"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">getopts</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":hp:n:"</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">opt</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb7-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">case</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$opt</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span></span>
<span id="cb7-17">        <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">p</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ports</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$OPTARG</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use the split+glob operator</span></span>
<span id="cb7-18">        <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">n</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sg_grp_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$OPTARG</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;;</span></span>
<span id="cb7-19">        <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">h</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Help</span></span>
<span id="cb7-20">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;;</span></span>
<span id="cb7-21">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'error in command line parsing. Expect options n and p'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&amp;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb7-22">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1</span>
<span id="cb7-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">esac</span></span>
<span id="cb7-24"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb7-25"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sg group name = </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$sg_grp_name</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb7-26"></span>
<span id="cb7-27"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">aws</span> ec2 create-security-group <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-28">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--group-name</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$sg_grp_name</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-29">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--description</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"security group"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-30">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--tag-specifications</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-31">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ResourceType=security-group,Tags=[{Key=Name,Value=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$sg_grp_name</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}]"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-32">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--vpc-id</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$vpc_id</span>  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> temp.txt</span>
<span id="cb7-33"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">wait</span></span>
<span id="cb7-34"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">security_grp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jq</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> .GroupId temp.txt<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb7-35"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">wait</span></span>
<span id="cb7-36"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"security group ID = </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$security_grp</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb7-37"></span>
<span id="cb7-38"> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${ports</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[@]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb7-39"> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb7-40">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">aws</span> ec2 authorize-security-group-ingress <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-41">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--group-id</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$security_grp</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-42">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--protocol</span> tcp <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-43">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--port</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${i}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-44">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cidr</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.0.0.0/0"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /dev/null</span>
<span id="cb7-45"> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</section>
<section id="create-new-key-pair-with-a-project-name-flag" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="create-new-key-pair-with-a-project-name-flag"><span class="header-section-number">2.2</span> Create new key pair with a project name flag</h2>
<p>Example usage: Note run with one parameter for optional keypair name.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> aws_create_keypair.sh <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-k</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$keypair_name</span></span></code></pre></div>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb9-1"></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/usr/bin/env bash</span></span>
<span id="cb9-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Help()</span></span>
<span id="cb9-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb9-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span>  The script generates a new keypair</span>
<span id="cb9-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span>  the keypair name is given with the <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-k</span> flag.</span>
<span id="cb9-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span>  Script will fail if pair name is already in use on EC2.</span>
<span id="cb9-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span>  aws_create_keypair.sh <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-k</span> power1_app</span>
<span id="cb9-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb9-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">getopts</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hk:'</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">flag</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb9-11">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">case</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${flag}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span></span>
<span id="cb9-12">    <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">h</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Help</span></span>
<span id="cb9-13">      <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;;</span></span>
<span id="cb9-14">    <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">k</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">key_pair_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${OPTARG}</span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;;</span></span>
<span id="cb9-15">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">esac</span></span>
<span id="cb9-16"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb9-17"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">base</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">basename</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PWD</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb9-18"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-z</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$key_pair_name</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb9-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb9-20">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">key_pair_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$base</span></span>
<span id="cb9-21"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb9-22"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"key_pair_name is </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$key_pair_name</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb9-23"></span>
<span id="cb9-24"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ~/.ssh</span>
<span id="cb9-25"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span>  ~/.ssh/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$key_pair_name</span>.pem</span>
<span id="cb9-26"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">aws</span> ec2 create-key-pair  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--key-name</span>  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$key_pair_name</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-27">   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--query</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'KeyMaterial'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--output</span> text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ~/.ssh/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$key_pair_name</span>.pem</span>
<span id="cb9-28"></span>
<span id="cb9-29"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">wait</span></span>
<span id="cb9-30"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chmod</span> 400 ~/.ssh/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$key_pair_name</span>.pem</span></code></pre></div>
</section>
<section id="generate-instance" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="generate-instance"><span class="header-section-number">2.3</span> Generate instance</h2>
<p>start up script. <code>&gt; aws_create_instance.sh -p power1_app</code></p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb10-1"></span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/usr/bin/env bash</span></span>
<span id="cb10-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Help()</span></span>
<span id="cb10-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb10-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Notes on currect parameters:"</span></span>
<span id="cb10-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"security group should be in place already. check on EC2.  If not,</span></span>
<span id="cb10-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">run ./awscli_create_security.sh.  "</span></span>
<span id="cb10-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Key pair should be in place. check on EC2 and in ~/.ssh.</span></span>
<span id="cb10-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">If not run ./create_keypair.sh. "</span></span>
<span id="cb10-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ami id is for ubuntu linux 22.04 LTS.</span></span>
<span id="cb10-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">If not what is desired check EC2 list of instances."</span></span>
<span id="cb10-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Check static IP: nslookup IPaddress.</span></span>
<span id="cb10-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Should point to the domain name e.g.  rgtlab.org "</span></span>
<span id="cb10-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span>  Usage: <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>aws_create_instance.sh <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> power1_app</span>
<span id="cb10-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb10-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Review parameters: "</span></span>
<span id="cb10-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"---"</span></span>
<span id="cb10-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"proj_name is </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$proj_name</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb10-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"keypair_name is </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$keypair_name</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb10-21"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vpc_id: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$vpc_id</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span></span>
<span id="cb10-22"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"subnet_id: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$subnet_id</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span></span>
<span id="cb10-23"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ami_id: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$ami_id</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span></span>
<span id="cb10-24"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"security_grp: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$security_grp</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span></span>
<span id="cb10-25"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"static_ip: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$static_ip</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span></span>
<span id="cb10-26"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"type: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$type</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span></span>
<span id="cb10-27"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"size: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$size</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span></span>
<span id="cb10-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb10-29"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">getopts</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hp:'</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">flag</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb10-30">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">case</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${flag}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span></span>
<span id="cb10-31">    <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">h</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Help</span></span>
<span id="cb10-32">      <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;;</span></span>
<span id="cb10-33">    <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">p</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">proj_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${OPTARG}</span><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;;</span></span>
<span id="cb10-34">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">esac</span></span>
<span id="cb10-35"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb10-36"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">base</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">basename</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PWD</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb10-37"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-z</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$proj_name</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb10-38"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb10-39">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">proj_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$base</span></span>
<span id="cb10-40"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb10-41"></span>
<span id="cb10-42"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">aws</span> ec2 run-instances <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb10-43">--image-id <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$ami_id</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb10-44">--count 1 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb10-45">--instance-type <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$instance_type</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb10-46">--key-name <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$keypair_name</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb10-47">--security-group-ids <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$security_grp</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb10-48">--subnet-id <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$subnet_id</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb10-49">--block-device-mappings <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[{</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">DeviceName</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/dev/sda1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Ebs</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">:{</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">VolumeSize</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$storage_size</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}}]"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb10-50">--tag-specifications <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ResourceType=instance,Tags=[{Key=Name,Value=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$proj_name</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">}]"</span>  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb10-51">--user-data file://~/Dropbox/prj/c060/aws_startup_code.sh</span>
<span id="cb10-52"> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">iid0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">aws</span> ec2 describe-instances <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--filters</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Name=tag:Name,Values=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$proj_name</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb10-53">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jq</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.Reservations[].Instances[].InstanceId'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span></span>
<span id="cb10-54"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$iid0</span></span>
<span id="cb10-55"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"enter instance id:"</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">iid</span></span>
<span id="cb10-56"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"instance id: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$iid</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb10-57"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">aws</span> ec2 associate-address <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--public-ip</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$static_ip</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--instance-id</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$iid</span></span></code></pre></div>
<p><code>aws_startup.sh</code></p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb11-1"></span>
<span id="cb11-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb11-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt</span> update</span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add Docker and Docker Compose support to the Ubuntu's packages list</span></span>
<span id="cb11-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> install curl <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span>
<span id="cb11-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> install gnupg <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span>
<span id="cb11-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> install ca-certificates <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span>
<span id="cb11-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> install lsb-release <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span>
<span id="cb11-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> 0755 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span> /etc/apt/keyrings</span>
<span id="cb11-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fsSL</span> https://download.docker.com/linux/ubuntu/gpg <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb11-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> gpg <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--dearmor</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> /etc/apt/keyrings/docker.gpg</span>
<span id="cb11-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> chmod a+r /etc/apt/keyrings/docker.gpg</span>
<span id="cb11-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"deb [arch="</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dpkg</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--print-architecture</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb11-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb11-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span> /etc/os-release <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$VERSION_CODENAME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" stable"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb11-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> tee /etc/apt/sources.list.d/docker.list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /dev/null</span>
<span id="cb11-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> update</span>
<span id="cb11-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> install docker-ce docker-ce-cli containerd.io docker-compose-plugin <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span>
<span id="cb11-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">su</span> ubuntu <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb11-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">usermod</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-aG</span> docker ubuntu</span></code></pre></div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip 1.
</div>
</div>
<div class="callout-body-container callout-body">
<p>For convenience, construct a <code>config</code> file in <code>~/.ssh</code> as:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Host</span> rgtlab.org</span>
<span id="cb12-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">HostName</span> 13.57.139.31 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># static IP</span></span>
<span id="cb12-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">User</span> ubuntu <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># default user on ubuntu server</span></span>
<span id="cb12-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Port</span> 22  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the default port ssh uses</span></span>
<span id="cb12-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">IdentityFile</span> ~/.ssh/power1_app.pem</span></code></pre></div>
<p>then we can ssh into the new server with</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sh</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ssh rgtlab.org</span></code></pre></div>
</div>
</div>
<p>Change the access permissions: <code>sudo chmod 600 power1ssh.pem</code> to be more restrictive.</p>
</section>
</section>
<section id="appendix-1" class="level1 page-columns page-full" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Appendix 1 Set up AWS IAM</h1>
<p>This appendix provides details on how to initiate batch processing via the <code>AWS CLI</code> desktop application.</p>
<p>From aws web site:</p>

<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/server_setup_aws_cli/img/iam.png" class="img-fluid figure-img"></p>
<figcaption>IAM description</figcaption>
</figure>
</div>
</div></div><p>Log into the <code>AWS</code> console.</p>
<p>Search for <code>IAM service</code>. Navigate to <code>IAM dashboard</code>.</p>
<p>Select User groups. Create a user group based on the Power User profile.</p>
<p>Call it <code>admin</code>. Include <code>ryy_iam</code> in the <code>admin</code> group.</p>
<p>Select <code>Users</code> in left hand panel.</p>
<p>Then select <code>Create User</code> button (in upper right).</p>
<p>Then enter a <code>User name</code> in the form, say zenn. Click <code>Next</code> (lower right)</p>
<p>Then <code>Create User</code>.</p>
<p>Click on the user name</p>
<p>In the page that comes up. Select <code>Security Credentials</code> tab (center of page).</p>
<p>Under <code>Access Keys</code> panel click <code>Create access key</code> (left side or bottom of panel).</p>
<p>Click <code>Command Line Interface CLI</code></p>
<p>and at the bottom of the page click the checkbox “I understand…”.</p>
<p>Finally select <code>Create access key</code> and</p>
<p>choose <code>Download .csv file</code> (lower right).</p>
<p>Navigate Download screen to local <code>~/.aws</code> directory.(may need shift-cmd-. on mac)</p>
<p>Click <code>Done</code></p>
<p>Now in the terminal on your workstation, configure the aws cli app via the command.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>“AWS Identity and Access Management (IAM) is a web service that helps you securely control access to AWS resources.”</p>
</div></div><div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> aws <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">configure</span></span></code></pre></div>
<p>Using cut and paste enter info from the credentials file just downloaded. After entering the <code>AWS Access Key ID</code> and <code>AWS Secret Access Key</code> information you will be asked for a <code>Region</code>, (our region is <code>us-west-1</code>), and an output format (suggested output format is <code>JSON</code>).</p>
</section>
<section id="appendix.-sample-work-session" class="level1 page-columns page-full" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Appendix. Sample work session</h1>
<p>Start from scratch. Assume the following:</p>
<ol type="1">
<li><code>aws cli</code> is configured.</li>
<li>no security group has been defined</li>
<li>no key pair has been generated</li>
<li><code>vpc ID</code> and <code>subnet ID</code> are known and stored as environment variables.</li>
</ol>

<div class="no-row-height column-margin column-container"><div class="">
<p>Tip – In the <code>AWS</code> Console, in the navigation pane, select <code>your VPCs</code>. The <code>VPC</code> page lists the <code>vpc_id</code> and the subnets <code>subnet_id</code>.</p>
</div></div><ol start="5" type="1">
<li>project name is <code>power1_app</code></li>
</ol>
<p>In the following we’ll spin up a ubuntu server (AMI) with type <code>t2-micro</code> (1 vCPU and 1gb memory) and 30 GB (size) hard drive.</p>
<p>step 1. Generate a security group named <code>power1_app</code>, and get the <code>security_grp</code> from the script output and store it as an environment variable.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> aws_create_security_group.sh <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-n</span> power1_app <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> 22 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> 80 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> 443</span></code></pre></div>
<p>step 2. add key pair with name <code>power1_app</code></p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">aws_create_keypair.sh</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-k</span> power1_app</span></code></pre></div>
<p>step 3. get a new elastic IP address and add it to z-shell configuration file. and modify ssh config file to add the IP address and the ssh private key name. if new IP is: 204.236.167.50</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sed</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.bak'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/static/d'</span> ~/.config/zsh/.zsh_export</span>
<span id="cb17-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sed</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.bak'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/security/d'</span> ~/.config/zsh/.zsh_export</span>
<span id="cb17-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"export static_ip='204.236.167.50'"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> ~/.config/zsh/.zsh_export</span>
<span id="cb17-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"export security_grp='sg-0fda72c2879d6b2ad'"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> ~/.config/zsh/.zsh_export</span></code></pre></div>
<p>Generate instance:</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb18-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">aws_create_instance.sh</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> power1_app</span></code></pre></div>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb19-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ~/.ssh</span>
<span id="cb19-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sed</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.bak'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/HostName/d'</span> config</span>
<span id="cb19-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"export HostName='204.236.167.50'"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> config</span></code></pre></div>
</section>
<section id="appendix.-undo" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Appendix. Undo</h1>
<ul>
<li><p>To remove the AWS instance and Gitlab elements of a project do the following:</p></li>
<li><p>log into AWS/EC2 console</p></li>
<li><p>Terminate instance (<code>Instance state</code> menu)</p></li>
<li><p>delete security group (<code>Network &amp; Security</code> tab, <code>Actions</code> menu)</p></li>
<li><p>release IP address (<code>Network &amp; Security</code> tab, <code>Actions</code> menu)</p></li>
<li><p>delete SSH key pair (<code>Network &amp; Security</code> tab, <code>Actions</code> menu)</p></li>
<li><p>Log into Gitlab (<code>gitlab.com</code>)</p></li>
<li><p>Delete project(s) (project/settings/General/advanced)</p></li>
</ul>
<section id="prerequisites" class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">5.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">5.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="5.3">
<h2 data-number="5.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">5.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="5.4">
<h2 data-number="5.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">5.4</span> Further Reading</h2>
<p>In development</p>


<!-- -->

</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Using the {AWS} Command Line Interface to Launch an {EC2}
    Server},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/server_setup_aws_cli/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Using the AWS Command Line
Interface to Launch an EC2 Server.”</span> May 13, 2025. <a href="https://focusonr.org/posts/server_setup_aws_cli/">https://focusonr.org/posts/server_setup_aws_cli/</a>.
</div></div></section></div> ]]></description>
  <category>AWS</category>
  <guid>https://focusonr.org/posts/server_setup_aws_cli/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/server_setup_aws_cli/img/aws.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Set up a virtual server on AWS EC2 Console (in anticipation of hosting Shiny apps)</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/server_setup_aws_console/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://focusonr.org/posts/server_setup_aws_console/img/crane.jpg" class="img-fluid" alt="under construction"> <font size="1"> Photo by <a href="https://unsplash.com/@nathangwaters?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Nathan Waters</a> on <a href="https://unsplash.com/s/photos/construction?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a> </font></p>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Motivation for this post:
</div>
</div>
<div class="callout-body-container callout-body">
<p>Ok! I’ve got my Shiny app running just the way I want it. Works great! Now, how do I get it up on the web and shared with my collaborators?</p>
</div>
</div>
<p>Assuming we have a working shiny app, named for example <code>power1_app</code>, we next need to address the task of how to host the app on the web. To answer this challenge we’ll break the problem into two parts:</p>
<ol type="1">
<li>Create and launch a virtual server. and</li>
<li>Configure the server to provide secure access to our Shiny app.</li>
</ol>
<p>Below we recommend a solution we’ve found to be effective and straightforward. We’ll describe how to ‘spin up’ a server on Amazon Web Services using the EC2 (Elastic Compute Cloud) console. In a separate post <a href="https://focusonR.org/https://focusonr.org/blog/dockerize_simple/">here</a> we’ll show how, through the application of Docker, R, Shiny, and Caddy (webserver) functionality we can have a fully functional and secure app available on the web with minimal effort.</p>
</section>
<section id="hosting" class="level1 page-columns page-full" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Hosting</h1>
<p>No matter what method we use to host a shiny app online we’ll need to complete the following pre- and post-launch sets of tasks one way or another:</p>
<p>Pre-launch tasks:</p>
<ol type="1">
<li>obtain a static IP address, e.g.&nbsp;<code>111.222.333.444</code></li>
<li>obtain a domain name, e.g.&nbsp;<code>rgtlab.org</code>.</li>
<li>define a security model, aka a firewall, for the server</li>
<li>create a public and private RSA keypair.</li>
<li>configure a virtual server. Configuration entails selecting the operating system, the number of CPUs, the amount of memory, and the operating system.</li>
<li>generate the virtual server, along with a keypair and security group.</li>
<li>associate the domain name with the static IP address.</li>
<li>associate the IP with the server</li>
</ol>
<p>Post-launch tasks:</p>
<ol type="1">
<li>install and configure a webserver</li>
<li>obtain and install an SSL certificate (to allow encrypted Web communication)</li>
<li>setup an authentication method (password protection for app access)</li>
<li>configure a reverse proxy i.e.&nbsp;a method to translate https (port 443) requests to Shiny (port 3838).</li>
</ol>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Not to worry:
</div>
</div>
<div class="callout-body-container callout-body">
<p>At first glance these requirements may appear daunting, but on closer inspection each can be met with relative ease through the use of the right tools.</p>
</div>
</div>
<div class="callout callout-style-simple callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Actually …
</div>
</div>
<div class="callout-body-container callout-body">
<p>Technically, if the goal is simply to get the app up on the Web and security is not an issue, its not required to have a static IP, or a domain name, or even a reverse proxy. but if these elements of the process are skipped the server will only be able to communicate via the unencrypted HTTP protocol and the site URL will be something like <code>111.222.333.444:3838/power1_shiny</code>, and anyone with the URL will be able to reach the site. Also the IP address will change every time the server is rebooted.</p>
</div>
</div>
<section id="select-a-hosting-service" class="level2 page-columns page-full" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="select-a-hosting-service"><span class="header-section-number">2.1</span> Select a hosting service</h2>
<p>There are a number of cloud based server hosting options to choose from: for example Microsoft Azure, Oracle, Google Cloud, Amazon AWS EC2, Digital Ocean or Hetzner to name a few. Each has their own approach to setting up a custom virtual server. Several have free or low-cost service tiers available.</p>
<p>In this post we’ll provide a step-by-step description of a process using Amazon Web Services Elastic Compute Cloud (AWS EC2) infrastructure.</p>
<p>AWS is, in our view, a reasonable choice for setting up a small custom server. Its not the cheapest option, but the system is well documented and, in our experience, reliable.</p>
<p>The first step is to get set up with AWS. To start, open the EC2 console by visiting the URL:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">https://aws.amazon.com/console</span></span></code></pre></div>
<p>(see margin figure)</p>
<p>In the console window choose regional service. For us its “N. California”.</p>

<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/server_setup_aws_console/img/aws_dash.png" class="img-fluid figure-img"></p>
<figcaption>AWS console</figcaption>
</figure>
</div>
</div></div><p>Next create an account, or sign in. Once you’re logged in navigate to the EC2 dashboard. Its through this dashboard (aka console) that we’ll define the parameters for the type of server to launch and the mechanisms for communicating with it. We’ll refer to these as “Pre-Launch” tasks.</p>
</section>
</section>
<section id="aws-working-environment" class="level1 page-columns page-full" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> AWS Working Environment</h1>
<section id="overview" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="overview"><span class="header-section-number">3.1</span> Overview</h2>
<p>Along with selecting a server we need to set up a working environment. We recommend setting up the working environment before launching the server, as it saves some back and forth with the console, but doing so is not required. The working environment consists of four main components:</p>
<ol type="1">
<li><p>A security credential (RSA key-pair) to allow remote and secure login to the virtual server once its launched.</p></li>
<li><p>A firewall, or security model, which restricts incoming server access. The purpose of the firewall is to close ofe all incoming packet traffic except through those ports specifically named.</p></li>
<li><p>A static IP address, say 111.222.333.444. A static IP is required for maintaining the link between the domain name and the server when rebooting. (The default is for the instance/server to be assigned a new IP address each time its rebooted).</p></li>
<li><p>A domain name, say <code>rgtlab.org</code>. A domain name is not required but will facilitate collaborator access by not requiring the use of the IP address directly.</p></li>
</ol>
<p>These working environment components are not directly tied to any specific server. In fact, you can define multiple instances of each component. The only requirement is that you pick one of each to associate with each server.</p>
</section>
<section id="work-environment-details." class="level2 page-columns page-full" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="work-environment-details."><span class="header-section-number">3.2</span> Work Environment Details.</h2>
<section id="ssh-key-pair" class="level3" data-number="3.2.1">
<h3 data-number="3.2.1" class="anchored" data-anchor-id="ssh-key-pair"><span class="header-section-number">3.2.1</span> <strong>Ssh key pair</strong></h3>
<p>In order to securely communicate with the server we need to exchange an <code>RSA</code> key pair with <code>AWS.</code> The pair consists of a <strong>private</strong> key and a <strong>public</strong> key. We can define a key pair in one of two ways in EC2. Either, generate the pair locally, on our workstation and upload the public key to EC2, or have EC2 generate the key pair and download the private key. The EC2 based generation process will place the public key in the <code>~/.ssh/authorized_keys</code> file on the server.</p>
<p>For the first option (local generation) we create a directory on our workstation to hold the keys and navigate to it, e.g.&nbsp;<code>~/.ssh</code>. In the <code>~/.ssh</code> directory generate the keys with the command</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ssh-keygen <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-m</span> PEM</span></code></pre></div>
<p><code>PEM</code> defines the key format. More information on public key authentication can be found <a href="https://www.ssh.com/academy/ssh/public-key-authentication">(here)</a>. Also detailed instructions are available on AWS <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html">(here)</a></p>
<p>In the interactive dialog that follows name the key prefix something like <code>power1_app.pem</code>. The dialog will ask for a passphrase. You can enter a phrase for an additional level of security, but its not required. The <code>ssh-keygen</code> program will generate two files: <code>power1_app.pem</code> and <code>power1_app.pem.pub</code></p>
<p>To complete the process return to the <code>EC2 dashboard</code> and select <code>Network &amp; Security/Keypair/Actions</code> and then <code>Import key pair</code> in the left panel. Enter the name <code>power1_app</code> and select the <code>Browse</code> button. Navigate to the <code>~/.ssh/power1_app.pem.pub</code> file and and select the <code>Import key pair</code> button at the bottom of the page.</p>
<p>For the second approach (<code>EC2</code> generated) select <code>Create key pair</code> button in the upper right of the console page. A form will appears and ask for a name. Enter something like <code>power1_app</code>. Select <code>RSA</code> for key pair type and <code>.pem</code> for key file format. The keys will be created and the private key <code>power1_app.pem</code> will be offered for download to the local machine. We suggest placing it in the <code>~/.ssh</code> directory. Lastly, change the permissions for the private key, so only you can access with the following command:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> sudo <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chmod</span> 400 power1_app.pem</span></code></pre></div>
</section>
<section id="firewall" class="level3" data-number="3.2.2">
<h3 data-number="3.2.2" class="anchored" data-anchor-id="firewall"><span class="header-section-number">3.2.2</span> <strong>Firewall</strong></h3>
<p>To create a firewall, click on <code>Security groups</code> under <strong>Network &amp; Security</strong> settings in the left hand panel. Choose <strong>Create security group</strong>, and name the security group something like <code>power1_app</code>.<br>
Under <code>Inbound Rules</code> select SSH and HTTPS from the <code>Type</code> dropdown menu. Select <code>Anywhere IPv4 0.0.0.0/0</code> for both (??).</p>
<p>This will create a firewall that leaves open only ports 22 and 443, for <code>ssh</code> and <code>https</code> incoming traffic, respectively.</p>
</section>
<section id="static-ip-address" class="level3" data-number="3.2.3">
<h3 data-number="3.2.3" class="anchored" data-anchor-id="static-ip-address"><span class="header-section-number">3.2.3</span> <strong>Static IP address</strong></h3>
<p>You can use the <code>EC2 elastic IP</code> service to get a static IP. Navigate to <strong>Network and Security</strong> again and select <strong>Allocate Elastic IP</strong>. An IP will be assigned from the EC2 pool of available IPv4 IP addresses e.g.&nbsp;13.57.139.31.</p>
</section>
<section id="domain-name" class="level3 page-columns page-full" data-number="3.2.4">
<h3 data-number="3.2.4" class="anchored" data-anchor-id="domain-name"><span class="header-section-number">3.2.4</span> <strong>Domain Name</strong></h3>
<p>To obtain a dedicated domain name, leave the <code>EC2 dashboard</code> and go to Amazon route 53 dashboard to select a domain name and associate it with our static IP (select <code>Service</code> at the top of the dashboard and search for <code>Route 53</code>).</p>
<p>Once a domain name is acquired, e.g.&nbsp;<code>rgtlab.org</code>, you can associate it with any IP address, static or dynamic. This can be done via the <code>Route 53</code> service. For example, to associate domain name <code>rgtlab.org</code> with the elastic IP 111.2222.333.444 do the following in Route 53:</p>
<ul>
<li>click on <code>hosted zones</code> in the side panel</li>
<li>click on <code>rgtlab.org</code> in center panel</li>
<li>click on checkbox for <code>rgtlab.org</code> type=A line</li>
<li>then click on edit record in right panel</li>
<li>change IP address to the assigned static 111.222.333.444 in “value”.</li>
</ul>

<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://focusonr.org/posts/server_setup_aws_console/img/ec2a.png" class="img-fluid"></p>
</div></div></section>
</section>
</section>
<section id="select-and-launch-instance" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Select and launch instance</h1>
<ol start="2" type="1">
<li><p>From <code>Instances</code> in the EC2 dashboard, click <code>Launch Instances</code> Name the server, say <code>power1_app</code> and select an operating system for the server. We recommend the <code>Ubuntu</code> OS. Ubuntu is a mature Linux distribution based on Debain Linux. Click the <code>Ubuntu</code> button. (see margin figure)</p></li>
<li><p>Next choose an instance <strong>type</strong>, e.g.&nbsp;<code>t2-micro</code>. Different instance types are combinations of number and architecture of processors, memory, storage capacity, and network performance. The <code>t2-micro</code> type, for example, has 1 cpu and 1 GiB of memory.</p></li>
<li><p>choose a Key pair e.g.&nbsp;select <code>power1_app</code> the drop down list.</p></li>
<li><p>Select a Security Group, e.g.&nbsp;use <code>power1_app</code> from your environment.</p></li>
<li><p>choose a storage amount. e.g.&nbsp;enter 30 GB of <code>EBS General Purpose SSD GP2</code> . Thirty GBs is the maximum allowed in the ‘Free tier’ of servers on AWS. In our experience smaller disk sizes can lead to problems.</p></li>
<li><p>Under <code>advanced options</code> scroll to the bottom and browse to ??? if you have setup code you want to run one time after server generation. see an example in attendix 2 below.</p></li>
<li><p>click <strong>Launch Instance</strong> to launch the server.</p></li>
</ol>
<p>After the instance launches open the Elastic IP dialog under <code>Network Security</code> and the <code>Actions</code> button and associate the IP address with the new instance.</p>
<section id="access-server" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="access-server"><span class="header-section-number">4.1</span> Access server</h2>
<p>On your laptop log into server with</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ssh</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"~/.ssh/power1_app"</span> ubuntu@rgtlab.org</span></code></pre></div>
</section>
</section>
<section id="appendix-1-tip-1" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Appendix 1: Tip 1</h1>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip 1.
</div>
</div>
<div class="callout-body-container callout-body">
<p>For convenience, construct a <code>config</code> file in <code>~/.ssh</code> as:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Host</span> rgtlab.org <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#domain name</span></span>
<span id="cb5-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">HostName</span> 13.57.139.31 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># static IP</span></span>
<span id="cb5-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">User</span> ubuntu <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># default user on ubuntu server</span></span>
<span id="cb5-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Port</span> 22  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the default port ssh uses</span></span>
<span id="cb5-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">IdentityFile</span> ~/.ssh/power1_app.pem <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># private key</span></span></code></pre></div>
<p>then we can ssh into the new server with the appreviated command</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sh</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ssh rgtlab.org</span></code></pre></div>
</div>
</div>
</section>
<section id="appendix-2-aws_startup_code.sh" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Appendix 2: <code>aws_startup_code.sh</code></h1>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb7-1"></span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb7-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt</span> update</span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add Docker and Docker Compose support to the Ubuntu's packages list</span></span>
<span id="cb7-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> install curl <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span>
<span id="cb7-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> install gnupg <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span>
<span id="cb7-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> install ca-certificates <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span>
<span id="cb7-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> install lsb-release <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span>
<span id="cb7-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> 0755 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span> /etc/apt/keyrings</span>
<span id="cb7-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fsSL</span> https://download.docker.com/linux/ubuntu/gpg <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> gpg <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--dearmor</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> /etc/apt/keyrings/docker.gpg</span>
<span id="cb7-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> chmod a+r /etc/apt/keyrings/docker.gpg</span>
<span id="cb7-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"deb [arch="</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dpkg</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--print-architecture</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span> /etc/os-release <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$VERSION_CODENAME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" stable"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> tee /etc/apt/sources.list.d/docker.list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /dev/null</span>
<span id="cb7-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> update</span>
<span id="cb7-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> install docker-ce docker-ce-cli containerd.io docker-compose-plugin <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span>
<span id="cb7-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">su</span> ubuntu <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> </span>
<span id="cb7-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">usermod</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-aG</span> docker ubuntu</span></code></pre></div>
<section id="prerequisites" class="level2" data-number="6.1">
<h2 data-number="6.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">6.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="6.2">
<h2 data-number="6.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">6.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="6.3">
<h2 data-number="6.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">6.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="6.4">
<h2 data-number="6.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">6.4</span> Further Reading</h2>
<p>In development</p>


<!-- -->

</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {{Set} up a Virtual Server on {AWS} {EC2} {Console} (in
    Anticipation of Hosting {Shiny} Apps)},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/server_setup_aws_console/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025.<span>“Set up a Virtual Server on AWS
EC2 Console (in Anticipation of Hosting Shiny Apps) .”</span> May 13,
2025. <a href="https://focusonr.org/posts/server_setup_aws_console/">https://focusonr.org/posts/server_setup_aws_console/</a>.
</div></div></section></div> ]]></description>
  <category>AWS</category>
  <guid>https://focusonr.org/posts/server_setup_aws_console/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/server_setup_aws_console/img/rshiny.png" medium="image" type="image/png" height="58" width="144"/>
</item>
<item>
  <title>Configure the tiling window manager yabai for macos</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/setup_yabai/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/setup_yabai/img/yabai.svg" class="img-fluid figure-img" style="width:2in"></p>
<figcaption>quarto</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Yabai is a tiling window manager for macOS.</p>
<p>What is a tiling window manager? According to Wikipedia, “In computing, a tiling window manager is a window manager with an organization of the screen into mutually non-overlapping frames, as opposed to the more common approach (used by stacking window managers) of coordinate-based stacking of overlapping objects (windows) that tries to fully emulate the desktop metaphor”</p>
<p>Specifically, yabai is a tiling window manager for macOS. The user interface allows close control of windows, spaces, and displays. It automatically modifies the window layout throughout yur workspace using a binary space partitioning algorithm.</p>
<p>The github page for yabai is <a href="https://github.com/koekeishiya/yabai">here</a>.</p>
<p>Check out blog : <a href="https://www.steven-braun.com/blog/2022/i3wm-to-yabai/">Tiling macOS: Moving from i3wm to Yabai | Steven Braun</a></p>
</section>
<section id="installation" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Installation</h1>
<p>Yabai can be install using homebrew. The following commands will install yabai and start the service.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">brew</span> install koekeishiya/formulae/yabai</span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># start or restart yabai</span></span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--start-service</span></span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--restart-service</span></span></code></pre></div>
<p>Keyboard shortcuts can be defined with ↗ skhd or any other suitable software you may prefer. ## .yabairc</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/usr/bin/env bash</span></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--load-sa</span></span>
<span id="cb2-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> signal <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--add</span> event=dock_did_restart action=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sudo yabai --load-sa"</span></span>
<span id="cb2-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-x</span></span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ====== Variables =============================</span></span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">declare</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-A</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">gaps</span></span>
<span id="cb2-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">declare</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-A</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">color</span></span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">gaps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12"</span></span>
<span id="cb2-13"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">gaps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12"</span></span>
<span id="cb2-14"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">gaps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12"</span></span>
<span id="cb2-15"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">gaps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12"</span></span>
<span id="cb2-16"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">gaps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"inner"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12"</span></span>
<span id="cb2-17"></span>
<span id="cb2-18"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"focused"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0xE0808080"</span></span>
<span id="cb2-19"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normal"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0x00010101"</span></span>
<span id="cb2-20"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"preselect"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0xE02d74da"</span></span>
<span id="cb2-21"></span>
<span id="cb2-22"></span>
<span id="cb2-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===== Loading Scripting Additions ============</span></span>
<span id="cb2-24"></span>
<span id="cb2-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># See: https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)#macos-big-sur---automatically-load-scripting-addition-on-startup</span></span>
<span id="cb2-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sudo yabai --load-sa</span></span>
<span id="cb2-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"</span></span>
<span id="cb2-28"></span>
<span id="cb2-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===== Tiling setting =========================</span></span>
<span id="cb2-30"></span>
<span id="cb2-31"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config layout                      bsp</span>
<span id="cb2-32"></span>
<span id="cb2-33"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config top_padding                 <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${gaps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-34"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config bottom_padding              <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${gaps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-35"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config left_padding                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${gaps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-36"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config right_padding               <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${gaps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-37"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config window_gap                  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${gaps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"inner"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-38"></span>
<span id="cb2-39"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config mouse_follows_focus         on</span>
<span id="cb2-40"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config focus_follows_mouse         on</span>
<span id="cb2-41"></span>
<span id="cb2-42"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config window_topmost              off</span>
<span id="cb2-43"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config window_opacity              off</span>
<span id="cb2-44"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config window_shadow               float</span>
<span id="cb2-45"></span>
<span id="cb2-46"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config window_border               on</span>
<span id="cb2-47"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config window_border_width         2</span>
<span id="cb2-48"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config active_window_border_color  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"focused"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-49"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config normal_window_border_color  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normal"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-50"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config insert_feedback_color       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"preselect"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-51"></span>
<span id="cb2-52"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config active_window_opacity       1.0</span>
<span id="cb2-53"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config normal_window_opacity       0.90</span>
<span id="cb2-54"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config split_ratio                 0.50</span>
<span id="cb2-55"></span>
<span id="cb2-56"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config auto_balance                on</span>
<span id="cb2-57"></span>
<span id="cb2-58"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config mouse_modifier              fn</span>
<span id="cb2-59"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config mouse_action1               move</span>
<span id="cb2-60"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config mouse_action2               resize</span>
<span id="cb2-61"></span>
<span id="cb2-62"></span>
<span id="cb2-63"></span>
<span id="cb2-64"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span> +x</span>
<span id="cb2-65"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">printf</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yabai: configuration loaded...</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">n"</span></span></code></pre></div>
</section>
<section id="skhd" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> skhd</h1>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># experimental </span></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # move window to display left and right</span></span>
<span id="cb3-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> s : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--display</span> west<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> display <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> west<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span></span>
<span id="cb3-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> g : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--display</span> east<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> display <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> east<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># opens iTerm2</span></span>
<span id="cb3-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">alt</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> return : <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${HOME}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>/bin/open_iterm.sh</span>
<span id="cb3-8"></span>
<span id="cb3-9"></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Navigation</span></span>
<span id="cb3-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">alt</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> h : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> west</span>
<span id="cb3-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">alt</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> j : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> south</span>
<span id="cb3-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">alt</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> k : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> north</span>
<span id="cb3-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">alt</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> l : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> east</span>
<span id="cb3-15"></span>
<span id="cb3-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Moving windows</span></span>
<span id="cb3-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> h : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warp</span> west</span>
<span id="cb3-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> j : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warp</span> south</span>
<span id="cb3-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> k : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warp</span> north</span>
<span id="cb3-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> l : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warp</span> east</span>
<span id="cb3-21"></span>
<span id="cb3-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Move focus container to workspace</span></span>
<span id="cb3-23"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> m : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--space</span> last<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> last</span>
<span id="cb3-24"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> p : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--space</span> prev<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> prev</span>
<span id="cb3-25"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> n : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--space</span> next<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> next</span>
<span id="cb3-26"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> 1 : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--space</span> 1<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> 1</span>
<span id="cb3-27"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> 2 : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--space</span> 2<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> 2</span>
<span id="cb3-28"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> 3 : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--space</span> 3<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> 3</span>
<span id="cb3-29"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> 4 : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--space</span> 4<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> 4</span>
<span id="cb3-30"></span>
<span id="cb3-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Resize windows</span></span>
<span id="cb3-32"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lctrl</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> h : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--resize</span> left:-50:0<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-33">                  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--resize</span> right:-50:0</span>
<span id="cb3-34"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lctrl</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> j : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--resize</span> bottom:0:50<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-35">                  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--resize</span> top:0:50</span>
<span id="cb3-36"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lctrl</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> k : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--resize</span> top:0:-50<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-37">                  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--resize</span> bottom:0:-50</span>
<span id="cb3-38"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lctrl</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> l : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--resize</span> right:50:0<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-39">                  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--resize</span> left:50:0</span>
<span id="cb3-40"></span>
<span id="cb3-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Equalize size of windows</span></span>
<span id="cb3-42"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lctrl</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> e : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--balance</span></span>
<span id="cb3-43"></span>
<span id="cb3-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Enable / Disable gaps in current workspace</span></span>
<span id="cb3-45"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lctrl</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> g : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--toggle</span> padding<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--toggle</span> gap</span>
<span id="cb3-46"></span>
<span id="cb3-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rotate windows clockwise and anticlockwise</span></span>
<span id="cb3-48"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">alt</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> r         : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rotate</span> 270</span>
<span id="cb3-49"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> r : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rotate</span> 90</span>
<span id="cb3-50"></span>
<span id="cb3-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rotate on X and Y Axis</span></span>
<span id="cb3-52"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> x : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--mirror</span> x-axis</span>
<span id="cb3-53"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> y : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--mirror</span> y-axis</span>
<span id="cb3-54"></span>
<span id="cb3-55"></span>
<span id="cb3-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Float / Unfloat window</span></span>
<span id="cb3-57"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> space : <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-58">    yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--toggle</span> float<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-59">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--toggle</span> border</span>
<span id="cb3-60"></span>
<span id="cb3-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Restart Yabai</span></span>
<span id="cb3-62"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + lctrl + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> r : <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-63">    /usr/bin/env osascript <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-64">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"display notification </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Restarting Yabai</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> with title </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Yabai</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-65">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">launchctl</span> kickstart <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-k</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gui/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${UID}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/homebrew.mxcl.yabai"</span></span>
<span id="cb3-66"></span>
<span id="cb3-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make window native fullscreen</span></span>
<span id="cb3-68"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">alt</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> f         : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--toggle</span> zoom-fullscreen</span>
<span id="cb3-69"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> f : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--toggle</span> native-fullscreen</span>
<span id="cb3-70"></span></code></pre></div>
<p>References:</p>
<p><a href="https://github.com/koekeishiya/yabai">GitHub - koekeishiya/yabai: A tiling window manager for macOS based on binary space partitioning</a></p>
<p><a href="https://en.wikipedia.org/wiki/Tiling_window_manager">Tiling window manager - Wikipedia</a></p>
<p><a href="https://bryce-s.com/yabai/">MacOS - Yabai Configuration | Bryce Smith</a></p>
<p><a href="https://evantravers.com/articles/2024/02/15/yabai-tiling-window-management-for-osx/">Configuring Yabai for Focus</a></p>
<p><a href="https://www.youtube.com/watch?v=9SQG5ogWEug">youtube Yabai configuration updates 2024</a></p>
<section id="prerequisites" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">3.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">3.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">3.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="3.4">
<h2 data-number="3.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">3.4</span> Further Reading</h2>
<p>In development</p>


<!-- -->

</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Configure the Tiling Window Manager Yabai for Macos},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/setup_yabai/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Configure the Tiling Window
Manager Yabai for Macos.”</span> May 13, 2025. <a href="https://focusonr.org/posts/setup_yabai/">https://focusonr.org/posts/setup_yabai/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/setup_yabai/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/setup_yabai/img/yabai.svg" medium="image" type="image/svg+xml"/>
</item>
<item>
  <title>Setting up a neovim environment for data science code development</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/setupneovim/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/setupneovim/img/nvimlogo.jpeg" class="img-fluid figure-img"></p>
<figcaption>under construction</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Neovim (a fork of Vim) is a text editor that has several advantages for data science code development. One of its main attractions (besides being open source) is that it has a number of useful plugins to facilitate working on R, python, and julia code. Also, its modal, keyboard-centric system allows text and code manipulation at potentially far greater speed than conventional, mouse-centric, systems.</p>
<p>In this post we describe a minimal, yet functional setup to allow a quick start with neovim. We also describe a more extensive setup utilizing several of the neovim-only plugins that together allow neovim to provide IDE style code editing and REPL interaction for the three primary data science coding tools: R, Python, and Julia.</p>
<p>Our presentation here is for a Macos environment. Appendix one contains required adjustments for a ubuntu linux environment.</p>
<ul>
<li>add reference for nvim speed *</li>
</ul>
</section>
<section id="install-neovim." class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Install neovim.</h1>
<p>With minimal effort we can install both the terminal and GUI versions of neovim. The simplist approach is to use homebrew:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> brew <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install</span> neovim neovim-qt</span></code></pre></div>
<p>Suggest set up convenience aliases in <code>zsh</code>.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> alias <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ng</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nvim-qt"</span></span>
<span id="cb2-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> alias <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">nt</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nvim"</span></span></code></pre></div>
<p>(mnemonic: the <code>t</code> in <code>nt</code> is for terminal, the <code>g</code> in <code>ng</code> is for GUI)</p>
</section>
<section id="configure-neovim" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Configure neovim</h1>
<p>The standard location for <code>neovim</code> configuration files on “unix-like” systems is <code>~/.config/nvim</code>. The main config file is either init.vim (vimscript) or init.lua (Lua). In this post we’ll focus on lua based configuration.</p>
<p>Below is the file hierarchy we’ll construct. In fact all the code in the lua subdirectory could be bundled into the <code>init.lua</code> file, but this approach is clearer and cleaner.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb3-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> ginit.vim</span>
<span id="cb3-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> init.lua</span>
<span id="cb3-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> lazy-lock.json</span>
<span id="cb3-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> lua</span>
<span id="cb3-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> basics.lua</span>
<span id="cb3-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> leap-config.lua</span>
<span id="cb3-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> nvim-R-config.lua</span>
<span id="cb3-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> nvim-cmp-config.lua</span>
<span id="cb3-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> nvim-telescope-config.lua</span>
<span id="cb3-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> nvim-tree-config.lua</span>
<span id="cb3-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> treesitter-config.lua</span>
<span id="cb3-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> my_snippets</span>
<span id="cb3-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> all.snippets</span>
<span id="cb3-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> tex</span>
<span id="cb3-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> R</span>
<span id="cb3-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> python</span>
<span id="cb3-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> julia</span>
<span id="cb3-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> giles.tex.snipppets</span>
<span id="cb3-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> mail.snippets</span>
<span id="cb3-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> r.snippets</span>
<span id="cb3-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> rmd.snippets</span>
<span id="cb3-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> snippets.snippets</span>
<span id="cb3-24"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> tex.snippets</span>
<span id="cb3-25"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> text.snippets</span>
<span id="cb3-26"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--</span> txt.snippets</span>
<span id="cb3-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> spell</span>
<span id="cb3-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> en.utf-8.add</span>
<span id="cb3-29"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span>   <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span> en.utf-8.add.spl</span></code></pre></div>
<p>Neovim on its own is useful but limited. We can add functionality using plugins. To install one or more plugins we’ll need a plugin manager. There are several to choose from. We’ll use the <code>Lazy</code> plugin manager for this post. To install the <code>Lazy</code> issue the following command at the shell prompt:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> git <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">clone</span> https://github.com/folke/lazy.nvim.git <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-2">   ~/.local/share/nvim/lazy/lazy.nvim</span></code></pre></div>
<p>Add the following code to <code>init.lua</code> list the plugins needed to be installed from <code>github</code> and “feed” them to <code>Lazy</code> for installation.</p>
<p><code>Nvim-R</code>, <code>Leap</code>, <code>UltiSnips</code>, and <code>vimtex</code> need additional configuration. The required code is contained in bespoke files under the <code>lua</code> directory.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"></span>
<span id="cb5-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">vim.g.mapleader</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">","</span></span>
<span id="cb5-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">vim.g.maplocalleader</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span></span>
<span id="cb5-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">vim.opt.rtp:prepend</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"~/.local/share/nvim/lazy/lazy.nvim"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb5-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">require</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'plugins'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb5-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">require</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'basics'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb5-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">require</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nvim-tree-config'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb5-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">require</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nvim-R-config'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb5-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">require</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nvim-telescope-config'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb5-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">require</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leap'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.add_default_mappings()</span></span>
<span id="cb5-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">require</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leap-config'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb5-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">require</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lualine'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">.setup()</span></span></code></pre></div>
<p>List of plugins</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb6-1"></span>
<span id="cb6-2"></span>
<span id="cb6-3"></span>
<span id="cb6-4"></span>
<span id="cb6-5"></span>
<span id="cb6-6"></span>
<span id="cb6-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">require</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lazy'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">.setup</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb6-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span></span>
<span id="cb6-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--minimal</span> data science setup</span>
<span id="cb6-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span></span>
<span id="cb6-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'jalvesaq/Nvim-R'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lervag/vimtex'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SirVer/ultisnips'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'jalvesaq/vimcmdline'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span></span>
<span id="cb6-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--optional</span> utilities</span>
<span id="cb6-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span></span>
<span id="cb6-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nvim-lualine/lualine.nvim"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bluz71/vim-moonfly-colors"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'junegunn/vim-peekaboo'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tpope/vim-commentary'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'francoiscabrol/ranger.vim'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'machakann/vim-highlightedyank'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tpope/vim-surround'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ggandor/leap.nvim'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-26"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--</span></span>
<span id="cb6-27"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">--neovim</span> specific</span>
<span id="cb6-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nvim-lua/plenary.nvim'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nvim-tree/nvim-web-devicons'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nvim-tree/nvim-tree.lua'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nvim-telescope/telescope.nvim'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nvim-treesitter/nvim-treesitter'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'neovim/nvim-lspconfig'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb6-34"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">})</span></span>
<span id="cb6-35"></span></code></pre></div>
</section>
<section id="plugin-discussions" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> plugin discussions</h1>
</section>
<section id="setuo-basics" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Setuo Basics</h1>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb7-1"></span>
<span id="cb7-2"></span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">map</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">vim</span>.keymap.set</span>
<span id="cb7-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">opts</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {noremap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">true</span>}</span>
<span id="cb7-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">vim.cmd</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span></span>
<span id="cb7-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"    paste registers into terminal</span></span>
<span id="cb7-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">tnoremap &lt;expr&gt; &lt;C-R&gt; '&lt;C-\&gt;&lt;C-N&gt;"'.nr2char(getchar()).'</span>pi<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb7-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set background=dark</span></span>
<span id="cb7-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">colorscheme moonfly</span></span>
<span id="cb7-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">let $FZF_DEFAULT_COMMAND = '</span>rg --files --hidden<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb7-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set completeopt=menu,menuone,noinsert,noselect</span></span>
<span id="cb7-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set number relativenumber</span></span>
<span id="cb7-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set textwidth=80</span></span>
<span id="cb7-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set cursorline</span></span>
<span id="cb7-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set clipboard=unnamed</span></span>
<span id="cb7-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set iskeyword-=_</span></span>
<span id="cb7-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set hlsearch</span></span>
<span id="cb7-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set splitright</span></span>
<span id="cb7-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set hidden</span></span>
<span id="cb7-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set incsearch</span></span>
<span id="cb7-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set noswapfile</span></span>
<span id="cb7-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set showmatch</span></span>
<span id="cb7-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set ignorecase</span></span>
<span id="cb7-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set smartcase</span></span>
<span id="cb7-26"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set gdefault</span></span>
<span id="cb7-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">filetype plugin on</span></span>
<span id="cb7-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set encoding=utf-8</span></span>
<span id="cb7-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set nobackup</span></span>
<span id="cb7-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set nowritebackup</span></span>
<span id="cb7-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set updatetime=300</span></span>
<span id="cb7-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set signcolumn=yes</span></span>
<span id="cb7-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set colorcolumn=80</span></span>
<span id="cb7-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">set timeoutlen=1000 ttimeoutlen=10</span></span>
<span id="cb7-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">let g:UltiSnipsSnippetDirectories = ['</span>~/.config/nvim/my_snippets<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">']</span></span>
<span id="cb7-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">let g:UltiSnipsExpandTrigger="&lt;tab&gt;"</span></span>
<span id="cb7-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">let g:UltiSnipsJumpForwardTrigger="&lt;c-j&gt;"</span></span>
<span id="cb7-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">let g:UltiSnipsJumpBackwardTrigger="&lt;c-k&gt;"</span></span>
<span id="cb7-39"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">nnoremap &lt;leader&gt;U &lt;Cmd&gt;call UltiSnips#RefreshSnippets()&lt;CR&gt;</span></span>
<span id="cb7-40"></span>
<span id="cb7-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">autocmd BufWinEnter,WinEnter term://* startinsert</span></span>
<span id="cb7-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"autocmd TermOpen * exec "normal! i"</span></span>
<span id="cb7-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">]])</span></span>
<span id="cb7-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">map('</span>n<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">;</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', opts)</span></span>
<span id="cb7-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">map('</span>n<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">;</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', opts)</span></span>
<span id="cb7-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">map('</span>n<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>leader<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>u<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">','</span>:UltiSnipsEdit<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>cr<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', opts)</span></span>
<span id="cb7-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">map('</span>n<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">', '</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>leader<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>U<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">','</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>Cmd<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span>call <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">UltiSnips#RefreshSnippets()&lt;cr&gt;',</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">opts</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-48"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;localleader&gt;&lt;localleader&gt;'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;C-d&gt;'</span>, opts<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-49"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$'</span>, opts<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-50"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;leader&gt;w'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vipgq'</span>, opts<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-51"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;leader&gt;v'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">':edit ~/.config/nvim/init.lua&lt;cr&gt;'</span>, opts<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-52"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;leader&gt;n'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">':edit ~/.config/nvim/lua/basics.lua&lt;cr&gt;'</span>, opts<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-53"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;leader&gt;a'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ggVG'</span>, opts<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-54"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;leader&gt;t'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">':tab split&lt;cr&gt;'</span>, opts<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-55"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;leader&gt;y'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">':vert sb3&lt;cr&gt;'</span>, opts<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-56"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;leader&gt;0'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">':ls!&lt;CR&gt;:b&lt;Space&gt;'</span>, opts<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-57"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;leader&gt;&lt;leader&gt;'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;C-w&gt;w'</span>, opts<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-58"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;leader&gt;1'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;C-w&gt;:b1&lt;cr&gt;'</span>, opts<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-59"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;leader&gt;2'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;C-w&gt;:b2&lt;cr&gt;'</span>, opts<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-60"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;leader&gt;3'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;C-w&gt;:b3&lt;cr&gt;'</span>, opts<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-61"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'t'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ZZ'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"q('yes')&lt;CR&gt;"</span>, opts<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-62"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'t'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ZQ'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"q('no')&lt;CR&gt;"</span>, opts<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-63"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'v'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'$'</span>, opts<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-64"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'t'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;leader&gt;0'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;C-\\&gt;&lt;C-n&gt;&lt;C-w&gt;:ls!&lt;cr&gt;:b&lt;Space&gt;'</span>, opts<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-65"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'t'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;Escape&gt;'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;C-\\&gt;&lt;C-n&gt;'</span>, opts<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-66"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'t'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">',,'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;C-\\&gt;&lt;C-n&gt;&lt;C-w&gt;w'</span>, opts<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb7-67"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">map</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'i'</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;Esc&gt;'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;Esc&gt;`^'</span>, opts<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div>
</section>
<section id="set-up-r" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Set up R</h1>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb8-1"></span>
<span id="cb8-2"></span>
<span id="cb8-3"></span>
<span id="cb8-4"></span>
<span id="cb8-5"></span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">vim.cmd</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span></span>
<span id="cb8-8">iabb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;</span>buffer<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">x</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>%</span>
<span id="cb8-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">iabb</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> z %in%</span>
<span id="cb8-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">let</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">R_auto_start</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb8-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">let</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">R_enable_comment</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb8-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">let</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">R_hl_term</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb8-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">let</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">R_clear_line</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb8-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">let</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">R_pdfviewer</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"zathura"</span></span>
<span id="cb8-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">let</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">R_assign</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb8-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">let</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">R_latexcmd</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'xelatex'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb8-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">augroup</span> rmarkdown</span>
<span id="cb8-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">autocmd!</span></span>
<span id="cb8-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">autocmd</span> FileType rmd,r nnoremap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>CR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>  :call SendLineToR<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"down"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>CR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb8-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">autocmd</span> FileType rmd,r nnoremap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>space<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' :call RMakeRmd("default")&lt;cr&gt;</span></span>
<span id="cb8-21"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">autocmd FileType rmd,r noremap &lt;space&gt;i :call RAction("dim")&lt;cr&gt;</span></span>
<span id="cb8-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">autocmd FileType rmd,r noremap &lt;space&gt;h :call RAction("head")&lt;cr&gt;</span></span>
<span id="cb8-23"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">autocmd FileType rmd,r noremap &lt;space&gt;p :call RAction("print")&lt;cr&gt;</span></span>
<span id="cb8-24"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">autocmd FileType rmd,r noremap &lt;space&gt;q :call RAction("length")&lt;cr&gt;</span></span>
<span id="cb8-25"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">autocmd FileType rmd,r noremap &lt;space&gt;n :call RAction("nvim.names")&lt;cr&gt;</span></span>
<span id="cb8-26"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">autocmd FileType rmd,r vmap &lt;buffer&gt; &lt;CR&gt; &lt;localleader&gt;sd</span></span>
<span id="cb8-27"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">autocmd FileType rmd,r nmap &lt;buffer&gt; &lt;space&gt;j &lt;localleader&gt;gn</span></span>
<span id="cb8-28"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">autocmd FileType rmd,r nmap &lt;buffer&gt; &lt;space&gt;k &lt;localleader&gt;gN</span></span>
<span id="cb8-29"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">autocmd FileType rmd,r nmap &lt;buffer&gt; &lt;space&gt;l &lt;localleader&gt;cd</span></span>
<span id="cb8-30"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">augroup END</span></span>
<span id="cb8-31"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">]])</span></span>
<span id="cb8-32"></span>
<span id="cb8-33"></span>
<span id="cb8-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb8-35"></span>
<span id="cb8-36"></span>
<span id="cb8-37"></span></code></pre></div>
</section>
<section id="appendix-ubuntu-tweaks" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> Appendix Ubuntu tweaks</h1>
</section>
<section id="appendix-using-multiple-configs" class="level1" data-number="8">
<h1 data-number="8"><span class="header-section-number">8</span> Appendix, Using multiple configs:</h1>
<p><a href="https://michaeluloth.com/neovim-switch-configs/">Switching Configs in Neovim • Michael Uloth</a></p>
<p>Initial bare cofig:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb9-1"></span>
<span id="cb9-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">julia</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ~/.config/test_nvim ☕ NVIM_APPNAME=test_nvim nvim</span></code></pre></div>
<p>Install Plug plugin for plugin management</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb10-1"></span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sh</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \</span></span>
<span id="cb10-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'</span></span></code></pre></div>
<section id="prerequisites" class="level2" data-number="8.1">
<h2 data-number="8.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">8.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="8.2">
<h2 data-number="8.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">8.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="8.3">
<h2 data-number="8.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">8.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="8.4">
<h2 data-number="8.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">8.4</span> Further Reading</h2>
<p>In development</p>


<!-- -->

</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Setting up a Neovim Environment for Data Science Code
    Development},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/setupneovim/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Setting up a Neovim Environment
for Data Science Code Development.”</span> May 13, 2025. <a href="https://focusonr.org/posts/setupneovim/">https://focusonr.org/posts/setupneovim/</a>.
</div></div></section></div> ]]></description>
  <category>Neovim</category>
  <category>Vim</category>
  <guid>https://focusonr.org/posts/setupneovim/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/setupneovim/img/nvimlogo.jpeg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Setting up OBS for webcasting</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/setupobs/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://focusonr.org/posts/setupobs/img/obs.png" class="img-fluid"></p>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Webcasting for biostatistics is the challenge.</p>
<p>Lets take it one step at a time.</p>
<p>Start with the open source project <code>OBS</code>.</p>
<p><a href="https://obsproject.com/welcome">Welcome | OBS</a></p>
<p>Steps to get started. Work with youtube video.</p>
<p><a href="https://www.youtube.com/watch?v=-puA85ciDEM">How to Use OBS Studio</a></p>
<p>goal is to be able to create short, 5 minute, videos demonstrating “real time” data analysis.</p>
<p>first project:</p>
<ul>
<li><p>work through first 10 minutes of Dave Robinson “water” tidytuesday analysis.</p></li>
<li><p>create a 5 minute version of the analysis in vim using rgt-R tools and ultisnips.</p></li>
<li><p>create a simple OBS framework for the screencast.</p></li>
<li><p>Sections TBD</p></li>
<li><p>Youtube channel</p></li>
<li><p>Background blur</p></li>
<li><p>Keycastr</p></li>
<li><p>High contrast colorscheme</p></li>
<li><p>hotkeys</p></li>
<li><p>audio setup</p></li>
<li><p>video setup</p></li>
<li><p>format ?</p></li>
<li><p>scenes</p></li>
<li><p>twitter</p></li>
<li><p>blog</p></li>
<li><p>stack</p></li>
<li><p>podcast</p></li>
<li><p>vimcasts</p></li>
<li><p>twitch</p></li>
<li><p>tidytuesday</p></li>
<li><p>imovie for editing</p></li>
</ul>
<section id="prerequisites" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">1.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">1.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">1.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">1.4</span> Further Reading</h2>
<p>In development</p>


<!-- -->

</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Setting up {OBS} for Webcasting},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/setupobs/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Setting up OBS for
Webcasting.”</span> May 13, 2025. <a href="https://focusonr.org/posts/setupobs/">https://focusonr.org/posts/setupobs/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/setupobs/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/setupobs/img/obs.png" medium="image" type="image/png" height="144" width="144"/>
</item>
</channel>
</rss>
