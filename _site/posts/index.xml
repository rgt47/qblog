<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Thomas Lab</title>
<link>https://focusonr.org/posts/</link>
<atom:link href="https://focusonr.org/posts/index.xml" rel="self" type="application/rss+xml"/>
<description>R, Data Science, and Research Computing</description>
<generator>quarto-1.5.57</generator>
<lastBuildDate>Tue, 01 Jul 2025 05:41:56 GMT</lastBuildDate>
<item>
  <title>Best practices for parsing a formula in R programming</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/formula_parsing/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://focusonr.org/posts/formula_parsing/img/Rlogo.jpg" class="img-fluid"></p>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>R developers can make use of the <code>formula</code> object class to allow succinct (unquoted) input to functions. However, its a bit unclear what the best strategy is to parse the formula inside the function to extract and validate the instructions the formula provides.</p>
<p>In this post we’ll present several alternative methods for consideration. As with most coding challenges there is no single best answer but some are more elegant than others.</p>
</section>
<section id="methods" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Methods</h1>
<p>Consider the following function to parse a formula. The formulas we want to test are of the form <code>y ~ x1 + x2 | g</code> where <code>y</code> is the dependent variable, <code>x1</code> and <code>x2</code> are the independent variables and <code>g</code> is the grouping variable.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">frm</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- function<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">form</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb1-2">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">vars</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- all.vars<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">form</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">y_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- deparse<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">form</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>[2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-4">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">g_bar</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- deparse<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">form</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>[c(3, 1)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-5">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">g_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- NULL</span>
<span id="cb1-6">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">g_bar</span> == <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb1-7">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">x_vars</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- all.vars<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">form</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>[c(3, 2)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-8">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">g_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- all.vars<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">form</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>[c(3, 3)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-9">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb1-10">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">x_vars</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- all.vars<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">form</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[-1]</span></span>
<span id="cb1-11">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb1-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span></code></pre></div>
<p>Good question! The current logic correctly handles the presence or absence of a grouping variable by checking the structure of the formula (form[[3]]). Let’s analyze how it behaves in both cases and adjust if necessary.</p>
<p>Case 1: Formula with Grouping Variable (y ~ x1 + x2 | g)</p>
<p>In this case: • The RHS of the formula (form[[3]]) has a structure where form[[3]][[1]] is “|”. • This logic works because the formula structure explicitly includes the grouping operator |.</p>
<p>Example: form &lt;- y ~ x1 + x2 | g form[[3]][[1]] → “|” (indicates the grouping operator is present). • The logic splits the RHS into independent variables (form[[3]][[2]]) and the grouping variable (form[[3]][[3]]).</p>
<pre><code>Case 2: Formula without Grouping Variable (y ~ x1 + x2)</code></pre>
<p>In this case: • The RHS of the formula (form[[3]]) is x1 + x2, and form[[3]][[1]] is “+”. • The current logic (as.character(form[[3]][[1]]) == “|”) will fail because form[[3]][[1]] is “+”, not “|”. • Problem: The function will incorrectly assume that form[[3]][[1]] exists and attempt to access it, leading to an error when the RHS has no grouping operator. Fixing the Logic</p>
<p>To address this, we must first check if the formula has a valid structure for grouping. Specifically: 1. Check if the RHS (form[[3]]) has multiple components: • If form[[3]][[1]] exists, it can be checked for “|”. • If not, assume there is no grouping variable. 2. Updated Logic: • If length(form[[3]]) &gt; 1 and as.character(form[[3]][[1]]) == “|”, handle grouping. • Otherwise, treat it as a formula without grouping.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">frm</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- function<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">form,</span> data<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Validate inputs</span></span>
<span id="cb3-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">!inherits</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">form,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"formula"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-4">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">stop</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input 'form' must be a formula."</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb3-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">missing</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">data</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">!is.data.frame</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">data</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-7">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">stop</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input 'data' must be a data.frame."</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb3-9">    </span>
<span id="cb3-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract all variable names from the formula</span></span>
<span id="cb3-11">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">vars</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- all.vars<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">form</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-12">    </span>
<span id="cb3-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure all variables in the formula exist in the data</span></span>
<span id="cb3-14">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">missing_vars</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- setdiff<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">vars,</span> colnames<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">data</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb3-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">length</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">missing_vars</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> 0<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-16">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">stop</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The following variables are not found in the data: "</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> paste<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">missing_vars,</span> collapse = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb3-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb3-18">    </span>
<span id="cb3-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the dependent variable</span></span>
<span id="cb3-20">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">y_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- vars<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb3-21">    </span>
<span id="cb3-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check for grouping operator</span></span>
<span id="cb3-23">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">g_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- NULL</span>
<span id="cb3-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">length</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">form</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>[3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> 1 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">as.character</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">form</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>[3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">][[1]]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-25">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract independent and grouping variables</span></span>
<span id="cb3-26">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">x_vars</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- all.vars<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">form</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>[3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">][[2]]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-27">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">g_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- all.vars<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">form</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>[3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">][[3]]</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># No grouping variable, extract independent variables</span></span>
<span id="cb3-30">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">x_vars</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- vars<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[-</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb3-31">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb3-32">    </span>
<span id="cb3-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Subset the data for the independent variables</span></span>
<span id="cb3-34">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">independent_data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- data[c<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">x_vars,</span> g_var<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb3-35">    </span>
<span id="cb3-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Subset the data for the dependent variable</span></span>
<span id="cb3-37">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dependent_data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- data.frame<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dependent</span> = data[<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">y_var</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>], group = if <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">!is.null</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">g_var</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>[g_var<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">]</span> else NULL<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-38">    </span>
<span id="cb3-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">is.null</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">g_var</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If no grouping variable, return independent and dependent data.frames</span></span>
<span id="cb3-41">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">list</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb3-42">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">independent</span> = independent_data,</span>
<span id="cb3-43">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dependent</span> = data.frame<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dependent</span> = data[<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">y_var</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>]<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-44">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb3-45">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-46">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure the grouping variable is unique and valid</span></span>
<span id="cb3-47">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">grouping_var</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- g_var<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Assume single grouping variable</span></span>
<span id="cb3-48">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">!grouping_var</span> %in% colnames<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">data</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb3-49">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">stop</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Grouping variable not found in the data."</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-50">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb3-51">        </span>
<span id="cb3-52">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Split independent and dependent variables by the grouping variable</span></span>
<span id="cb3-53">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">split_independent</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- split<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">independent_data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>, x_vars, drop = FALSE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> independent_data[<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">grouping_var</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>]<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-54">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">split_dependent</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- split<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">dependent_data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dependent"</span>, drop = FALSE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> dependent_data<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$group</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb3-55">        </span>
<span id="cb3-56">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">list</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb3-57">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">independent</span> = split_independent,</span>
<span id="cb3-58">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">dependent</span> = split_dependent</span>
<span id="cb3-59">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb3-60">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb3-61"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span></code></pre></div>
<section id="references" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="references"><span class="header-section-number">2.1</span> References:</h2>
<p>“the formula is used to specify the symbolic model as well as generating the intended design matrix” <a href="https://rviews.rstudio.com/2017/02/01/the-r-formula-method-the-good-parts/">The R Formula Method: The Good Parts · R Views</a></p>
<p>” You’re probably familiar with formulas from linear models (e.g.&nbsp;lm(mpg ~ displ, data = mtcars)) but formulas are more than just a tool for modelling: they are a general way of capturing an unevaluated expression”</p>
<p>“because a formula captures two things:</p>
<pre><code>An unevaluated expression.
The context (environment) in which the expression was created.</code></pre>
<p>~ is a single character that allows you to say: “I want to capture the meaning of this code, without evaluating it right away”. For that reason, the formula can be thought of as a “quoting” operator.”</p>
<p><a href="https://cran.r-project.org/web/packages/lazyeval/vignettes/lazyeval.html">Non-standard evaluation</a></p>
<p><a href="https://shipt.tech/https-shipt-tech-advanced-programming-and-non-standard-evaluation-with-dplyr-e043f89deb3d">Advanced Programming and Non-Standard Evaluation with dplyr | by Ryan Boyer | Shipt Tech</a></p>
</section>
<section id="prerequisites" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">2.2</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">2.3</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">2.4</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="2.5">
<h2 data-number="2.5" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">2.5</span> Further Reading</h2>
<p>In development</p>


</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Best Practices for Parsing a Formula in {R} Programming},
  date = {2025-06-30},
  url = {https://focusonr.org/posts/formula_parsing/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Best Practices for Parsing a
Formula in R Programming.”</span> June 30, 2025. <a href="https://focusonr.org/posts/formula_parsing/">https://focusonr.org/posts/formula_parsing/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/formula_parsing/</guid>
  <pubDate>Tue, 01 Jul 2025 05:41:56 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/formula_parsing/img/Rlogo.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Add python code as an ultisnip snippet</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/ultisnips_python_post/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://focusonr.org/posts/ultisnips_python_post/img/python.png" class="img-fluid"> <img src="https://focusonr.org/posts/ultisnips_python_post/img/vim.png" class="img-fluid"></p>
</div></div><section id="motivation" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Motivation</h1>
<p>Came across a stackoverflow post asking for assistance in embedding python code in a vim ultisnip snippet. <a href="https://stackoverflow.com/questions/78636197/how-do-i-integrate-python-code-in-ultisnips">Stack Overflow</a></p>
<p>The function is</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> make_chords(num_reps):</span>
<span id="cb1-2">    text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb1-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(num_reps):</span>
<span id="cb1-4">        text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt; &gt; "</span></span>
<span id="cb1-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> text</span></code></pre></div>
<section id="introduction" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="introduction"><span class="header-section-number">1.1</span> Introduction</h2>
<p>In development</p>
</section>
<section id="prerequisites" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">1.2</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">1.3</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">1.4</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="1.5">
<h2 data-number="1.5" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">1.5</span> Further Reading</h2>
<p>In development</p>


</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Add Python Code as an Ultisnip Snippet},
  date = {2025-06-30},
  url = {https://focusonr.org/posts/ultisnips_python_post/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Add Python Code as an Ultisnip
Snippet.”</span> June 30, 2025. <a href="https://focusonr.org/posts/ultisnips_python_post/">https://focusonr.org/posts/ultisnips_python_post/</a>.
</div></div></section></div> ]]></description>
  <category>ultisnips</category>
  <category>python</category>
  <guid>https://focusonr.org/posts/ultisnips_python_post/</guid>
  <pubDate>Tue, 01 Jul 2025 05:41:56 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/ultisnips_python_post/img/python.png" medium="image" type="image/png" height="49" width="144"/>
</item>
<item>
  <title>Simple process for sharing Rmarkdown code via Docker</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/share_rmd_code_via_docker/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://focusonr.org/posts/share_rmd_code_via_docker/img/Rlogo.jpg" class="img-fluid"></p>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Lets assume you have an rmarkdown <code>Rmd</code> file, say <code>peng.Rmd</code>, that you’re written to analyze some data. You now want to share the code with a colleague, we’ll call him Joe. How to proceed?</p>
<p>The simplest option is simply to send Joe the “rmd” file containing the code via the most convenient method (e.g.&nbsp;email/text/slack/discord/github/USB drive etc.)</p>
<p>The next step will be for the Joe to ( attempt to ) load and run the code. Typically he would do this with either using <code>Rstudio.app</code> to open the file and <code>knit</code> it, render it from the command line with the command:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> R <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"render('peng.Rmd')"</span></span></code></pre></div>
<p>Sometimes this approach works, and all is well. Joe can add comments or expand the code and reply to you. Frequently, however, this naive process will fail for any number of reasons. Ideally to facilitate reproducibility Joe will have as similar a computing environment as you, the original developer. This can be difficult to achieve, especially given the dynamic nature of open source software. For example Joe may have an outdated version of <code>R</code> installed on his workstation, or his <code>R</code> environment may be missing a necessary package. Additiional potential problems include: the required package may be present but its the wrong version, the program may need to source an additional file thats missing, or the program load some data that it can’t find on Joe’s machine.</p>
<p>All of these problems go away if instead of sending the program as a standalone text file you send it as a docker image. In this post we’ll walk through the process of dockerizing the R code.</p>
<p>Assume a simple <code>Rmd</code> file like this:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1"></span>
<span id="cb2-2">---</span>
<span id="cb2-3">title: "Penguins analysis"</span>
<span id="cb2-4">author: "R.G. Thomas"</span>
<span id="cb2-5">date: "`r format(Sys.time(), '%B %d, %Y')`"</span>
<span id="cb2-6">fontsize: 11pt</span>
<span id="cb2-7">geometry: "left=3cm,right=5cm,top=2cm,bottom=2cm"</span>
<span id="cb2-8">output:</span>
<span id="cb2-9">  pdf_document:</span>
<span id="cb2-10">    keep_tex: true</span>
<span id="cb2-11">    includes:</span>
<span id="cb2-12">      in_header: "preamble.tex"</span>
<span id="cb2-13">---</span>
<span id="cb2-14"></span>
<span id="cb2-15">```{r include=F, echo=F}</span>
<span id="cb2-16">library(pacman)</span>
<span id="cb2-17">p_load(palmerpenguins, tidyverse, knitr)</span>
<span id="cb2-18"></span>
<span id="cb2-19">opts_chunk$set(</span>
<span id="cb2-20">  warning = FALSE, message = FALSE, echo = FALSE, results = "asis", dev = "pdf"</span>
<span id="cb2-21">)</span>
<span id="cb2-22">```</span>
<span id="cb2-23"></span>
<span id="cb2-24"># Introduction</span>
<span id="cb2-25"></span>
<span id="cb2-26">We can work with the dataset `penguins` included in the package `palmerpenguins`.</span>
<span id="cb2-27">```{r }</span>
<span id="cb2-28">library(palmerpenguins)</span>
<span id="cb2-29">```</span>
<span id="cb2-30">One naive approach is to split the dataset and do three separate</span>
<span id="cb2-31">analyses:</span>
<span id="cb2-32"></span>
<span id="cb2-33">```{r }</span>
<span id="cb2-34">df1 &lt;- split(penguins, penguins$species)</span>
<span id="cb2-35"></span>
<span id="cb2-36">foo &lt;- function(df, z) {</span>
<span id="cb2-37">  df |&gt; ggplot(aes(x = bill_length_mm, y = flipper_length_mm)) +</span>
<span id="cb2-38">    geom_point(aes(color = island), alpha = .5) +</span>
<span id="cb2-39">    geom_smooth() +</span>
<span id="cb2-40">    scale_color_manual(values = c("purple", "green", "red")) +</span>
<span id="cb2-41">    theme_bw() +</span>
<span id="cb2-42">    labs(</span>
<span id="cb2-43">      title = paste(z, " Penguin Anatomy Comparison"), x = "Flipper length",</span>
<span id="cb2-44">      y = "Bill length", color = "Island"</span>
<span id="cb2-45">    )</span>
<span id="cb2-46">  plotfile_name &lt;- paste0(z, ".pdf")</span>
<span id="cb2-47">  ggsave(plotfile_name)</span>
<span id="cb2-48">  cat(paste0("\\includegraphics[height=3cm]{", plotfile_name, "}"), "\n")</span>
<span id="cb2-49">  cat("\\vspace{1cm}", "\n")</span>
<span id="cb2-50">}</span>
<span id="cb2-51"></span>
<span id="cb2-52">bar &lt;- df1 |&gt; map2(names(df1), foo)</span>
<span id="cb2-53">```</span></code></pre></div>
<p>The <code>Rmd</code> file runs cleanly on our machine and generates the the report on the following page. However, we note that the third plot needs additional examination and want to relay the program to our colleague Joe for further analyis.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/share_rmd_code_via_docker/img/snag1.png" class="img-fluid figure-img"></p>
<figcaption>rendered page</figcaption>
</figure>
</div>
</section>
<section id="share-program-code-with-joe.-two-approaches-naive-and-docker-based." class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Share program code with Joe. Two approaches, Naive and Docker based.</h1>
<p>Whats the best way to accomplish this?</p>
<p>We start by simply emailing the file to him (rgthomas4747@gmail.com) and asking him to collaborate.</p>
<p>Joe downloads the attachment. Opens a working directory and attempts to run the Rmd file</p>
<p>with the command</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> R <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"render('peng.Rmd')"</span></span></code></pre></div>
<p>Joe has a linux mint desktop</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> mkdir <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">peng_collaboration</span></span>
<span id="cb4-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> cd <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">peng_collaboration</span></span>
<span id="cb4-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> R <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"render('peng.Rmd')"</span></span></code></pre></div>
<p>Linux can’f find R</p>
<p>Joe can fix this by installing <code>R</code></p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> sudo <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt</span> install r-base-core</span></code></pre></div>
<p>Next <code>R</code> can not find the function <code>render</code>.</p>
<p>Joe determines that <code>render</code> is a function in the package <code>rmarkdown</code></p>
<p>He endeavors to installs <code>rmarkdown</code> with</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb6-1"></span>
<span id="cb6-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">R</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"install.packages('rmarkdown')"</span></span></code></pre></div>
<p>This fails due to inadequate permission on the directory <code>/usr/lib/R/library</code></p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb7-1"></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt install libssl-dev libcurl4-openssl-dev unixodbc-dev libxml2-dev<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-3">libmariadb-dev libfontconfig1-dev libharfbuzz-dev libfribidi-dev<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-4">libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev</span></code></pre></div>
<p>Also latex is not available</p>
<p>One more try… and the latex engine notes the absence of the file</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">~/shr/preamble.tex</span></span></code></pre></div>
<p>So, I need to relay the missing .tex file.</p>
<p>Also the .png (sudoku.png) logo file.</p>
<p>Finally! success.</p>
</section>
<section id="docker-approach" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Docker approach</h1>
<p>Alternatively, consider the “Docker” approach.</p>
<p>Before sending peng.Rmd to Joe we’ll dockerize it.</p>
<ul>
<li>Prepare a work directory: penguins. We want to send Joe a container that has R and all the preliminaries taken care of so that all he has to do is</li>
</ul>
<p>Here is the docker file</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb9-1"></span>
<span id="cb9-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">FROM</span> rocker/verse:4</span>
<span id="cb9-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> apt update</span>
<span id="cb9-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> apt install vim <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span>
<span id="cb9-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"install.packages('pacman')"</span></span>
<span id="cb9-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"install.packages('palmerpenguins')"</span></span>
<span id="cb9-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"install.packages('tidyverse')"</span></span>
<span id="cb9-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"install.packages('knitr')"</span></span>
<span id="cb9-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"install.packages('rmarkdown')"</span></span>
<span id="cb9-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> tlmgr init-usertree</span>
<span id="cb9-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> tlmgr update <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--self</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--all</span></span>
<span id="cb9-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span>  tlmgr install  fancyhdr adjustbox geometry titling</span>
<span id="cb9-13"></span>
<span id="cb9-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> addgroup <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--system</span> joe <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">adduser</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--system</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--ingroup</span> joe joe</span>
<span id="cb9-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> chmod <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-R</span> 0777 <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/usr/local/lib/R/site-library'</span></span>
<span id="cb9-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> chown joe:joe <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-R</span> /home/joe</span>
<span id="cb9-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">USER</span> joe</span>
<span id="cb9-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">WORKDIR</span> /home/joe</span>
<span id="cb9-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> mkdir <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> /home/joe/shr</span>
<span id="cb9-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> mkdir <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> /home/joe/output</span>
<span id="cb9-21"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">COPY</span> /preamble.tex /home/joe/shr</span>
<span id="cb9-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># COPY /.Rprofile /home/joe/shr</span></span>
<span id="cb9-23"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">COPY</span> sudoku.png /home/joe/shr</span>
<span id="cb9-24"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">COPY</span> peng.Rmd /home/joe/shr</span>
<span id="cb9-25"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">CMD</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/bin/bash"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
<p>run docker</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> rgt47/penguin_review <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--platform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>linux/amd64 .</span>
<span id="cb10-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> push rgt47/peng_review</span></code></pre></div>
<p>relay image to Joe</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> push rgt47/peng_review</span></code></pre></div>
<p>or</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> save rgt47/peng_review <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gzip</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> peng_review_trans.tgz</span>
<span id="cb12-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> load <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> peng_review_trans.tgz</span></code></pre></div>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> docker <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pull</span> rgt47/penguin_review</span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> droot=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PWD</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>/output <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-it</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--platform</span> linux/x86_64 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb13-4">-v <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$droot</span>:/home/joe/output peng_review</span>
<span id="cb13-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> cd <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">output</span></span>
<span id="cb13-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> library<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rmarkdown</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">);</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">render</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'../shr/peng.Rmd'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div>
<p>Important to include the association between the /home/joe/output directory in the container with the output directory on the local workstation. Thats where the results of the analysis will be saved.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> R <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"library(rmarkdown); render('peng.Rmd')"</span></span></code></pre></div>
<p>and if he wants to edit peng.Rmd</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> vim <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">peng.Rmd</span></span></code></pre></div>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb16-1"></span>
<span id="cb16-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\usepackage[export]{adjustbox}</span></span>
<span id="cb16-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\usepackage{fancyhdr}</span></span>
<span id="cb16-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\usepackage{titling}</span></span>
<span id="cb16-5"></span>
<span id="cb16-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\pagestyle{fancy}</span></span>
<span id="cb16-7"></span>
<span id="cb16-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\pretitle{</span></span>
<span id="cb16-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\begin{flushright}</span></span>
<span id="cb16-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\includegraphics[width=3cm,valign=c]{sudoku.png}\\</span></span>
<span id="cb16-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\end{flushright}</span></span>
<span id="cb16-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\begin{flushleft}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\L</span>ARGE }</span>
<span id="cb16-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\posttitle{\par\end{flushleft}\vskip</span> 0.5em}</span>
<span id="cb16-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\predate{\begin{flushleft}\large}</span></span>
<span id="cb16-15">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\postdate{\par\end{flushleft}}</span></span>
<span id="cb16-16">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\preauthor{\begin{flushleft}\large}</span></span>
<span id="cb16-17">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\postauthor{\par\end{flushleft}}</span></span>
<span id="cb16-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\fancyfoot[L]{\currfilename}</span> %put date in header</span>
<span id="cb16-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\fancyfoot[R]{\includegraphics[width=.8cm]{sudoku.png}}</span></span>
<span id="cb16-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\fancyhead[L]{\today}</span> %put current file in footer</span></code></pre></div>
</section>
<section id="references" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> REFERENCES</h1>
<p><a href="https://www.statworx.com/en/content-hub/blog/running-your-r-script-in-docker/">Running your R script in Docker</a></p>
</section>
<section id="practice" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Practice</h1>
<p>Notes.</p>
<p>Situation: Mint is loaded and peng1.Rmd is transferred from researcher 1 to /home/z directory.</p>
<p>Try to run the program with command from colleague:</p>
<blockquote class="blockquote">
<p>R -e “render(‘peng1.Rmd’)”</p>
</blockquote>
<p>Result: error message:</p>
<p>Command R not found.</p>
<p>So install R…. to fix</p>
<blockquote class="blockquote">
<p>sudo apt install r-base-core Try again…</p>
</blockquote>
<blockquote class="blockquote">
<p>R -e “render(‘peng1.Rmd’)” Result: R loads but gives error: could not find function “render”</p>
</blockquote>
<p>Search google “R render”</p>
<p>Result: https://pkgs.rstudio.com/rmarkdown/reference/render.html</p>
<p>Looks like render is a function inside rmarkdown package. so install package R&gt; install.packages(“rmarkdown”)</p>
<p>Try again.</p>
<blockquote class="blockquote">
<p>R -e “library(rmarkdown); render(‘peng1.Rmd’)”</p>
</blockquote>
<p>Result: error. pandoc version 1.12.3 or higher required.</p>
<p>Now try to install pandoc Try again. &gt; R -e “library(rmarkdown); render(‘peng1.Rmd’)” Result: error. there is no called pacman</p>
<p>so install pacman R&gt; install.packages(“pacman”) Try again…</p>
<blockquote class="blockquote">
<p>R -e “library(rmarkdown); render(‘peng1.Rmd’)” result: failed pandoc could not find /Users/zenn/shr/preamble.tex</p>
</blockquote>
<p>This makes sense we forgot to send the preamble.tex file to researcher 2. Lets send it now. Also we need to adjust its location from a macos style file name to a linux based one.</p>
<p>To edit peng1.Rmd we need vim &gt; sudo apt install vim</p>
<p>Try again Result: pandoc error “pdflatex not found” Lets install tinytex. First in R and then in mint R&gt; install.packages(“tinytex”) R&gt; tinytex::install_tinytex() # to uninstall TinyTeX, run # tinytex::uninstall_tinytex()</p>
<p>Try again:</p>
<blockquote class="blockquote">
<p>R -e “library(rmarkdown); render(‘peng1.Rmd’)” result: pandoc error: file sudoku_apple.pdf not found.</p>
</blockquote>
<p>This makes sense we forgot to send the logo file. Lets send the file and try again.</p>
<blockquote class="blockquote">
<p>R -e “library(rmarkdown); render(‘peng1.Rmd’)” Result: error no bibliography file found.</p>
</blockquote>
<p>This makes sense we forgot to send the bib file. Lets send the file and try again. Also need to edit the location of bib file.</p>
<p>Try again:</p>
<blockquote class="blockquote">
<p>R -e “library(rmarkdown); render(‘peng1.Rmd’)”</p>
</blockquote>
<p>results: minor error. Some packages weren’t loading via pacman.</p>
<p>Try removing janitor, kableExtra, tidyverse, readxl and add ggplot2.</p>
<p>Try again:</p>
<blockquote class="blockquote">
<p>R -e “library(rmarkdown); render(‘peng1.Rmd’)”</p>
</blockquote>
<p>Success!</p>
<section id="prerequisites" class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">5.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">5.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="5.3">
<h2 data-number="5.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">5.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="5.4">
<h2 data-number="5.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">5.4</span> Further Reading</h2>
<p>In development</p>


</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Simple Process for Sharing {Rmarkdown} Code via {Docker}},
  date = {2025-06-30},
  url = {https://focusonr.org/posts/share_rmd_code_via_docker/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Simple Process for Sharing
Rmarkdown Code via Docker.”</span> June 30, 2025. <a href="https://focusonr.org/posts/share_rmd_code_via_docker/">https://focusonr.org/posts/share_rmd_code_via_docker/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/share_rmd_code_via_docker/</guid>
  <pubDate>Tue, 01 Jul 2025 05:41:56 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/share_rmd_code_via_docker/img/Rlogo.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Simple process for sharing R code via Docker</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/share_shiny_code_via_docker/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://focusonr.org/posts/share_shiny_code_via_docker/img/Rlogo.jpg" class="img-fluid"></p>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Lets assume you have an rmarkdown <code>Rmd</code> file, say <code>peng.Rmd</code>, that you’re written to analyze some data. You now want to share the code with a colleague, we’ll call him Joe. How to proceed?</p>
<p>The simplest option is simply to send Joe the “rmd” file containing the code via the most convenient method (e.g.&nbsp;email/text/slack/discord/github/USB drive etc.)</p>
<p>The next step will be for the Joe to ( attempt to ) load and run the code. Typically he would do this with either using <code>Rstudio.app</code> to open the file and <code>knit</code> it, render it from the command line with the command:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> R <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"render('peng.Rmd')"</span></span></code></pre></div>
<p>Sometimes this approach works, and all is well. Joe can add comments or expand the code and reply to you. Frequently, however, this naive process will fail for any number of reasons. Ideally to facilitate reproducibility Joe will have as similar a computing environment as you, the original developer. This can be difficult to achieve, especially given the dynamic nature of open source software. For example Joe may have an outdated version of <code>R</code> installed on his workstation, or his <code>R</code> environment may be missing a necessary package. Additiional potential problems include: the required package may be present but its the wrong version, the program may need to source an additional file thats missing, or the program load some data that it can’t find on Joe’s machine.</p>
<p>All of these problems go away if instead of sending the program as a standalone text file you send it as a docker image. In this post we’ll walk through the process of dockerizing the R code.</p>
<p>Assume a simple <code>Rmd</code> file like this:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode default code-with-copy"><code class="sourceCode default"><span id="cb2-1"></span>
<span id="cb2-2">---</span>
<span id="cb2-3">title: "Penguins analysis"</span>
<span id="cb2-4">author: "R.G. Thomas"</span>
<span id="cb2-5">date: "`r format(Sys.time(), '%B %d, %Y')`"</span>
<span id="cb2-6">fontsize: 11pt</span>
<span id="cb2-7">geometry: "left=3cm,right=5cm,top=2cm,bottom=2cm"</span>
<span id="cb2-8">output:</span>
<span id="cb2-9">  pdf_document:</span>
<span id="cb2-10">    keep_tex: true</span>
<span id="cb2-11">    includes:</span>
<span id="cb2-12">      in_header: "preamble.tex"</span>
<span id="cb2-13">---</span>
<span id="cb2-14"></span>
<span id="cb2-15">```{r include=F, echo=F}</span>
<span id="cb2-16">library(pacman)</span>
<span id="cb2-17">p_load(palmerpenguins, tidyverse, knitr)</span>
<span id="cb2-18"></span>
<span id="cb2-19">opts_chunk$set(</span>
<span id="cb2-20">  warning = FALSE, message = FALSE, echo = FALSE, results = "asis", dev = "pdf"</span>
<span id="cb2-21">)</span>
<span id="cb2-22">```</span>
<span id="cb2-23"></span>
<span id="cb2-24"># Introduction</span>
<span id="cb2-25"></span>
<span id="cb2-26">We can work with the dataset `penguins` included in the package `palmerpenguins`.</span>
<span id="cb2-27">```{r }</span>
<span id="cb2-28">library(palmerpenguins)</span>
<span id="cb2-29">```</span>
<span id="cb2-30">One naive approach is to split the dataset and do three separate</span>
<span id="cb2-31">analyses:</span>
<span id="cb2-32"></span>
<span id="cb2-33">```{r }</span>
<span id="cb2-34">df1 &lt;- split(penguins, penguins$species)</span>
<span id="cb2-35"></span>
<span id="cb2-36">foo &lt;- function(df, z) {</span>
<span id="cb2-37">  df |&gt; ggplot(aes(x = bill_length_mm, y = flipper_length_mm)) +</span>
<span id="cb2-38">    geom_point(aes(color = island), alpha = .5) +</span>
<span id="cb2-39">    geom_smooth() +</span>
<span id="cb2-40">    scale_color_manual(values = c("purple", "green", "red")) +</span>
<span id="cb2-41">    theme_bw() +</span>
<span id="cb2-42">    labs(</span>
<span id="cb2-43">      title = paste(z, " Penguin Anatomy Comparison"), x = "Flipper length",</span>
<span id="cb2-44">      y = "Bill length", color = "Island"</span>
<span id="cb2-45">    )</span>
<span id="cb2-46">  plotfile_name &lt;- paste0(z, ".pdf")</span>
<span id="cb2-47">  ggsave(plotfile_name)</span>
<span id="cb2-48">  cat(paste0("\\includegraphics[height=3cm]{", plotfile_name, "}"), "\n")</span>
<span id="cb2-49">  cat("\\vspace{1cm}", "\n")</span>
<span id="cb2-50">}</span>
<span id="cb2-51"></span>
<span id="cb2-52">bar &lt;- df1 |&gt; map2(names(df1), foo)</span>
<span id="cb2-53">```</span></code></pre></div>
<p>The <code>Rmd</code> file runs cleanly on our machine and generates the the report on the following page. However, we note that the third plot needs additional examination and want to relay the program to our colleague Joe for further analyis.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/share_shiny_code_via_docker/img/snag1.png" class="img-fluid figure-img"></p>
<figcaption>rendered page</figcaption>
</figure>
</div>
</section>
<section id="share-program-code-with-joe.-two-approaches-naive-and-docker-based." class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Share program code with Joe. Two approaches, Naive and Docker based.</h1>
<p>Whats the best way to accomplish this?</p>
<p>We start by simply emailing the file to him (rgthomas4747@gmail.com) and asking him to collaborate.</p>
<p>Joe downloads the attachment. Opens a working directory and attempts to run the Rmd file</p>
<p>with the command</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> R <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"render('peng.Rmd')"</span></span></code></pre></div>
<p>Joe has a linux mint desktop</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> mkdir <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">peng_collaboration</span></span>
<span id="cb4-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> cd <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">peng_collaboration</span></span>
<span id="cb4-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> R <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"render('peng.Rmd')"</span></span></code></pre></div>
<p>Linux can’f find R</p>
<p>Joe can fix this by installing <code>R</code></p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> sudo <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt</span> install r-base-core</span></code></pre></div>
<p>Next <code>R</code> can not find the function <code>render</code>.</p>
<p>Joe determines that <code>render</code> is a function in the package <code>rmarkdown</code></p>
<p>He endeavors to installs <code>rmarkdown</code> with</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb6-1"></span>
<span id="cb6-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">R</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"install.packages('rmarkdown')"</span></span></code></pre></div>
<p>This fails due to inadequate permission on the directory <code>/usr/lib/R/library</code></p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb7-1"></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt install libssl-dev libcurl4-openssl-dev unixodbc-dev libxml2-dev<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-3">libmariadb-dev libfontconfig1-dev libharfbuzz-dev libfribidi-dev<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-4">libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev</span></code></pre></div>
<p>Also latex is not available</p>
<p>One more try… and the latex engine notes the absence of the file</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">~/shr/preamble.tex</span></span></code></pre></div>
<p>So, I need to relay the missing .tex file.</p>
<p>Also the .png (sudoku.png) logo file.</p>
<p>Finally! success.</p>
</section>
<section id="docker-approach" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Docker approach</h1>
<p>Alternatively, consider the “Docker” approach.</p>
<p>Before sending peng.Rmd to Joe we’ll dockerize it.</p>
<ul>
<li>Prepare a work directory: penguins. We want to send Joe a container that has R and all the preliminaries taken care of so that all he has to do is</li>
</ul>
<p>Here is the docker file</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb9-1"></span>
<span id="cb9-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">FROM</span> rocker/verse:4</span>
<span id="cb9-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> apt update</span>
<span id="cb9-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> apt install vim <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span>
<span id="cb9-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"install.packages('pacman')"</span></span>
<span id="cb9-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"install.packages('palmerpenguins')"</span></span>
<span id="cb9-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"install.packages('tidyverse')"</span></span>
<span id="cb9-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"install.packages('knitr')"</span></span>
<span id="cb9-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"install.packages('rmarkdown')"</span></span>
<span id="cb9-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> tlmgr init-usertree</span>
<span id="cb9-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> tlmgr update <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--self</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--all</span></span>
<span id="cb9-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span>  tlmgr install  fancyhdr adjustbox geometry titling</span>
<span id="cb9-13"></span>
<span id="cb9-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> addgroup <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--system</span> joe <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">adduser</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--system</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--ingroup</span> joe joe</span>
<span id="cb9-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> chmod <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-R</span> 0777 <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/usr/local/lib/R/site-library'</span></span>
<span id="cb9-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> chown joe:joe <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-R</span> /home/joe</span>
<span id="cb9-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">USER</span> joe</span>
<span id="cb9-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">WORKDIR</span> /home/joe</span>
<span id="cb9-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> mkdir <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> /home/joe/shr</span>
<span id="cb9-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> mkdir <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> /home/joe/output</span>
<span id="cb9-21"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">COPY</span> /preamble.tex /home/joe/shr</span>
<span id="cb9-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># COPY /.Rprofile /home/joe/shr</span></span>
<span id="cb9-23"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">COPY</span> sudoku.png /home/joe/shr</span>
<span id="cb9-24"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">COPY</span> peng.Rmd /home/joe/shr</span>
<span id="cb9-25"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">CMD</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/bin/bash"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span></code></pre></div>
<p>run docker</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> rgt47/penguin_review <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--platform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>linux/amd64 .</span>
<span id="cb10-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> push rgt47/peng_review</span></code></pre></div>
<p>relay image to Joe</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> push rgt47/peng_review</span></code></pre></div>
<p>or</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> save rgt47/peng_review <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gzip</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> peng_review_trans.tgz</span>
<span id="cb12-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> load <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> peng_review_trans.tgz</span></code></pre></div>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> docker <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pull</span> rgt47/penguin_review</span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> droot=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PWD</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>/output <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-it</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--platform</span> linux/x86_64 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb13-4">-v <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$droot</span>:/home/joe/output peng_review</span>
<span id="cb13-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> cd <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">output</span></span>
<span id="cb13-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> library<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rmarkdown</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">);</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">render</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'../shr/peng.Rmd'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div>
<p>Important to include the association between the /home/joe/output directory in the container with the output directory on the local workstation. Thats where the results of the analysis will be saved.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> R <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"library(rmarkdown); render('peng.Rmd')"</span></span></code></pre></div>
<p>and if he wants to edit peng.Rmd</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> vim <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">peng.Rmd</span></span></code></pre></div>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb16-1"></span>
<span id="cb16-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\usepackage[export]{adjustbox}</span></span>
<span id="cb16-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\usepackage{fancyhdr}</span></span>
<span id="cb16-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\usepackage{titling}</span></span>
<span id="cb16-5"></span>
<span id="cb16-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\pagestyle{fancy}</span></span>
<span id="cb16-7"></span>
<span id="cb16-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\pretitle{</span></span>
<span id="cb16-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\begin{flushright}</span></span>
<span id="cb16-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\includegraphics[width=3cm,valign=c]{sudoku.png}\\</span></span>
<span id="cb16-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\end{flushright}</span></span>
<span id="cb16-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\begin{flushleft}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\L</span>ARGE }</span>
<span id="cb16-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\posttitle{\par\end{flushleft}\vskip</span> 0.5em}</span>
<span id="cb16-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\predate{\begin{flushleft}\large}</span></span>
<span id="cb16-15">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\postdate{\par\end{flushleft}}</span></span>
<span id="cb16-16">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\preauthor{\begin{flushleft}\large}</span></span>
<span id="cb16-17">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\postauthor{\par\end{flushleft}}</span></span>
<span id="cb16-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\fancyfoot[L]{\currfilename}</span> %put date in header</span>
<span id="cb16-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\fancyfoot[R]{\includegraphics[width=.8cm]{sudoku.png}}</span></span>
<span id="cb16-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">\fancyhead[L]{\today}</span> %put current file in footer</span></code></pre></div>
</section>
<section id="references" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> REFERENCES</h1>
<p><a href="https://www.statworx.com/en/content-hub/blog/running-your-r-script-in-docker/">Running your R script in Docker</a></p>
<section id="prerequisites" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">4.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">4.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="4.3">
<h2 data-number="4.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">4.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="4.4">
<h2 data-number="4.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">4.4</span> Further Reading</h2>
<p>In development</p>


</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Simple Process for Sharing {R} Code via {Docker}},
  date = {2025-06-30},
  url = {https://focusonr.org/posts/share_shiny_code_via_docker/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Simple Process for Sharing R
Code via Docker.”</span> June 30, 2025. <a href="https://focusonr.org/posts/share_shiny_code_via_docker/">https://focusonr.org/posts/share_shiny_code_via_docker/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/share_shiny_code_via_docker/</guid>
  <pubDate>Tue, 01 Jul 2025 05:41:56 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/share_shiny_code_via_docker/img/Rlogo.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Setting Up a Comprehensive Research Backup System on macOS</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <dc:creator>Ronald G. Thomas</dc:creator>
  <link>https://focusonr.org/posts/research_backup_system_p32/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/research_backup_system_p32/img/Data-backup.jpg" class="img-fluid figure-img" style="width:50.0%"></p>
<figcaption>Backup</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Managing 300+ Git repositories across 20GB of research data requires a robust, automated backup strategy. This guide walks through setting up a three-tier backup system that provides Git-level versioning, real-time cloud sync, and comprehensive system backups.</p>
<section id="backup-strategy-overview" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="backup-strategy-overview"><span class="header-section-number">1.1</span> Backup Strategy Overview</h2>
<p>Our approach uses three complementary layers:</p>
<ol type="1">
<li><strong>Automated Git commits and pushes</strong> (every 15 minutes)</li>
<li><strong>Cloud synchronization</strong> (real-time via Google Drive/Dropbox)</li>
<li><strong>Time Machine backups</strong> (hourly system-wide backups)</li>
</ol>
<p>This ensures your research is protected against hardware failure, accidental deletion, Git corruption, and provides easy access across devices.</p>
</section>
</section>
<section id="setting-up-time-machine" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Setting Up Time Machine</h1>
<p>Time Machine provides system-wide backup protection and serves as your safety net for everything beyond Git repositories.</p>
<section id="initial-time-machine-setup" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="initial-time-machine-setup"><span class="header-section-number">2.1</span> Initial Time Machine Setup</h2>
<section id="step-1-connect-your-usb-drive" class="level3" data-number="2.1.1">
<h3 data-number="2.1.1" class="anchored" data-anchor-id="step-1-connect-your-usb-drive"><span class="header-section-number">2.1.1</span> Step 1: Connect Your USB Drive</h3>
<ol type="1">
<li>Connect your 1TB USB drive to your MacBook</li>
<li>When prompted, <strong>do not</strong> use it for Time Machine yet - we’ll configure this properly first</li>
</ol>
</section>
<section id="step-2-format-the-drive-if-needed" class="level3" data-number="2.1.2">
<h3 data-number="2.1.2" class="anchored" data-anchor-id="step-2-format-the-drive-if-needed"><span class="header-section-number">2.1.2</span> Step 2: Format the Drive (if needed)</h3>
<ol type="1">
<li>Open <strong>Disk Utility</strong> (Applications &gt; Utilities &gt; Disk Utility)</li>
<li>Select your USB drive from the sidebar</li>
<li>Click <strong>Erase</strong></li>
<li>Choose format: <strong>Mac OS Extended (Journaled)</strong> or <strong>APFS</strong> (recommended for newer Macs)</li>
<li>Name it something like “Research Backup”</li>
<li>Click <strong>Erase</strong></li>
</ol>
</section>
<section id="step-3-configure-time-machine" class="level3" data-number="2.1.3">
<h3 data-number="2.1.3" class="anchored" data-anchor-id="step-3-configure-time-machine"><span class="header-section-number">2.1.3</span> Step 3: Configure Time Machine</h3>
<ol type="1">
<li>Open <strong>System Preferences</strong> &gt; <strong>Time Machine</strong></li>
<li>Click <strong>Select Backup Disk</strong></li>
<li>Choose your USB drive</li>
<li>Click <strong>Use Disk</strong></li>
<li>If prompted about encryption, choose <strong>Encrypt Backup</strong> for security</li>
</ol>
</section>
<section id="step-4-customize-time-machine-settings" class="level3" data-number="2.1.4">
<h3 data-number="2.1.4" class="anchored" data-anchor-id="step-4-customize-time-machine-settings"><span class="header-section-number">2.1.4</span> Step 4: Customize Time Machine Settings</h3>
<ol type="1">
<li>Click <strong>Options</strong> in Time Machine preferences</li>
<li>Add any folders you want to exclude (like Downloads, Trash, etc.)</li>
<li><strong>Important</strong>: Do NOT exclude <code>~/prj</code> - we want this backed up</li>
<li>Ensure “Back up while on battery power” is enabled if desired</li>
</ol>
<p>Time Machine will now automatically backup your entire system (including <code>~/prj</code>) every hour when the USB drive is connected.</p>
</section>
</section>
</section>
<section id="automated-git-backup-script" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Automated Git Backup Script</h1>
<p>This script scans all Git repositories in <code>~/prj</code> every 15 minutes, commits changes, and pushes to GitHub.</p>
<section id="minimal-version-of-backup-script" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="minimal-version-of-backup-script"><span class="header-section-number">3.1</span> Minimal version of backup script:</h2>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/opt/homebrew/bin/bash</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">find</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/prj"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-name</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".git"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-type</span> d <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">git_dir</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb1-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dirname</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$git_dir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb1-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-n</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> status <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--porcelain</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb1-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-A</span></span>
<span id="cb1-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Auto-backup: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'+%Y-%m-%d %H:%M:%S'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb1-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push origin main <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>/dev/null <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push origin master <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>/dev/null</span>
<span id="cb1-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</section>
<section id="create-the-full-script-file" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="create-the-full-script-file"><span class="header-section-number">3.2</span> Create the full Script File</h2>
<p>Add these features:</p>
<section id="command-line-interface-features" class="level3" data-number="3.2.1">
<h3 data-number="3.2.1" class="anchored" data-anchor-id="command-line-interface-features"><span class="header-section-number">3.2.1</span> Command Line Interface Features</h3>
<ul>
<li><strong>Verbose mode flag</strong> (<code>-v|--verbose</code>)</li>
<li><strong>Help flag</strong> (<code>-h|--help</code>)</li>
<li><strong>Command line argument parsing</strong> (while loop with case statements)</li>
<li><strong>Usage instructions and help text</strong></li>
</ul>
</section>
<section id="logging-and-output-features" class="level3" data-number="3.2.2">
<h3 data-number="3.2.2" class="anchored" data-anchor-id="logging-and-output-features"><span class="header-section-number">3.2.2</span> Logging and Output Features</h3>
<ul>
<li><strong>Log file creation</strong> (<code>~/Library/Logs/research_backup.log</code>)</li>
<li><strong>Log rotation</strong> (when file exceeds 10MB)</li>
<li><strong>Timestamped log entries</strong></li>
<li><strong>Color-coded console output</strong> (red/yellow/green/blue messages)</li>
<li><strong>Log message function</strong> with level-based formatting</li>
<li><strong>Detailed progress reporting</strong> (“Processing repository X”)</li>
<li><strong>Final summary statistics</strong></li>
<li><strong>Verbose console output option</strong></li>
</ul>
</section>
<section id="error-handling-and-validation" class="level3" data-number="3.2.3">
<h3 data-number="3.2.3" class="anchored" data-anchor-id="error-handling-and-validation"><span class="header-section-number">3.2.3</span> Error Handling and Validation</h3>
<ul>
<li><strong>Directory existence checks</strong> (research directory validation)</li>
<li><strong>Git repository validation</strong> (checking if .git is actually a valid repo)</li>
<li><strong>Remote repository checks</strong> (verifying origin remote exists)</li>
<li><strong>Branch existence validation</strong> (checking if branch exists on remote)</li>
<li><strong>File staging error handling</strong> (git add -A failure detection)</li>
<li><strong>Commit failure detection and reporting</strong></li>
<li><strong>Push failure detection with specific error messages</strong></li>
<li><strong>Network/authentication error distinction</strong></li>
</ul>
</section>
<section id="repository-filtering" class="level3" data-number="3.2.4">
<h3 data-number="3.2.4" class="anchored" data-anchor-id="repository-filtering"><span class="header-section-number">3.2.4</span> Repository Filtering</h3>
<ul>
<li><strong>User association filtering</strong> (only “rgt47” repositories)</li>
<li><strong>Archive directory exclusion</strong> (skip directories with “archive”)</li>
<li><strong>Backup directory exclusion</strong> (skip directories with “backup”)</li>
<li><strong>Case-insensitive name matching</strong></li>
<li><strong>Path-based exclusion checks</strong></li>
</ul>
</section>
<section id="advanced-git-features" class="level3" data-number="3.2.5">
<h3 data-number="3.2.5" class="anchored" data-anchor-id="advanced-git-features"><span class="header-section-number">3.2.5</span> Advanced Git Features</h3>
<ul>
<li><strong>Current branch detection</strong> (get_current_branch function)</li>
<li><strong>Upstream branch creation</strong> (–set-upstream for new branches)</li>
<li><strong>Change analysis</strong> (counting untracked/modified/added/deleted files)</li>
<li><strong>Branch existence verification on remote</strong></li>
<li><strong>Graceful handling of detached HEAD states</strong></li>
<li><strong>Smart branch pushing</strong> (handles both main and master)</li>
</ul>
</section>
<section id="counting-and-statistics" class="level3" data-number="3.2.6">
<h3 data-number="3.2.6" class="anchored" data-anchor-id="counting-and-statistics"><span class="header-section-number">3.2.6</span> Counting and Statistics</h3>
<ul>
<li><strong>Repository counters</strong> (repo_count, backup_count, error_count, etc.)</li>
<li><strong>Excluded repository tracking</strong></li>
<li><strong>Skipped repository tracking</strong></li>
<li><strong>Warning count tracking</strong></li>
<li><strong>Detailed final summary with all statistics</strong></li>
</ul>
</section>
<section id="safety-features" class="level3" data-number="3.2.7">
<h3 data-number="3.2.7" class="anchored" data-anchor-id="safety-features"><span class="header-section-number">3.2.7</span> Safety Features</h3>
<ul>
<li><strong>Working directory validation</strong> (cd error handling)</li>
<li><strong>Git status checks before operations</strong></li>
<li><strong>Clean repository detection</strong> (skip repos with no changes)</li>
<li><strong>Race condition handling</strong> (checking for empty commits)</li>
</ul>
</section>
<section id="documentation-and-maintenance" class="level3" data-number="3.2.8">
<h3 data-number="3.2.8" class="anchored" data-anchor-id="documentation-and-maintenance"><span class="header-section-number">3.2.8</span> Documentation and Maintenance</h3>
<ul>
<li><strong>Extensive inline comments</strong></li>
<li><strong>Function documentation</strong></li>
<li><strong>Usage examples</strong></li>
<li><strong>Error message explanations</strong></li>
<li><strong>Troubleshooting information</strong></li>
</ul>
</section>
<section id="configuration-features" class="level3" data-number="3.2.9">
<h3 data-number="3.2.9" class="anchored" data-anchor-id="configuration-features"><span class="header-section-number">3.2.9</span> Configuration Features</h3>
<ul>
<li><strong>Configurable research directory path</strong></li>
<li><strong>Configurable log file location</strong></li>
<li><strong>Configurable log size limits</strong></li>
<li><strong>Environment variable handling</strong></li>
</ul>
</section>
</section>
</section>
<section id="full-version-of-backup-script" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Full version of backup script:</h1>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/opt/homebrew/bin/bash</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Research Git Backup Script</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Automatically commits and pushes changes in all Git repositories</span></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Usage: ./backup_research.sh [-v|--verbose] [-h|--help]</span></span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">RESEARCH_DIR</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/prj/"</span></span>
<span id="cb2-8"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">LOG_FILE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/Library/Logs/research_backup.log"</span></span>
<span id="cb2-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">MAX_LOG_SIZE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>10485760  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 10MB</span></span>
<span id="cb2-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">VERBOSE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>false</span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Parse command line arguments</span></span>
<span id="cb2-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$#</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-gt</span> 0 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb2-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">case</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span></span>
<span id="cb2-15">        <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-v</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">--verbose</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb2-16">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">VERBOSE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>true</span>
<span id="cb2-17">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span></span>
<span id="cb2-18">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;;</span></span>
<span id="cb2-19">        <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-h</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">--help</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb2-20">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Usage: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$0</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> [-v|--verbose] [-h|--help]"</span></span>
<span id="cb2-21">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  -v, --verbose    Enable verbose output to console"</span></span>
<span id="cb2-22">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  -h, --help       Show this help message"</span></span>
<span id="cb2-23">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 0</span>
<span id="cb2-24">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;;</span></span>
<span id="cb2-25">        <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb2-26">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unknown option: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$1</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-27">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Use -h or --help for usage information"</span></span>
<span id="cb2-28">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1</span>
<span id="cb2-29">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;;</span></span>
<span id="cb2-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">esac</span></span>
<span id="cb2-31"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb2-32"></span>
<span id="cb2-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create log directory if it doesn't exist</span></span>
<span id="cb2-34"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dirname</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$LOG_FILE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-35"></span>
<span id="cb2-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rotate log if it gets too large</span></span>
<span id="cb2-37"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-f</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$LOG_FILE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stat</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f%z</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$LOG_FILE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-gt</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$MAX_LOG_SIZE</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-38">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mv</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$LOG_FILE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${LOG_FILE}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.old"</span></span>
<span id="cb2-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$VERBOSE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">==</span> true <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-40">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"INFO: Rotated log file (size exceeded </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${MAX_LOG_SIZE}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> bytes)"</span></span>
<span id="cb2-41">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-42"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-43"></span>
<span id="cb2-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Function to log messages (always logs to file, optionally to console)</span></span>
<span id="cb2-45"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log_message()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb2-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">level</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$1</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-47">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">message</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$2</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">timestamp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'+%Y-%m-%d %H:%M:%S'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">log_entry</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$timestamp</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">: [</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$level</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">] </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$message</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-50">    </span>
<span id="cb2-51">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$log_entry</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$LOG_FILE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-52">    </span>
<span id="cb2-53">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$VERBOSE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">==</span> true <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-54">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">case</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$level</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span></span>
<span id="cb2-55">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">ERROR</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb2-56">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"\033[31m</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$log_entry</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">\033[0m"</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Red</span></span>
<span id="cb2-57">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;;</span></span>
<span id="cb2-58">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">WARNING</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb2-59">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"\033[33m</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$log_entry</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">\033[0m"</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Yellow</span></span>
<span id="cb2-60">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;;</span></span>
<span id="cb2-61">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">SUCCESS</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb2-62">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"\033[32m</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$log_entry</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">\033[0m"</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Green</span></span>
<span id="cb2-63">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;;</span></span>
<span id="cb2-64">            <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">INFO</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb2-65">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"\033[34m</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$log_entry</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">\033[0m"</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Blue</span></span>
<span id="cb2-66">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;;</span></span>
<span id="cb2-67">            <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb2-68">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$log_entry</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-69">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;;</span></span>
<span id="cb2-70">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">esac</span></span>
<span id="cb2-71">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-72"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb2-73"></span>
<span id="cb2-74"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Function to check if repository has remote configured</span></span>
<span id="cb2-75"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">check_remote()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb2-76">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">repo_dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$1</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-77">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$repo_dir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-78">    </span>
<span id="cb2-79">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">remote_url</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> remote get-url origin <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>/dev/null<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-80">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-z</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$remote_url</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-81">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-82">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-83">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-84"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb2-85"></span>
<span id="cb2-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Function to check if repository is associated with user "rgt47"</span></span>
<span id="cb2-87"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">check_user_association()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb2-88">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">repo_dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$1</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-89">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$repo_dir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-90">    </span>
<span id="cb2-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check remote URL for rgt47 username</span></span>
<span id="cb2-92">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">remote_url</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> remote get-url origin <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>/dev/null<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-93">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$remote_url</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">==</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgt47"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-94">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-95">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-96">    </span>
<span id="cb2-97">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check git config for user association</span></span>
<span id="cb2-98">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">git_user</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> config user.name <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>/dev/null<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-99">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">git_email</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> config user.email <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>/dev/null<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-100">    </span>
<span id="cb2-101">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$git_user</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">==</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgt47"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> </span>
<span id="cb2-102">       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$git_email</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">==</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgt47"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-103">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-104">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-105">    </span>
<span id="cb2-106">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check global git config if local config doesn't have user info</span></span>
<span id="cb2-107">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-z</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$git_user</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-108">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">git_user</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> config <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--global</span> user.name <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>/dev/null<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-109">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-110">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-z</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$git_email</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-111">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">git_email</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> config <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--global</span> user.email <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>/dev/null<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-112">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-113">    </span>
<span id="cb2-114">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$git_user</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">==</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgt47"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> </span>
<span id="cb2-115">       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$git_email</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">==</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgt47"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-116">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb2-117">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-118">    </span>
<span id="cb2-119">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-120"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb2-121"></span>
<span id="cb2-122"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Function to check if directory should be excluded based on name</span></span>
<span id="cb2-123"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">should_exclude_directory()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb2-124">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">repo_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$1</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-125">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">repo_path</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$2</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-126">    </span>
<span id="cb2-127">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert to lowercase for case-insensitive matching</span></span>
<span id="cb2-128">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">lower_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$repo_name</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tr</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'[:upper:]'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'[:lower:]'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-129">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">lower_path</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$repo_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tr</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'[:upper:]'</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'[:lower:]'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-130">    </span>
<span id="cb2-131">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if directory name contains "archive" or "backup"</span></span>
<span id="cb2-132">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$lower_name</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">==</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"archive"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> </span>
<span id="cb2-133">       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$lower_name</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">==</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"backup"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-134">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Should exclude</span></span>
<span id="cb2-135">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-136">    </span>
<span id="cb2-137">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if any part of the path contains "archive" or "backup"</span></span>
<span id="cb2-138">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$lower_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">==</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"archive"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> </span>
<span id="cb2-139">       <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$lower_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">==</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"backup"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-140">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Should exclude</span></span>
<span id="cb2-141">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-142">    </span>
<span id="cb2-143">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Should not exclude</span></span>
<span id="cb2-144"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb2-145"></span>
<span id="cb2-146"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Function to get current branch name</span></span>
<span id="cb2-147"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_current_branch()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb2-148">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> symbolic-ref <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--short</span> HEAD <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>/dev/null <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> </span>
<span id="cb2-149">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> rev-parse <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--short</span> HEAD <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>/dev/null</span>
<span id="cb2-150"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb2-151"></span>
<span id="cb2-152"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Function to check if branch exists on remote</span></span>
<span id="cb2-153"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">branch_exists_on_remote()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb2-154">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">branch</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$1</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-155">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> ls-remote <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--heads</span> origin <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$branch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>/dev/null <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-q</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$branch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-156"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb2-157"></span>
<span id="cb2-158"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"INFO"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Starting research backup scan with verbose=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$VERBOSE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-159"></span>
<span id="cb2-160"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if research directory exists</span></span>
<span id="cb2-161"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">!</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-d</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$RESEARCH_DIR</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-162">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ERROR"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Research directory </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$RESEARCH_DIR</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> does not exist"</span></span>
<span id="cb2-163">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1</span>
<span id="cb2-164"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-165"></span>
<span id="cb2-166"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"INFO"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Scanning research directory: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$RESEARCH_DIR</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-167"></span>
<span id="cb2-168"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Counter for repositories processed</span></span>
<span id="cb2-169"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">repo_count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>0</span>
<span id="cb2-170"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">backup_count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>0</span>
<span id="cb2-171"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">error_count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>0</span>
<span id="cb2-172"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">warning_count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>0</span>
<span id="cb2-173"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">skipped_count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>0</span>
<span id="cb2-174"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">excluded_count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>0</span>
<span id="cb2-175"></span>
<span id="cb2-176"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find all .git directories and process them</span></span>
<span id="cb2-177"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">IFS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">read</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">git_dir</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb2-178">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">repo_dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dirname</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$git_dir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-179">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">repo_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">basename</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$repo_dir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-180">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">relative_path</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${repo_dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$RESEARCH_DIR}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-181">    </span>
<span id="cb2-182">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if directory should be excluded based on name</span></span>
<span id="cb2-183">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">should_exclude_directory</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$repo_name</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$relative_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-184">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"INFO"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-185">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Excluding repository (contains 'archive' or 'backup'): </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-186"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$relative_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-187">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">((</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">excluded_count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb2-188">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb2-189">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-190">    </span>
<span id="cb2-191">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"INFO"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Processing repository: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$relative_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-192">    </span>
<span id="cb2-193">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">! </span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$repo_dir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-194">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ERROR"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-195">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cannot access repository directory: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$repo_dir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-196">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">((</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">error_count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb2-197">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb2-198">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-199">    </span>
<span id="cb2-200">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">((</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">repo_count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb2-201">    </span>
<span id="cb2-202">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if it's actually a git repository</span></span>
<span id="cb2-203">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">! </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> rev-parse <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--git-dir</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>/dev/null <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&amp;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-204">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ERROR"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-205">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Directory contains .git but is not a valid git repository: </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-206"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$relative_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-207">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">((</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">error_count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb2-208">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb2-209">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-210">    </span>
<span id="cb2-211">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if repository is associated with user "rgt47"</span></span>
<span id="cb2-212">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">! </span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">check_user_association</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$repo_dir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-213">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"INFO"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-214">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Skipping repository (not associated with user 'rgt47'): </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-215"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$relative_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-216">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">((</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">skipped_count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb2-217">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb2-218">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-219">    </span>
<span id="cb2-220">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"INFO"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-221">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Repository </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$relative_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> is associated with user 'rgt47'"</span></span>
<span id="cb2-222">    </span>
<span id="cb2-223">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if repository has a remote configured</span></span>
<span id="cb2-224">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">! </span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">check_remote</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$repo_dir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-225">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"WARNING"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-226">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Repository has no remote configured, skipping: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$relative_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-227">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">((</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">warning_count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb2-228">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">((</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">skipped_count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb2-229">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb2-230">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-231">    </span>
<span id="cb2-232">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get current branch</span></span>
<span id="cb2-233">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">current_branch</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">get_current_branch</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-234">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-z</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$current_branch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-235">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ERROR"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-236">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cannot determine current branch for: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$relative_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-237">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">((</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">error_count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb2-238">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb2-239">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-240">    </span>
<span id="cb2-241">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"INFO"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-242">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Repository </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$relative_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> is on branch: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$current_branch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-243">    </span>
<span id="cb2-244">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check repository status</span></span>
<span id="cb2-245">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">git_status</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> status <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--porcelain</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>/dev/null<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-246">    </span>
<span id="cb2-247">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-z</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$git_status</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-248">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"INFO"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-249">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Repository </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$relative_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> is clean (no changes to commit)"</span></span>
<span id="cb2-250">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb2-251">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-252">    </span>
<span id="cb2-253">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Count changes</span></span>
<span id="cb2-254">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">untracked</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$git_status</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^??"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> 0<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-255">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">modified</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$git_status</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^ M"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> 0<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-256">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">added</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$git_status</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^A "</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> 0<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-257">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">deleted</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$git_status</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^D "</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> 0<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-258">    </span>
<span id="cb2-259">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"INFO"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-260">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Repository </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$relative_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> has changes: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$untracked</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> untracked, </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-261"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$modified</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> modified, </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$added</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> added, </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$deleted</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> deleted"</span></span>
<span id="cb2-262">    </span>
<span id="cb2-263">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Stage all changes</span></span>
<span id="cb2-264">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">! </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-A</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>/dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-265">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ERROR"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-266">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to stage changes in: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$relative_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-267">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">((</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">error_count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb2-268">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb2-269">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-270">    </span>
<span id="cb2-271">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"INFO"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-272">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Successfully staged all changes in: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$relative_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-273">    </span>
<span id="cb2-274">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create commit with timestamp</span></span>
<span id="cb2-275">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">commit_message</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Auto-backup: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'+%Y-%m-%d %H:%M:%S'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-276">    </span>
<span id="cb2-277">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$commit_message</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>/dev/null <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&amp;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-278">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SUCCESS"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-279">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Successfully committed changes in: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$relative_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-280">        </span>
<span id="cb2-281">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if current branch exists on remote</span></span>
<span id="cb2-282">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">! </span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">branch_exists_on_remote</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$current_branch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-283">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"WARNING"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-284">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Branch '</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$current_branch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' does not exist on remote for: </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-285"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$relative_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-286">            </span>
<span id="cb2-287">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Try to push with upstream setting</span></span>
<span id="cb2-288">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set-upstream</span> origin <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$current_branch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-289">               <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>/dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-290">                <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SUCCESS"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-291">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Created and pushed new branch '</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$current_branch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' to </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-292"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">remote for: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$relative_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-293">                <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">((</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">backup_count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb2-294">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb2-295">                <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ERROR"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-296">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to create and push new branch '</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$current_branch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-297"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">for: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$relative_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-298">                <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">((</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">error_count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb2-299">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-300">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb2-301">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Try to push to current branch</span></span>
<span id="cb2-302">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push origin <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$current_branch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>/dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-303">                <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SUCCESS"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-304">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Successfully pushed '</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$current_branch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' to remote for: </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-305"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$relative_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-306">                <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">((</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">backup_count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb2-307">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb2-308">                <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ERROR"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-309">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to push '</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$current_branch</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' to remote for: </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-310"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$relative_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> (check network/auth)"</span></span>
<span id="cb2-311">                <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">((</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">error_count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb2-312">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-313">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-314">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb2-315">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if commit failed due to no changes (race condition)</span></span>
<span id="cb2-316">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> diff <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cached</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--quiet</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-317">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"INFO"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-318">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No changes to commit in: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$relative_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-319"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(changes may have been reverted)"</span></span>
<span id="cb2-320">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb2-321">            <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ERROR"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-322">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to commit changes in: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$relative_path</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-323">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">((</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">error_count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb2-324">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-325">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-326">    </span>
<span id="cb2-327"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">find</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$RESEARCH_DIR</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-name</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".git"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-type</span> d <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-print0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-328"></span>
<span id="cb2-329"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Final summary</span></span>
<span id="cb2-330"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"INFO"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Backup scan complete"</span></span>
<span id="cb2-331"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"INFO"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-332">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Summary: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$repo_count</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> repositories processed, </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$backup_count</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-333"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">successfully backed up"</span></span>
<span id="cb2-334"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">log_message</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"INFO"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-335">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Excluded: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$excluded_count</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">, Skipped: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$skipped_count</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">, </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-336"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Errors: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$error_count</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">, Warnings: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$warning_count</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-337"></span>
<span id="cb2-338"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$VERBOSE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">==</span> true <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-339">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb2-340">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=== BACKUP SUMMARY ==="</span></span>
<span id="cb2-341">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Repositories found: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$((repo_count</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">excluded_count</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-342"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">skipped_count))</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-343">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Repositories excluded: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$excluded_count</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-344"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(archive/backup in name)"</span></span>
<span id="cb2-345">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Repositories skipped: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$skipped_count</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-346"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(not associated with rgt47)"</span></span>
<span id="cb2-347">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Repositories processed: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$repo_count</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-348">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Successfully backed up: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$backup_count</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-349">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Errors encountered: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$error_count</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-350">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Warnings generated: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$warning_count</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-351">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb2-352">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Log file location: </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$LOG_FILE</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-353">    </span>
<span id="cb2-354">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$error_count</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-gt</span> 0 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-355">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb2-356">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"⚠️  There were errors during backup. Check the log file </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-357"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">for details."</span></span>
<span id="cb2-358">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 1</span>
<span id="cb2-359">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$warning_count</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-gt</span> 0 <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb2-360">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb2-361">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"⚠️  Backup completed with warnings. Check the log file </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-362"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">for details."</span></span>
<span id="cb2-363">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb2-364">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb2-365">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"✅ Backup completed successfully!"</span></span>
<span id="cb2-366">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-367"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb2-368"></span>
<span id="cb2-369"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">exit</span> 0</span></code></pre></div>
<section id="setting-up-the-cron-job" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="setting-up-the-cron-job"><span class="header-section-number">4.1</span> Setting Up the Cron Job</h2>
<section id="step-1-open-the-crontab-editor" class="level3" data-number="4.1.1">
<h3 data-number="4.1.1" class="anchored" data-anchor-id="step-1-open-the-crontab-editor"><span class="header-section-number">4.1.1</span> Step 1: Open the Crontab Editor</h3>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">crontab</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span></span></code></pre></div>
</section>
<section id="step-2-add-the-cron-entry" class="level3" data-number="4.1.2">
<h3 data-number="4.1.2" class="anchored" data-anchor-id="step-2-add-the-cron-entry"><span class="header-section-number">4.1.2</span> Step 2: Add the Cron Entry</h3>
<p>Add this line to your crontab:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Research backup - runs every 15 minutes</span></span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">*/15</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> /Users/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">whoami</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span>/scripts/backup-research.sh</span></code></pre></div>
</section>
<section id="step-3-save-and-exit" class="level3" data-number="4.1.3">
<h3 data-number="4.1.3" class="anchored" data-anchor-id="step-3-save-and-exit"><span class="header-section-number">4.1.3</span> Step 3: Save and Exit</h3>
<ul>
<li><strong>If using nano:</strong> <code>Ctrl + X</code>, then <code>Y</code>, then <code>Enter</code></li>
<li><strong>If using vim:</strong> <code>Esc</code>, then <code>:wq</code>, then <code>Enter</code></li>
</ul>
</section>
<section id="step-4-verify-the-cron-job" class="level3" data-number="4.1.4">
<h3 data-number="4.1.4" class="anchored" data-anchor-id="step-4-verify-the-cron-job"><span class="header-section-number">4.1.4</span> Step 4: Verify the Cron Job</h3>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">crontab</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-l</span></span></code></pre></div>
</section>
<section id="step-5-test-the-setup" class="level3" data-number="4.1.5">
<h3 data-number="4.1.5" class="anchored" data-anchor-id="step-5-test-the-setup"><span class="header-section-number">4.1.5</span> Step 5: Test the Setup</h3>
<p>Wait 15 minutes, then check if it ran:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tail</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-20</span> ~/Library/Logs/research_backup.log</span></code></pre></div>


</section>
</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald and G. Thomas, Ronald},
  title = {Setting {Up} a {Comprehensive} {Research} {Backup} {System}
    on {macOS}},
  date = {2025-06-30},
  url = {https://focusonr.org/posts/research_backup_system_p32/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald, and Ronald G. Thomas. 2025. <span>“Setting
Up a Comprehensive Research Backup System on macOS.”</span> June 30,
2025. <a href="https://focusonr.org/posts/research_backup_system_p32/">https://focusonr.org/posts/research_backup_system_p32/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/research_backup_system_p32/</guid>
  <pubDate>Tue, 01 Jul 2025 00:41:13 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/research_backup_system_p32/img/Data-backup.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Research Compendia for Full Reproducibility in R: A zzrrtools, renv, and Docker Strategy</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <dc:creator>R.G. Thomas</dc:creator>
  <link>https://focusonr.org/posts/share_R_code_via_docker_p25/</link>
  <description><![CDATA[ 




<section id="executive-summary" class="level1 unnumbered">
<h1 class="unnumbered">Executive Summary</h1>
<p>Reproducibility is key to conducting data analysis, yet in practice, achieving it consistently with R workflows can be quite challenging. R projects frequently break when transferred between computers due to mismatched R versions, package dependencies, or inconsistent project organization. This white paper describes an approach to solving this problem by combining three tools: <strong>zzrrtools</strong> for creating structured research compendia, <strong>renv</strong> for R package management, and <strong>Docker</strong> for containerizing the computing environment. Together, these tools ensure that an R workflow runs identically across different computers by providing standardized project structure, identical R packages and versions, consistent R versions, and the same operating system libraries as the original setup.</p>
</section>
<section id="motivation" class="level1 unnumbered">
<h1 class="unnumbered">Motivation</h1>
<p>Imagine you’ve written code that you want to share with a colleague. At first glance, this may seem like a straightforward task—simply share the files electronically. However, ensuring that your colleague can run the code without errors, and obtain the same results is often much more challenging than anticipated.</p>
<p>When sharing R code, several potential problems can arise that can lead to code that won’t run or won’t match your results:</p>
<ul>
<li>Different versions of R installed on each machine</li>
<li>Mismatched R package versions</li>
<li>Missing or mismatched system dependencies (like pandoc or LaTeX)</li>
<li>Missing supplemental files referenced by the program (bibliography files, LaTeX preambles, datasets, images)</li>
<li>Different R startup configurations (.Rprofile or .Renviron)</li>
<li>Different Operating Systems (macOS, Windows, Linux, etc.)</li>
</ul>
<p>A real-world scenario often unfolds like this:</p>
<ol type="1">
<li>You email your analysis files to a colleague</li>
<li>They attempt to run your analysis with the commands you provided</li>
<li>But R isn’t installed on their system</li>
<li>After installing R, they get an error: “could not find function ‘render’” since they don’t have the <code>rmarkdown</code> package installed</li>
<li>They install the rmarkdown package and run the R command again</li>
<li>Now pandoc is missing</li>
<li>After installing pandoc, a required package, say <code>ggplot</code>, is missing</li>
<li>After installing <code>ggplot</code>, several external files are missing (e.g.&nbsp; bibliography, images)</li>
<li>And so on…</li>
</ol>
<p>This cycle of troubleshooting can be time-consuming and frustrating. Even when the code eventually runs, there’s no guarantee that they will get the same results that you did.</p>
<p>To ensure true reproducibility, your colleague should have a computing environment as similar to yours as possible. Given the dynamic nature of open source software, not to mention hardware and operating system differences, this can be difficult to achieve through manual installation and configuration.</p>
<p>The approach outlined in this white paper offers a systematic solution. Rather than sending standalone text files, with modest additional effort, you can provide a complete, containerized, hardware and OS independent environment that includes everything needed to run your analysis. With this approach, your colleague can run a simple command like:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">pwd</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">:/home/analyst/project"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">pwd</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/analysis/figures:/home/analyst/output"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-4">  ghcr.io/username/penguins_analysis:v1.0</span></code></pre></div>
<p>(The details of this docker command are explained below.)</p>
<p>This creates an identical R environment on their desktop, ready for them to run or modify your code with confidence that it will work as intended.</p>
<p>The Docker command shown above represents the end goal of this white paper’s approach, but achieving this level of reproducibility requires understanding and implementing three complementary technologies. The following sections provide a framework for building such reproducible environments from the ground up.</p>
</section>
<section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<section id="the-challenge-of-reproducibility-in-r" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="the-challenge-of-reproducibility-in-r"><span class="header-section-number">1.1</span> The Challenge of Reproducibility in R</h2>
<p>R has become a standard tool for data science and statistical analysis across numerous scientific disciplines. However, as R projects grow in complexity, they often develop complex webs of dependencies that can make sharing and reproducing analyses difficult. Some common challenges include:</p>
<ul>
<li>Different R versions across machines</li>
<li>Incompatible package versions</li>
<li>Missing system-level dependencies</li>
<li>Operating system differences (macOS vs.&nbsp;Windows vs.&nbsp;Linux)</li>
<li>Conflicts with other installed packages</li>
<li>R startup files (.Rprofile, .Renviron, .RData) that can affect code behavior</li>
</ul>
<p>These challenges often manifest as the frustrating “it works on my machine” problem, where analysis code runs perfectly for the original author but fails when others attempt to use it. This undermines the scientific and collaborative potential of R-based analyses.</p>
</section>
<section id="a-three-level-solution" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="a-three-level-solution"><span class="header-section-number">1.2</span> A Three-Level Solution</h2>
<p>To address these challenges, we need to tackle reproducibility at three distinct levels:</p>
<ol type="1">
<li><p><strong>Project-level reproducibility</strong>: Ensuring consistent project structure and organization using research compendium standards</p></li>
<li><p><strong>Package-level reproducibility</strong>: Ensuring exact package versions and dependencies are maintained</p></li>
<li><p><strong>System-level reproducibility</strong>: Guaranteeing consistent R versions, operating system, and system libraries</p></li>
</ol>
<p>The strategy presented in this white paper leverages <strong>zzrrtools</strong> for project-level structure, <strong>renv</strong> for package-level consistency, and <strong>Docker</strong> for system-level consistency. When combined, they provide a framework for end-to-end reproducible R workflows with proper research compendium organization.</p>
<p>With this three-level framework established, we can now examine how each tool addresses its specific layer of reproducibility. We begin with zzrrtools, which tackles the foundational challenge of project-level organization and provides the structural framework upon which package and system-level reproducibility can be built.</p>
</section>
</section>
<section id="zzrrtools-project-level-reproducibility" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> zzrrtools: Project-Level Reproducibility</h1>
<section id="what-is-zzrrtools" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="what-is-zzrrtools"><span class="header-section-number">2.1</span> What is zzrrtools?</h2>
<p><strong>zzrrtools</strong> is a Docker-first framework that creates reproducible research compendia with containerized development workflows. The framework extends the research compendium concept introduced by Ben Marwick’s rrtools, adding container-based development and automated dependency validation. Team members install zzrrtools once on their system, then can create or join any zzrrtools-based project using the same framework. A research compendium organizes digital research materials to enable others to inspect, reproduce, and extend the research.</p>
</section>
<section id="key-features-of-zzrrtools" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="key-features-of-zzrrtools"><span class="header-section-number">2.2</span> Key Features of zzrrtools</h2>
<p><strong>zzrrtools</strong> creates containerized research compendia with these key features:</p>
<ul>
<li><p><strong>Docker-first development</strong>: All workflows operate within containers, eliminating “works on my machine” issues</p></li>
<li><p><strong>Centralized framework</strong>: One-time zzrrtools installation enables consistent project creation and team collaboration</p></li>
<li><p><strong>Multi-service architecture</strong>: Provides specialized Docker environments for interactive R sessions, shell development, and paper rendering</p></li>
<li><p><strong>Flexible base images</strong>: Choice of minimal (rocker/r-ver) or pre-packaged (rgt47/r-pluspackages) Docker templates with common R packages</p></li>
<li><p><strong>Advanced dependency validation</strong>: Automated renv consistency checking with CRAN verification and pre-commit validation</p></li>
<li><p><strong>Shell-based workflows</strong>: Optimized for command-line development with rich automation via Make targets</p></li>
<li><p><strong>Team collaboration focus</strong>: Designed for multi-developer teams working on shared research projects</p></li>
</ul>
</section>
<section id="zzrrtools-workflow-self-replicating-collaboration" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="zzrrtools-workflow-self-replicating-collaboration"><span class="header-section-number">2.3</span> zzrrtools Workflow: Self-Replicating Collaboration</h2>
<p>The zzrrtools workflow is designed for team collaboration:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Project creator initializes the research compendium</span></span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">~/prj/zzrrtools/zzrrtools.sh</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">OPTIONS</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Available options:</span></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   --dotfiles DIR       Copy personal dotfiles (with leading dots)</span></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   --dotfiles-nodot DIR Copy dotfiles (without leading dots) </span></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   --base-image NAME    Use custom Docker base image (default: rocker/r-ver)</span></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                        Popular options: rgt47/r-pluspackages (includes tidyverse)</span></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   --no-docker          Skip Docker image build</span></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   --next-steps         Show workflow guidance</span></span></code></pre></div>
<p>This creates a Docker-first research compendium with:</p>
<ul>
<li><strong>Framework-based setup</strong> using centrally installed zzrrtools for consistent project creation</li>
<li><strong>Multi-service Docker architecture</strong> for interactive R, shell, and rendering</li>
<li><strong>Advanced renv validation</strong> with CRAN verification and pre-commit checking</li>
<li><strong>Dual-track automation</strong> supporting both native R and Docker workflows</li>
<li><strong>Navigation shortcuts</strong> via symbolic links (a→data, p→paper, s→scripts)</li>
<li><strong>Developer environment integration</strong> with personal dotfiles support</li>
<li><strong>Team synchronization</strong> via automated dependency validation</li>
</ul>
<p>Team members can collaborate after one-time zzrrtools installation:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># One-time zzrrtools installation</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone zzrrtools-repo ~/prj/zzrrtools</span>
<span id="cb3-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ~/prj/zzrrtools <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./install.sh</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Creates zzrrtools command in PATH</span></span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Per-project workflow</span></span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone project-repo <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> project-repo</span>
<span id="cb3-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">zzrrtools</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up project environment (command available anywhere)</span></span>
<span id="cb3-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> docker-r   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Start interactive R session</span></span></code></pre></div>
<section id="integrated-renv-consistency-checking" class="level3" data-number="2.3.1">
<h3 data-number="2.3.1" class="anchored" data-anchor-id="integrated-renv-consistency-checking"><span class="header-section-number">2.3.1</span> Integrated renv Consistency Checking</h3>
<p>The workflow includes advanced renv management through the <code>check_renv_for_commit.R</code> script, which provides automated dependency validation and team conflict prevention. This script:</p>
<ul>
<li><strong>Scans multiple directories</strong> (R/, scripts/, analysis/) for package dependencies</li>
<li><strong>Validates against CRAN</strong> to ensure packages exist and are properly named<br>
</li>
<li><strong>Synchronizes dependencies</strong> across code files, DESCRIPTION, and renv.lock</li>
<li><strong>Provides automated fixes</strong> to maintain team environment consistency</li>
<li><strong>Integrates with CI/CD</strong> for fail-fast validation workflows</li>
</ul>
<p>Usage examples:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Interactive dependency checking (development)</span></span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Rscript</span> check_renv_for_commit.R</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Auto-fix dependency issues</span></span>
<span id="cb4-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Rscript</span> check_renv_for_commit.R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--fix</span></span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CI/CD validation with fail-fast</span></span>
<span id="cb4-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Rscript</span> check_renv_for_commit.R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--fix</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--fail-on-issues</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--quiet</span></span>
<span id="cb4-9"></span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Via Make targets (recommended)</span></span>
<span id="cb4-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> check-renv          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check dependencies</span></span>
<span id="cb4-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> check-renv-fix      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fix dependency issues</span></span>
<span id="cb4-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> docker-check-renv-fix  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fix in container</span></span></code></pre></div>
<p>This approach ensures collaborators can reliably reproduce package environments and CI/CD pipelines have all necessary dependency information.</p>
</section>
</section>
<section id="research-compendium-structure" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="research-compendium-structure"><span class="header-section-number">2.4</span> Research Compendium Structure</h2>
<p>The zzrrtools setup creates a directory structure that follows research compendium best practices. The structure includes organized data folders, analysis directories, testing frameworks, and workflows.</p>
<p><strong>Key organizational principles:</strong></p>
<ul>
<li><strong>Data management</strong>: Separate folders for raw, derived, and external data with proper documentation</li>
<li><strong>Analysis workflow</strong>: Dedicated spaces for papers, figures, tables, and working scripts<br>
</li>
<li><strong>Package structure</strong>: R package organization with documentation and testing</li>
<li><strong>Integration support</strong>: Works with Docker, GitHub Actions, and build systems</li>
</ul>
<p>This organizational framework provides the foundation for reproducible research while supporting team collaboration and automated workflows.</p>
</section>
<section id="iterative-development-workflow" class="level2" data-number="2.5">
<h2 data-number="2.5" class="anchored" data-anchor-id="iterative-development-workflow"><span class="header-section-number">2.5</span> Iterative Development Workflow</h2>
<p>For collaborative analysis development, the research compendium structure supports a phased approach that balances rapid iteration with publication-quality outputs:</p>
<section id="phase-1-exploration-development-scripts" class="level3" data-number="2.5.1">
<h3 data-number="2.5.1" class="anchored" data-anchor-id="phase-1-exploration-development-scripts"><span class="header-section-number">2.5.1</span> Phase 1: Exploration &amp; Development (<code>scripts/</code>)</h3>
<p>During active analysis development, team members should work primarily in the <code>scripts/</code> directory:</p>
<pre><code>scripts/
├── 01_data_exploration.R
├── 02_penguin_correlations.R  
├── 03_species_analysis.R
├── 04_body_mass_analysis.R    # Additional analysis
└── 05_visualization_experiments.R</code></pre>
<p><strong>Benefits of script-based development:</strong> - <strong>Fast iteration</strong>: No need to knit/render documents during development - <strong>Interactive debugging</strong>: Can run code line-by-line in R console - <strong>Version control friendly</strong>: Pure R files produce clean diffs in Git - <strong>Easy collaboration</strong>: Contributors can add numbered script files - <strong>Flexible experimentation</strong>: Quick to test ideas and approaches</p>
</section>
<section id="phase-2-function-extraction-r" class="level3" data-number="2.5.2">
<h3 data-number="2.5.2" class="anchored" data-anchor-id="phase-2-function-extraction-r"><span class="header-section-number">2.5.2</span> Phase 2: Function Extraction (<code>R/</code>)</h3>
<p>As analysis patterns emerge, extract reusable functions to the <code>R/</code> directory:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># R/penguin_utils.R</span></span>
<span id="cb6-2">calculate_species_correlation <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(data, x_var, y_var, </span>
<span id="cb6-3">                                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">species_filter =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>) {</span>
<span id="cb6-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reusable function extracted from scripts</span></span>
<span id="cb6-5">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(species_filter)) {</span>
<span id="cb6-6">    data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data[data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>species <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> species_filter, ]</span>
<span id="cb6-7">  }</span>
<span id="cb6-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cor</span>(data[[x_var]], data[[y_var]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">use =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"complete.obs"</span>)</span>
<span id="cb6-9">}</span>
<span id="cb6-10"></span>
<span id="cb6-11">create_species_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(data, x_var, y_var) {</span>
<span id="cb6-12">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Standardized plotting function</span></span>
<span id="cb6-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(data, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes_string</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_var, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y_var, </span>
<span id="cb6-14">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb6-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span>
<span id="cb6-17">}</span></code></pre></div>
</section>
<section id="phase-3-publication-integration-analysispaper" class="level3" data-number="2.5.3">
<h3 data-number="2.5.3" class="anchored" data-anchor-id="phase-3-publication-integration-analysispaper"><span class="header-section-number">2.5.3</span> Phase 3: Publication Integration (<code>analysis/paper/</code>)</h3>
<p>Once analysis approaches stabilize, integrate polished results into the manuscript:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># In analysis/paper/paper.Rmd</span></span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Option 1: Source complete scripts</span></span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../scripts/02_penguin_correlations.R"</span>)</span>
<span id="cb7-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../scripts/04_body_mass_analysis.R"</span>)</span>
<span id="cb7-5"></span>
<span id="cb7-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Option 2: Use extracted functions</span></span>
<span id="cb7-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(here)</span>
<span id="cb7-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">here</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"R"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"penguin_utils.R"</span>))</span>
<span id="cb7-9"></span>
<span id="cb7-10">correlation_result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">calculate_species_correlation</span>(</span>
<span id="cb7-11">  penguins, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"flipper_length_mm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span></span>
<span id="cb7-12">)</span></code></pre></div>
</section>
<section id="recommended-collaborative-workflow" class="level3" data-number="2.5.4">
<h3 data-number="2.5.4" class="anchored" data-anchor-id="recommended-collaborative-workflow"><span class="header-section-number">2.5.4</span> Recommended Collaborative Workflow:</h3>
<ol type="1">
<li><strong>Project initialization</strong>: Project maintainer runs <code>zzrrtools.sh</code> to create project structure</li>
<li><strong>Immediate containerization</strong>: Build Docker container and switch to container-based development from day one</li>
<li><strong>Initial development</strong>: Create exploratory scripts in <code>scripts/</code> directory <strong>inside the container</strong></li>
<li><strong>Collaborative iteration</strong>: Team members clone repo, build identical container, add additional script files through pull requests <strong>from within the container</strong></li>
<li><strong>Code review in scripts</strong>: Both developers refine analysis logic in script files while working in identical Docker environments</li>
<li><strong>Function extraction</strong>: Move stable, reusable code to <code>R/</code> directory</li>
<li><strong>Paper integration</strong>: Source scripts or use functions in <code>analysis/paper/paper.Rmd</code></li>
<li><strong>Continuous validation</strong>: All development and testing occurs within the containerized environment</li>
</ol>
<p><strong>Why this container-first approach works:</strong></p>
<ul>
<li><strong>Reproducibility</strong>: Eliminates “works on my machine” problems from day one</li>
<li><strong>Identical environments</strong>: All collaborators work in exactly the same computational environment</li>
<li><strong>No environment drift</strong>: Cannot occur when everyone develops within containers</li>
<li><strong>Speed</strong>: Script development is faster than R Markdown knitting</li>
<li><strong>Modularity</strong>: Each script can focus on a specific analysis aspect</li>
<li><strong>Testability</strong>: Functions in <code>R/</code> can be easily unit tested in the same environment they’ll run in production</li>
<li><strong>Simple collaboration</strong>: Environment setup becomes a one-time <code>docker build</code> command for all contributors</li>
<li><strong>Development-production parity</strong>: The development environment IS the production environment</li>
</ul>
<p>This container-first, phased approach gives collaborators the speed of script-based development during exploration while maintaining the reproducibility and narrative flow of literate programming for final outputs. Most importantly, it ensures that all development occurs within the exact computational environment that will be used for final analysis and publication.</p>
<p>While zzrrtools establishes the organizational foundation for reproducible research, it relies on consistent R package environments to function effectively across different systems. The directory structure and R package framework created by zzrrtools becomes most useful when combined with precise dependency management. This is where renv becomes essential, providing the package-level consistency that complements zzrrtools’ structural approach.</p>
</section>
</section>
</section>
<section id="renv-package-level-reproducibility" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> renv: Package-Level Reproducibility</h1>
<section id="what-is-renv" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="what-is-renv"><span class="header-section-number">3.1</span> What is renv?</h2>
<p><strong>renv</strong> (Reproducible Environment) is an R package designed to create isolated, project-specific library environments. Instead of relying on a shared system-wide R library that might change over time, renv gives each project its own separate collection of packages with specific versions.</p>
</section>
<section id="key-features-of-renv" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="key-features-of-renv"><span class="header-section-number">3.2</span> Key Features of renv</h2>
<ul>
<li><p><strong>Isolated project library</strong>: renv creates a project-specific library (typically in <code>renv/library</code>) containing only the packages used by that project. This isolation ensures that updates or changes to packages in one project won’t affect others.</p></li>
<li><p><strong>Lockfile for dependencies</strong>: When you finish installing or updating packages, <code>renv::snapshot()</code> produces a <code>renv.lock</code> file - a JSON document listing each package and its exact version and source. This lockfile is designed to be committed to version control and shared.</p></li>
<li><p><strong>Environment restoration</strong>: On a new machine (or when reproducing past results), <code>renv::restore()</code> installs the exact versions of packages specified in the lockfile. This creates an R package environment identical to the one that created the lockfile, provided the same R version is available. The R version is important since critical components of the R system, such as random number generation, and default factor handling policy vary between versions.</p></li>
</ul>
</section>
<section id="basic-renv-workflow" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="basic-renv-workflow"><span class="header-section-number">3.3</span> Basic renv Workflow</h2>
<p>The typical workflow with renv involves:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># One-time installation of renv</span></span>
<span id="cb8-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install.packages</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"renv"</span>)</span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize renv for the project</span></span>
<span id="cb8-5">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">init</span>()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Creates renv infrastructure</span></span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install project-specific packages</span></span>
<span id="cb8-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ...</span></span>
<span id="cb8-9"></span>
<span id="cb8-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the package state to renv.lock</span></span>
<span id="cb8-11">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">snapshot</span>()</span>
<span id="cb8-12"></span>
<span id="cb8-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Later or on another system...</span></span>
<span id="cb8-14">renv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">restore</span>()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Restore packages from renv.lock</span></span></code></pre></div>
<p>While renv successfully addresses package-level reproducibility by ensuring identical R package versions across environments, even perfect package consistency cannot prevent analyses from failing or producing different results due to variations in R versions, operating systems, or system-level dependencies. A complete reproducibility solution requires addressing these system-level differences, which is where Docker containerization becomes essential.</p>
</section>
</section>
<section id="docker-system-level-reproducibility" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Docker: System-Level Reproducibility</h1>
<section id="what-is-docker" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="what-is-docker"><span class="header-section-number">4.1</span> What is Docker?</h2>
<p>Docker is a platform that allows you to package software into standardized units called containers. A Docker container is like a lightweight virtual machine that includes everything needed to run an application: the code, runtime, system tools, libraries, and settings.</p>
</section>
<section id="dockers-role-in-reproducibility" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="dockers-role-in-reproducibility"><span class="header-section-number">4.2</span> Docker’s Role in Reproducibility</h2>
<p>While renv handles R packages, Docker ensures consistency for:</p>
<ul>
<li><strong>Operating system</strong>: The specific Linux distribution or OS version</li>
<li><strong>R interpreter</strong>: The exact R version</li>
<li><strong>System libraries</strong>: Required C/C++ libraries and other dependencies</li>
<li><strong>Computational environment</strong>: Memory limits, CPU configuration, etc.</li>
<li><strong>External tools</strong>: pandoc, LaTeX, and other utilities needed for R Markdown</li>
</ul>
<p>By running an R Markdown project in Docker, you eliminate differences in OS or R installation as potential sources of irreproducibility. Any machine running Docker will execute the container in an identical environment.</p>
</section>
<section id="docker-components-for-r-workflows" class="level2" data-number="4.3">
<h2 data-number="4.3" class="anchored" data-anchor-id="docker-components-for-r-workflows"><span class="header-section-number">4.3</span> Docker Components for R Workflows</h2>
<p>For R-based projects, a typical Docker approach involves:</p>
<ol type="1">
<li><strong>Base image</strong>: Starting from a pre-configured R image (e.g., from the Rocker project)</li>
<li><strong>Dependencies</strong>: Adding system and R package dependencies</li>
<li><strong>Configuration</strong>: Setting working directories and environment variables</li>
<li><strong>Content</strong>: Adding project files</li>
<li><strong>Execution</strong>: Defining how the project should run</li>
</ol>
<p>The zzrrtools setup uses a streamlined Dockerfile based on rocker/r-ver with TinyTeX for LaTeX support. The R version is matched to the renv.lock file:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode dockerfile code-with-copy"><code class="sourceCode dockerfile"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use R version from renv.lock for perfect consistency</span></span>
<span id="cb9-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ARG</span> R_VERSION=4.3.0</span>
<span id="cb9-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">FROM</span> rocker/r-ver:${R_VERSION}</span>
<span id="cb9-4"></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prevent interactive prompts</span></span>
<span id="cb9-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ENV</span> DEBIAN_FRONTEND=noninteractive</span>
<span id="cb9-7"></span>
<span id="cb9-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install minimal system dependencies</span></span>
<span id="cb9-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> update <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--no-install-recommends</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-10">    pandoc <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-11">    vim <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-12">    git <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-13">    curl <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-14">    fonts-dejavu <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> clean <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-rf</span> /var/lib/apt/lists/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb9-16"></span>
<span id="cb9-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create non-root user</span></span>
<span id="cb9-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ARG</span> USERNAME=analyst</span>
<span id="cb9-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">useradd</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--create-home</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--shell</span> /bin/bash <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${USERNAME}</span></span>
<span id="cb9-20"></span>
<span id="cb9-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set user R library path</span></span>
<span id="cb9-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ENV</span> R_LIBS_USER=/home/${USERNAME}/R/library</span>
<span id="cb9-23"></span>
<span id="cb9-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create user R library directory and assign permissions</span></span>
<span id="cb9-25"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> /home/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${USERNAME}</span>/R/library <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-26">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chown</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-R</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${USERNAME}</span>:<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${USERNAME}</span> /home/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${USERNAME}</span>/R</span>
<span id="cb9-27"></span>
<span id="cb9-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set working directory</span></span>
<span id="cb9-29"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">WORKDIR</span> /home/${USERNAME}</span>
<span id="cb9-30"></span>
<span id="cb9-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Copy renv files with correct ownership</span></span>
<span id="cb9-32"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">COPY</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--chown=${USERNAME}:${USERNAME}</span> renv.lock ./</span>
<span id="cb9-33"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">COPY</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--chown=${USERNAME}:${USERNAME}</span> renv/activate.R ./renv/</span>
<span id="cb9-34"></span>
<span id="cb9-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Switch to non-root user</span></span>
<span id="cb9-36"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">USER</span> ${USERNAME}</span>
<span id="cb9-37"></span>
<span id="cb9-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install base R packages to user library</span></span>
<span id="cb9-39"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Rscript</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.libPaths(Sys.getenv("R_LIBS_USER")); \</span></span>
<span id="cb9-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    install.packages(c("tinytex", "rmarkdown", "renv"), \</span></span>
<span id="cb9-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    repos = "https://cloud.r-project.org")'</span></span>
<span id="cb9-42"></span>
<span id="cb9-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install TinyTeX in user directory</span></span>
<span id="cb9-44"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Rscript</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tinytex::install_tinytex()'</span></span>
<span id="cb9-45"></span>
<span id="cb9-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add TinyTeX binaries to PATH</span></span>
<span id="cb9-47"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ENV</span> PATH=/home/${USERNAME}/.TinyTeX/bin/x86_64-linux:$PATH</span>
<span id="cb9-48"></span>
<span id="cb9-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Restore R packages via renv</span></span>
<span id="cb9-50"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Rscript</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.libPaths(Sys.getenv("R_LIBS_USER")); \</span></span>
<span id="cb9-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    renv::restore()'</span></span>
<span id="cb9-52"></span>
<span id="cb9-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Default to interactive shell</span></span>
<span id="cb9-54"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">CMD</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/bin/bash"</span>]</span></code></pre></div>
<p>This configuration provides a minimal R installation with LaTeX support for PDF rendering and secure non-root user execution.</p>
<p><strong>Docker Compose Integration:</strong></p>
<p>The setup also includes a docker-compose.yml that provides multiple development environments:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Multiple services for different workflows</span></span>
<span id="cb10-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">services</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb10-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">r-session</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">   # Interactive R session  </span></span>
<span id="cb10-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bash</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        # Bash shell access</span></span>
<span id="cb10-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">research</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    # Automated paper rendering</span></span>
<span id="cb10-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        # Package testing</span></span>
<span id="cb10-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">check</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       # Package checking</span></span></code></pre></div>
<p>This allows developers to choose their preferred development environment while maintaining identical package dependencies and system configuration.</p>
</section>
</section>
<section id="combining-zzrrtools-renv-and-docker-a-comprehensive-approach" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Combining zzrrtools, renv, and Docker: A Comprehensive Approach</h1>
<section id="why-use-all-three" class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="why-use-all-three"><span class="header-section-number">5.1</span> Why Use All Three?</h2>
<p>Using any single tool improves reproducibility, but combining all three provides the most complete solution:</p>
<ul>
<li><strong>zzrrtools</strong> provides standardized project structure and research compendium organization</li>
<li><strong>renv</strong> guarantees the R packages and their versions</li>
<li><strong>Docker</strong> guarantees the OS and R version</li>
<li><strong>Together</strong> they achieve end-to-end reproducibility from project organization through package dependencies to operating system consistency</li>
</ul>
<p>This approach creates a fully portable, well-organized research compendium that can be shared and will produce identical results across different computers while following established research best practices.</p>
</section>
<section id="integration-strategy-with-governance-model" class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="integration-strategy-with-governance-model"><span class="header-section-number">5.2</span> Integration Strategy with Governance Model</h2>
<p>The workflow integrates zzrrtools, renv, and Docker with a clear governance structure suitable for multi-developer research teams:</p>
<p><strong>Project Maintainer Role:</strong> - Creates and maintains the research compendium structure - Manages renv environment and package dependencies using consistency checking - Updates and maintains Docker images - Reviews and approves contributor changes - Runs renv validation before accepting pull requests</p>
<p><strong>Contributor Role (Other Developers)</strong>: - Access the private research compendium as invited collaborators - Add analysis content, papers, and documentation using feature branches - Propose new package dependencies through contributions - Submit changes via pull requests from feature branches</p>
<p><strong>Workflow Steps</strong>:</p>
<ol type="1">
<li><p><strong>Initialize Research Compendium (Maintainer)</strong>:</p>
<ul>
<li>Create standardized project structure using zzrrtools framework</li>
<li>Set up analysis directories with data organization</li>
<li>Initialize renv environment with <code>renv::init()</code></li>
<li>Create Dockerfile with container configuration</li>
</ul></li>
<li><p><strong>Establish Development Environment (Maintainer)</strong>:</p>
<ul>
<li><p>Install required packages and develop initial analysis</p></li>
<li><p>Create tests for analytical functions</p></li>
<li><p>Use the renv consistency checker to validate and create initial lockfile:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Validate dependencies and create snapshot</span></span>
<span id="cb11-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Rscript</span> check_renv_for_commit.R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--fix</span></span></code></pre></div></li>
<li><p>Build and test Docker image locally</p></li>
</ul></li>
<li><p><strong>Maintain Infrastructure (Maintainer)</strong>:</p>
<ul>
<li><p>Review contributor pull requests for package additions</p></li>
<li><p>Use renv consistency checker to validate and update dependencies:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Validate contributor's package requirements</span></span>
<span id="cb12-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Rscript</span> check_renv_for_commit.R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--fail-on-issues</span></span>
<span id="cb12-3"></span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If validation passes, update environment</span></span>
<span id="cb12-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Rscript</span> check_renv_for_commit.R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--fix</span></span></code></pre></div></li>
<li><p>Update <code>renv.lock</code> by selectively incorporating new dependencies</p></li>
<li><p>Rebuild Docker images when system dependencies change</p></li>
<li><p>Push updated images to container registry (Docker Hub, GitHub Container Registry)</p></li>
</ul></li>
<li><p><strong>Collaborative Development (All Developers)</strong>:</p>
<p><strong>Research Compendium Files in GitHub Repository:</strong></p>
<ul>
<li><strong>Project Structure</strong>: <code>DESCRIPTION</code>, <code>LICENSE</code>, <code>README.qmd</code> (zzrrtools-generated)</li>
<li><strong>Analysis Content</strong>: Files in <code>analysis/paper/</code> directory (R Markdown manuscripts)</li>
<li><strong>Dependencies</strong>: <code>renv.lock</code> (managed by maintainer), <code>renv/activate.R</code></li>
<li><strong>Infrastructure</strong>: <code>Dockerfile</code> (maintained by project maintainer)</li>
<li><strong>Code</strong>: <code>R/</code> directory (utility functions), <code>tests/</code> directory</li>
<li><strong>Documentation</strong>: Generated README files and project documentation</li>
<li><strong>Configuration</strong>: <code>.gitignore</code>, <code>.github/</code> (CI/CD workflows)</li>
</ul>
<p><strong>Sharing the Docker image using Docker Hub:</strong></p>
<p>Docker Hub provides public image hosting that enables reproducible research by sharing computational environments while protecting private research code in GitHub.</p>
<p><strong>Docker Hub (Recommended for Reproducible Research)</strong></p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Build the image with GitHub Container Registry URL</span></span>
<span id="cb13-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> ghcr.io/username/penguins_analysis:v1.0 .</span>
<span id="cb13-3"></span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Login to GitHub Container Registry (using GitHub Personal Access Token)</span></span>
<span id="cb13-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$GITHUB_TOKEN</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> login ghcr.io <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> username <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb13-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--password-stdin</span></span>
<span id="cb13-7"></span>
<span id="cb13-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Push to GitHub Container Registry (automatically private)</span></span>
<span id="cb13-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> push ghcr.io/username/penguins_analysis:v1.0</span></code></pre></div>
<p><strong>Setting up GitHub Personal Access Token:</strong></p>
<p>Create a Personal Access Token with the required permissions for container registry operations. The token must include <code>write:packages</code> and <code>read:packages</code> scopes, plus <code>repo</code> access for private repositories.</p>
<p><strong>For detailed step-by-step instructions, see Appendix A: GitHub Personal Access Token Setup.</strong></p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Export token as environment variable (replace with your actual token)</span></span>
<span id="cb14-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">GITHUB_TOKEN</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span>
<span id="cb14-3"></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Login and push</span></span>
<span id="cb14-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$GITHUB_TOKEN</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> login ghcr.io <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> username <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb14-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--password-stdin</span></span>
<span id="cb14-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> ghcr.io/username/penguins_analysis:v1.0 .</span>
<span id="cb14-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> push ghcr.io/username/penguins_analysis:v1.0</span></code></pre></div>
<p><strong>Note</strong>: If you get a “permission_denied” error when pushing, ensure your token includes the correct scopes (see Appendix A for details).</p>
<p><strong>GitHub Container Registry Benefits:</strong></p>
<ul>
<li><strong>Free tier</strong>: 0.5GB storage included, no billing currently active</li>
<li><strong>Automatic access control</strong>: Inherits repository permissions</li>
<li><strong>Integrated with GitHub Actions</strong>: Direct authentication in CI/CD</li>
<li><strong>Simple team sharing</strong>: Repository collaborators automatically have access</li>
<li><strong>Package management</strong>: Integrated with GitHub Packages ecosystem</li>
</ul>
<p><strong>Docker Workflow:</strong></p>
<p>The zzrrtools setup provides multiple approaches for working with containers, from simple Make commands to direct Docker execution. Make commands offer simplicity:</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Build and run with Make (recommended)</span></span>
<span id="cb15-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> docker-build    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Build the container</span></span>
<span id="cb15-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> docker-r        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Interactive R session</span></span>
<span id="cb15-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> docker-render   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Render research paper</span></span></code></pre></div>
<p><strong>For Docker workflow options including Docker Compose and direct commands, see Appendix D: Docker Workflow Options.</strong></p></li>
<li><p><strong>Execute consistently</strong>:</p>
<ul>
<li>Run analyses in the Docker container for guaranteed reproducibility</li>
<li>Use volume mounts to access local files while maintaining environment consistency</li>
<li>Run tests within the container to verify functionality</li>
</ul></li>
</ol>
<p>This strategy ensures that your R Markdown documents and analyses will run identically for anyone who has access to your Docker container, regardless of their local setup.</p>
</section>
</section>
<section id="practical-example-collaborative-research-compendium-development-with-testing" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Practical Example: Collaborative Research Compendium Development with Testing</h1>
<p>The following case study demonstrates how two developers can collaborate on a research compendium using zzrrtools, renv, and Docker to ensure reproducibility, with integrated testing procedures to maintain code quality.</p>
<section id="project-scenario" class="level2" data-number="6.1">
<h2 data-number="6.1" class="anchored" data-anchor-id="project-scenario"><span class="header-section-number">6.1</span> Project Scenario</h2>
<p>A team of data scientists collaborates on Palmer Penguins analysis using zzrrtools’ Docker-first workflow that eliminates environment setup friction:</p>
<ul>
<li><strong>Joe</strong> (<code>joe</code>): Project maintainer who initializes the repository</li>
<li><strong>Sam</strong> (<code>sam</code>): Contributor who extends the analysis<br>
</li>
<li><strong>Additional team members</strong>: Can join without any local R installation</li>
</ul>
<p>The collaboration model emphasizes <strong>zero-setup team onboarding</strong> through self-replicating project distribution and containerized development environments.</p>
<blockquote class="blockquote">
<p><strong>Collaboration Philosophy</strong>: - <strong>Self-contained projects</strong>: Each repository includes its own setup script - <strong>Container-first development</strong>: All work happens in identical Docker environments - <strong>Automated dependency validation</strong>: Pre-commit checks prevent conflicts - <strong>Shell-based workflows</strong>: Command-line tools for maximum flexibility</p>
</blockquote>
<p><strong>Key Workflow Principles:</strong> - Joe initializes with zzrrtools and commits the setup script to the repository - Team members run the included script - no separate installation required - All development occurs in containers for perfect environment consistency - Dependency changes are validated before commits to prevent team conflicts - Each developer works in identical environments regardless of host system</p>
</section>
<section id="implementation-example" class="level2" data-number="6.2">
<h2 data-number="6.2" class="anchored" data-anchor-id="implementation-example"><span class="header-section-number">6.2</span> Implementation Example</h2>
<section id="project-maintainer-setup-joe" class="level3" data-number="6.2.1">
<h3 data-number="6.2.1" class="anchored" data-anchor-id="project-maintainer-setup-joe"><span class="header-section-number">6.2.1</span> Project Maintainer Setup (Joe)</h3>
<p>Joe initializes a private GitHub repository and creates the containerized research environment:</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create repository and initialize zzrrtools</span></span>
<span id="cb16-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://github.com/joe/penguins_analysis.git</span>
<span id="cb16-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> penguins_analysis</span>
<span id="cb16-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">~/prj/zzrrtools/zzrrtools.sh</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--dotfiles</span> ~/.config/shell <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb16-5">                             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--base-image</span> rgt47/r-pluspackages</span></code></pre></div>
<p>This creates: - Research compendium directory structure - Docker container configuration - renv dependency management - Automated validation scripts - GitHub Actions workflows</p>
<p><strong>For a detailed view of the complete directory structure created by zzrrtools, see Appendix C: Directory Structure.</strong></p>
<p>Joe completes the setup and begins development:</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Validate dependencies and build container</span></span>
<span id="cb17-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> check-renv</span>
<span id="cb17-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> docker-build</span>
<span id="cb17-4"></span>
<span id="cb17-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Start container-based development</span></span>
<span id="cb17-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> docker-r</span></code></pre></div>
<p><strong>For detailed information on renv dependency validation, troubleshooting, and team collaboration workflows, see Appendix G: renv Management and Validation.</strong></p>
<p>The validation script ensures package environment consistency by verifying dependencies across code files, DESCRIPTION, and renv.lock, preventing common collaboration issues where team members have mismatched environments.</p>
<p><strong>Step 4: Create Initial Analysis Paper</strong></p>
<p>Joe creates an initial analysis examining flipper length vs.&nbsp;bill length relationships in the Palmer Penguins dataset, implementing basic visualization and statistical exploration within the research compendium structure.</p>
<p><strong>Step 5: Create Tests for Analysis Functions</strong></p>
<p>Joe implements testing to ensure reproducible research through data validation, error detection, and environment verification. Testing provides collaboration confidence and supports publication standards by validating data integrity, statistical relationships, and pipeline functionality.</p>
<p>Joe sets up the testing framework and creates basic data validation tests to verify dataset availability, dimensions, and required columns. These tests ensure the analysis environment is correctly configured and catch data-related issues early in the development process.</p>
<p><strong>For a complete test suite with data validation, statistical tests, and integration tests, see Appendix B: Test Suite.</strong></p>
<p><strong>Step 6: Create a .gitignore file</strong></p>
<p>Joe configures version control to track source code and dependencies while excluding generated outputs and temporary files. The principle: track the “recipe” (code + dependencies), not the “meal” (outputs).</p>
<p>Joe creates a <code>.gitignore</code> file excluding renv libraries, generated outputs, temporary files, and system artifacts. This keeps the repository lightweight while ensuring collaborators can recreate the complete environment from tracked dependencies.</p>
<p><strong>Step 7: Create a Dockerfile</strong></p>
<p>zzrrtools generates a Dockerfile with multiple template options. The standard template uses rocker/r-ver, while the pluspackages template includes common R packages like tidyverse. Both provide:</p>
<ul>
<li><strong>R version consistency</strong>: Matches exact R version specified in renv.lock</li>
<li><strong>Development environment</strong>: Includes zsh, vim, tmux, Node.js for plugin support</li>
<li><strong>Security</strong>: Non-root user execution with proper file permissions</li>
<li><strong>TinyTeX integration</strong>: LaTeX support for PDF rendering (pluspackages template)</li>
<li><strong>Pre-installed packages</strong>: Common packages like tidyverse, DT, testthat (pluspackages template)</li>
</ul>
<p>The generated Dockerfile includes development tools and optimizations:</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode dockerfile code-with-copy"><code class="sourceCode dockerfile"><span id="cb18-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ARG</span> R_VERSION=latest</span>
<span id="cb18-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">FROM</span> rocker/r-ver:${R_VERSION}</span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install comprehensive development environment</span></span>
<span id="cb18-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> update <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-6">    git ssh curl wget vim tmux zsh build-essential <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-7">    libcurl4-openssl-dev libssl-dev libxml2-dev <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-8">    libfontconfig1-dev libharfbuzz-dev libfribidi-dev <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-9">    libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-10">    man-db pandoc <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-rf</span> /var/lib/apt/lists/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb18-12"></span>
<span id="cb18-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install Node.js for vim plugins</span></span>
<span id="cb18-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fsSL</span> https://deb.nodesource.com/setup_lts.x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bash</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-15">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> nodejs</span>
<span id="cb18-16"></span>
<span id="cb18-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create non-root user with zsh shell</span></span>
<span id="cb18-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ARG</span> USERNAME=analyst</span>
<span id="cb18-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">useradd</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--create-home</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--shell</span> /bin/zsh <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${USERNAME}</span></span>
<span id="cb18-20"></span>
<span id="cb18-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up R environment with renv</span></span>
<span id="cb18-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">WORKDIR</span> /home/${USERNAME}/project</span>
<span id="cb18-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">COPY</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--chown=${USERNAME}:${USERNAME}</span> renv.lock ./</span>
<span id="cb18-24"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">USER</span> ${USERNAME}</span>
<span id="cb18-25"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">R</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"install.packages('renv'); renv::restore()"</span></span>
<span id="cb18-26"></span>
<span id="cb18-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Copy project files and install</span></span>
<span id="cb18-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">COPY</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--chown=${USERNAME}:${USERNAME}</span> . .</span>
<span id="cb18-29"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">R</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"devtools::install('.')"</span></span>
<span id="cb18-30"></span>
<span id="cb18-31"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">CMD</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/bin/zsh"</span>]</span></code></pre></div>
<p><strong>Alternative: Pre-packaged Template</strong></p>
<p>For projects using common packages, the pluspackages template includes TinyTeX and popular R packages:</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode dockerfile code-with-copy"><code class="sourceCode dockerfile"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install TinyTeX for PDF rendering</span></span>
<span id="cb19-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">R</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"install.packages('tinytex')"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb19-3">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">R</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tinytex::install_tinytex()"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb19-4">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/root/.TinyTeX/bin/*/tlmgr</span> path add</span>
<span id="cb19-5"></span>
<span id="cb19-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install common R packages (cached layer)</span></span>
<span id="cb19-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">R</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"install.packages(c('renv', 'remotes', 'devtools', </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb19-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    'testthat', 'naniar', 'DT', 'conflicted', 'ggthemes', </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb19-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    'datapasta', 'janitor', 'kableExtra', 'tidytuesdayR', </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb19-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    'tidyverse'), repos = c(CRAN = 'https://cloud.r-project.org'))"</span></span>
<span id="cb19-11"></span>
<span id="cb19-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Give user write permissions to R library</span></span>
<span id="cb19-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chown</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-R</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${USERNAME}</span>:<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${USERNAME}</span> /usr/local/lib/R/site-library</span></code></pre></div>
<p><strong>For production Dockerfiles with development environment configuration (zsh, vim plugins, dotfiles integration), see Appendix F: Docker Configuration Examples.</strong></p>
<p><strong>R Version Synchronization:</strong></p>
<p>The Dockerfile uses a build argument to ensure the R version exactly matches what’s specified in <code>renv.lock</code>. This eliminates potential issues from R version mismatches between the package environment and the underlying R interpreter. The build command extracts the R version from the renv lockfile:</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract R version from renv.lock</span></span>
<span id="cb20-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">R_VERSION</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jq</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.R.Version'</span> renv.lock<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb20-3"></span>
<span id="cb20-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Build Docker image with extracted R version</span></span>
<span id="cb20-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--build-arg</span> R_VERSION=<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${R_VERSION}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb20-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> ghcr.io/joe/penguins_analysis:v1.0 .</span></code></pre></div>
<p>If the <code>renv.lock</code> file specifies R 4.3.1, the Docker image will use <code>rocker/r-ver:4.3.1</code>. If renv is updated to R 4.4.0, the Docker build will use <code>rocker/r-ver:4.4.0</code>. This maintains consistency between the package environment and system environment.</p>
<p><strong>Step 8: Container-Based Development</strong></p>
<p>Joe performs all development work inside the Docker container, ensuring consistent environments and immediate visibility of changes to the host system through volume mounting. The container provides a complete development environment with package management, editing tools, and validation utilities.</p>
<p><strong>Step 9: Update and Share Environment</strong></p>
<p>When package dependencies change, GitHub Actions automatically rebuilds the Docker image with updated renv.lock specifications and pushes the updated environment to Docker Hub for team access. This ensures collaborators have access to the identical development environment.</p>
<p><strong>Step 10: Prepare for Team Handoff</strong></p>
<p>Before handing off to team members, Joe must complete several critical steps:</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. Validate all dependencies are properly captured</span></span>
<span id="cb21-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> check-renv-fix</span>
<span id="cb21-3"></span>
<span id="cb21-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. Run complete test suite to ensure everything works</span></span>
<span id="cb21-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> docker-test</span>
<span id="cb21-6"></span>
<span id="cb21-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. Render paper to verify end-to-end workflow</span></span>
<span id="cb21-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> docker-render</span>
<span id="cb21-9"></span>
<span id="cb21-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4. Build and tag the Docker image</span></span>
<span id="cb21-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> docker-build</span>
<span id="cb21-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> tag penguins_analysis ghcr.io/joe/penguins_analysis:v1.0</span>
<span id="cb21-13"></span>
<span id="cb21-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 5. Push Docker image to Docker Hub for team access</span></span>
<span id="cb21-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$GITHUB_TOKEN</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> login ghcr.io <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> joe <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--password-stdin</span></span>
<span id="cb21-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> push ghcr.io/joe/penguins_analysis:v1.0</span>
<span id="cb21-17"></span>
<span id="cb21-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 6. Commit all setup files and push to repository</span></span>
<span id="cb21-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add .</span>
<span id="cb21-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Initial research compendium setup with Docker environment"</span></span>
<span id="cb21-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push origin main</span></code></pre></div>
<p><strong>Step 11: Enable Team Access</strong></p>
<p>Joe configures repository permissions for team collaboration:</p>
<ol type="1">
<li><strong>Repository Settings</strong> → <strong>Collaborators</strong> → Add team members</li>
<li><strong>Grant “Write” access</strong> to enable forking and pull requests</li>
<li><strong>Share repository URL</strong> and Docker Hub image name with team</li>
<li><strong>Document onboarding process</strong> in README or team communication</li>
</ol>
<p>At this point, Joe has established a reproducible research framework ready for collaborative development. The containerized environment is available via the registry, and team members can join with zero local setup requirements.</p>
</section>
<section id="team-member-onboarding-sam" class="level3" data-number="6.2.2">
<h3 data-number="6.2.2" class="anchored" data-anchor-id="team-member-onboarding-sam"><span class="header-section-number">6.2.2</span> Team Member Onboarding (Sam)</h3>
<p><strong>What Sam Receives from Joe:</strong> - Repository URL: <code>https://github.com/joe/penguins_analysis</code> - Container registry access (GitHub Personal Access Token) - Brief project overview and development guidelines</p>
<p><strong>Sam’s Onboarding Process:</strong></p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. Clone the zzrrtools framework</span></span>
<span id="cb22-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://github.com/username/zzrrtools.git ~/prj/zzrrtools</span>
<span id="cb22-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ~/prj/zzrrtools</span>
<span id="cb22-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./install.sh</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Creates zzrrtools command in PATH</span></span>
<span id="cb22-5"></span>
<span id="cb22-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. Fork and clone the project repository</span></span>
<span id="cb22-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://github.com/sam/penguins_analysis.git  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sam's fork</span></span>
<span id="cb22-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> penguins_analysis</span>
<span id="cb22-9"></span>
<span id="cb22-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. Run zzrrtools setup with personal preferences</span></span>
<span id="cb22-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">zzrrtools</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--dotfiles</span> ~/.config/shell  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Customize with personal dotfiles</span></span>
<span id="cb22-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Or use other options:</span></span>
<span id="cb22-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># zzrrtools --base-image rgt47/r-pluspackages  # Use pre-packaged template</span></span>
<span id="cb22-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># zzrrtools --no-docker                       # Skip Docker build</span></span>
<span id="cb22-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># zzrrtools --next-steps                      # Show workflow guidance</span></span>
<span id="cb22-16"></span>
<span id="cb22-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4. Pull the pre-built Docker environment</span></span>
<span id="cb22-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> pull ghcr.io/joe/penguins_analysis:v1.0</span>
<span id="cb22-19"></span>
<span id="cb22-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 5. Start development in identical environment</span></span>
<span id="cb22-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> docker-r</span></code></pre></div>
<p><strong>Key Advantage</strong>: After one-time zzrrtools installation, Sam has access to the framework for all future projects. The development environment setup becomes a simple script execution.</p>
<p>Sam develops new analysis components within the same containerized environment, ensuring identical results across team members.</p>
<p><strong>Step 5: Paper Integration and Testing</strong></p>
<p>Sam integrates the new analysis into the research paper, combining Joe’s original visualizations with the new body mass analysis. Sam also creates tests to validate the new functionality and ensure package dependencies are properly documented.</p>
<p><strong>Step 6: Validation and Quality Assurance</strong></p>
<p>Sam creates tests for the new body mass analysis, validates data integrity and statistical relationships, then runs the complete test suite and verifies paper rendering to ensure no regressions before submission.</p>
<p><strong>Step 7: Contribution Submission</strong></p>
<p>When Sam completes the analysis iteration, the submission process follows these steps:</p>
<ol type="1">
<li><p><strong>Validate dependencies</strong>: Run <code>make docker-check-renv-fix</code> to ensure package consistency</p></li>
<li><p><strong>Run complete test suite</strong>: Execute <code>make docker-test</code> to verify all tests pass</p></li>
<li><p><strong>Verify paper rendering</strong>: Run <code>make docker-render</code> to confirm analysis integrates properly</p></li>
<li><p><strong>Commit changes</strong>:</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add .</span>
<span id="cb23-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Add body mass analysis and associated tests"</span></span>
<span id="cb23-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push origin feature/body-mass-analysis</span></code></pre></div></li>
<li><p><strong>Create pull request</strong>: Submit pull request from Sam’s fork to Joe’s original repository</p></li>
<li><p><strong>Notify Joe</strong>: Alert project maintainer about new packages or Docker changes needed</p></li>
</ol>
<p><strong>Note</strong>: Only Joe (project maintainer) can accept pull requests. The official Docker image is automatically rebuilt and pushed to Docker Hub by GitHub Actions when package dependencies change.</p>
<p><strong>CI Feedback Loop</strong>: If the CI workflow fails (e.g., renv validation issues), Sam receives automatic GitHub notifications and can view detailed failure logs to fix the issues before Joe reviews the PR.</p>
<p>Sam commits the completed analysis, tests, and documentation to their feature branch and creates a cross-repository pull request to the original repository. This ensures proper code review and governance while maintaining clear attribution of contributions.</p>
<p>At this point, Sam has successfully contributed new analysis through the collaborative workflow. Joe reviews the pull request, tests the changes in the containerized environment, and merges the contribution while maintaining project governance and quality standards.</p>
</section>
</section>
<section id="complete-handoff-workflow-summary" class="level2" data-number="6.3">
<h2 data-number="6.3" class="anchored" data-anchor-id="complete-handoff-workflow-summary"><span class="header-section-number">6.3</span> Complete Handoff Workflow Summary</h2>
<p><strong>Initiating Developer (Joe) Responsibilities:</strong> 1. Run <code>zzrrtools.sh</code> to create research compendium 2. Develop initial analysis and create tests 3. Validate dependencies with <code>make check-renv-fix</code><br>
4. Build initial Docker image and configure automated rebuilds via GitHub Actions 5. Push team Docker image to Docker Hub (public registry for reproducibility) 6. Commit all files and push to repository 7. Grant team member repository access<br>
8. Share repository URL and Docker Hub image name</p>
<p><strong>Joining Developer (Sam) Process:</strong> 1. Receive repository URL and Docker Hub image name from Joe 2. Clone zzrrtools framework: <code>git clone zzrrtools ~/prj/zzrrtools</code> 3. Install zzrrtools: <code>cd ~/prj/zzrrtools &amp;&amp; ./install.sh</code> (creates <code>zzrrtools</code> command in PATH) 4. Fork and clone project repository 5. Pull pre-built team Docker image: <code>docker pull [TEAM]/project:latest</code> (from Docker Hub) 6. Start development immediately: <code>make docker-r</code> (no local setup needed) 7. Submit contributions via pull requests to private repository</p>
<p><strong>Key Success Factor</strong>: The containerized environment and centralized zzrrtools framework eliminate project-specific configuration requirements for team members after one-time framework installation.</p>
</section>
<section id="collaboration-results" class="level2" data-number="6.4">
<h2 data-number="6.4" class="anchored" data-anchor-id="collaboration-results"><span class="header-section-number">6.4</span> Collaboration Results</h2>
<p>This workflow achieves: - Identical development environments across team members - Dependency validation preventing conflicts - Standardized project structure - Automated testing and CI/CD integration</p>
<p><strong>For GitHub Actions setup instructions, workflow examples, and CI/CD configuration, see Appendix E: GitHub Actions CI/CD Setup.</strong></p>
<p>The collaborative workflow demonstrated above illustrates the power of combining zzrrtools, renv, and Docker for reproducible research. However, successful implementation of this approach requires understanding both when it’s most beneficial and how to apply it effectively. The following best practices and considerations provide guidance for teams considering this strategy.</p>
</section>
</section>
<section id="best-practices-and-considerations" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> Best Practices and Considerations</h1>
<section id="when-to-use-this-approach" class="level2" data-number="7.1">
<h2 data-number="7.1" class="anchored" data-anchor-id="when-to-use-this-approach"><span class="header-section-number">7.1</span> When to Use This Approach</h2>
<p>The zzrrtools + renv + Docker approach with testing is particularly valuable for:</p>
<ul>
<li><strong>Long-term research projects</strong> where reproducibility over time is crucial</li>
<li><strong>Collaborative analyses</strong> with multiple contributors on different systems</li>
<li><strong>Production analytical pipelines</strong> that need to run consistently</li>
<li><strong>Academic publications</strong> where methods must be reproducible</li>
<li><strong>Teaching and education</strong> to ensure consistent student experiences</li>
<li><strong>Complex analyses</strong> that require testing to validate results</li>
</ul>
</section>
<section id="tips-for-efficient-implementation" class="level2" data-number="7.2">
<h2 data-number="7.2" class="anchored" data-anchor-id="tips-for-efficient-implementation"><span class="header-section-number">7.2</span> Tips for Efficient Implementation</h2>
<ol type="1">
<li><strong>Keep Docker images minimal</strong>: Include only what’s necessary for reproducibility.</li>
<li><strong>Use specific version tags</strong>: For both R packages and Docker base images, specify exact versions.</li>
<li><strong>Document system requirements</strong>: Include notes on RAM and storage requirements.</li>
<li><strong>Leverage bind mounts</strong>: Mount local directories to containers for easier development.</li>
<li><strong>Write meaningful tests</strong>: Focus on validating both data integrity and analytical results.</li>
<li><strong>Test regularly</strong>: Use CI/CD pipelines to run tests on every change.</li>
<li><strong>Consider computational requirements</strong>: Particularly for resource-intensive analyses.</li>
</ol>
</section>
<section id="testing-strategies-for-r-analyses" class="level2" data-number="7.3">
<h2 data-number="7.3" class="anchored" data-anchor-id="testing-strategies-for-r-analyses"><span class="header-section-number">7.3</span> Testing Strategies for R Analyses</h2>
<p>Testing data analysis code differs from traditional software testing but provides crucial value for reproducible research:</p>
<ol type="1">
<li><strong>Data Validation Tests</strong>: Ensure data has the expected structure, types, and values.</li>
<li><strong>Function Tests</strong>: Verify that custom functions work as expected with known inputs and outputs.</li>
<li><strong>Edge Case Tests</strong>: Check how code handles missing values, outliers, or unexpected inputs.</li>
<li><strong>Integration Tests</strong>: Confirm that different parts of the analysis work correctly together.</li>
<li><strong>Regression Tests</strong>: Make sure new changes don’t break existing functionality.</li>
<li><strong>Output Validation</strong>: Verify that final results match expected patterns or benchmarks.</li>
</ol>
<p>While uncommon in traditional data analysis, these tests catch silent errors, validate assumptions, and provide confidence that analyses remain correct as code and data evolve.</p>
</section>
<section id="potential-challenges" class="level2" data-number="7.4">
<h2 data-number="7.4" class="anchored" data-anchor-id="potential-challenges"><span class="header-section-number">7.4</span> Potential Challenges</h2>
<p>Some challenges to be aware of:</p>
<ul>
<li><strong>Docker image size</strong>: Images with many packages can become large</li>
<li><strong>Learning curve</strong>: Docker, renv, and testing frameworks require some initial learning</li>
<li><strong>System-specific features</strong>: Some analyses may rely on hardware features</li>
<li><strong>Performance considerations</strong>: Containers may have different performance characteristics</li>
<li><strong>Test maintenance</strong>: Tests need to be updated as the analysis evolves</li>
</ul>
</section>
<section id="troubleshooting-common-issues" class="level2" data-number="7.5">
<h2 data-number="7.5" class="anchored" data-anchor-id="troubleshooting-common-issues"><span class="header-section-number">7.5</span> Troubleshooting Common Issues</h2>
<p><strong>Docker Build Failures:</strong> - Try: <code>export DOCKER_BUILDKIT=0</code> (disable BuildKit) - Check Docker has sufficient memory/disk space - Ensure Docker is running and up to date</p>
<p><strong>Platform Warnings on ARM64/Apple Silicon:</strong> - Use updated Makefile with <code>--platform linux/amd64</code> flags - Or set: <code>export DOCKER_DEFAULT_PLATFORM=linux/amd64</code></p>
<p><strong>Permission Errors in Container:</strong> - Rebuild image after copying dotfiles - Check file ownership in project directory</p>
<p><strong>Package Name Errors:</strong> - Ensure directory name contains only letters/numbers/periods - Avoid underscores and special characters</p>
<p><strong>Missing Dotfiles in Container:</strong> - Use <code>--dotfiles</code> or <code>--dotfiles-nodot</code> flag during setup - Rebuild Docker image after adding dotfiles</p>
<p>Despite these challenges, the benefits of reproducible research outweigh the implementation costs, particularly for collaborative and long-term projects. The approach described in this white paper provides a foundation for achieving reproducibility that meets the standards expected in data science and academic research.</p>
</section>
</section>
<section id="conclusion" class="level1" data-number="8">
<h1 data-number="8"><span class="header-section-number">8</span> Conclusion</h1>
<p>Achieving full reproducibility in R requires addressing project organization, package dependencies, and system-level consistency, while ensuring code quality through testing. By combining zzrrtools for research compendium structure, renv for R package management, Docker for environment containerization, and testing for code validation, data scientists and researchers can create truly portable, reproducible, and reliable workflows.</p>
<p>The approach presented in this white paper ensures that the common frustration of “it works on my machine” becomes a thing of the past. Instead, research compendia become easy to share and fully reproducible. A collaborator or reviewer can launch the Docker container and get identical results, without worrying about package versions, system setup, or project organization.</p>
<p>The case study demonstrates how two developers can effectively collaborate on an analysis while maintaining reproducibility and code quality throughout the project lifecycle. By integrating testing into the workflow, the team can be confident that their analysis is not only reproducible but also correct.</p>
<p>This strategy represents a method for long-term reproducibility in R, meeting the standards required for data science and research documentation. The combination of standardized research compendium structure, dependency management, and containerized environments creates a foundation for reproducible research. By adopting this approach, the R community can make progress toward the goal of reproducible and reliable research and analysis.</p>
</section>
<section id="references" class="level1" data-number="9">
<h1 data-number="9"><span class="header-section-number">9</span> References</h1>
<ol type="1">
<li>Marwick, B., Boettiger, C., &amp; Mullen, L. (2018). Packaging data analytical work reproducibly using R (and friends). <em>The American Statistician</em>, 72(1), 80-88.</li>
<li>Marwick, B. (2017). rrtools: Creates a Reproducible Research Compendium. R package version 0.1.6. https://github.com/benmarwick/rrtools (Extended in zzrrtools framework)</li>
<li>Ushey, K., Wickham, H., &amp; RStudio. (2023). renv: Project Environments. R package. https://rstudio.github.io/renv/</li>
<li>The Rocker Project. (2023). Docker containers for the R environment. https://www.rocker-project.org/</li>
<li>Wickham, H. (2023). testthat: Unit Testing for R. https://testthat.r-lib.org/</li>
</ol>
</section>
<section id="appendix-a-github-personal-access-token-setup" class="level1 unnumbered">
<h1 class="unnumbered">Appendix A: GitHub Personal Access Token Setup</h1>
<p>This appendix provides step-by-step instructions for creating a GitHub Personal Access Token with the required permissions for container registry operations.</p>
<p><strong>Why Container Access is Required:</strong> Both collaborators need container-related permissions because Docker images are stored in GitHub Container Registry as private packages that require authentication to access.</p>
<section id="step-by-step-token-creation" class="level2" data-number="9.1">
<h2 data-number="9.1" class="anchored" data-anchor-id="step-by-step-token-creation"><span class="header-section-number">9.1</span> Step-by-Step Token Creation</h2>
<p><strong>1. Navigate to GitHub Settings:</strong> - Go to <a href="https://github.com">GitHub.com</a> and sign in - Click your profile picture (top right) → Settings - In the left sidebar: Developer settings → Personal access tokens</p>
<p><strong>Note</strong>: GitHub now offers two token types: - <strong>Fine-grained personal access tokens</strong> (recommended for new projects) - <strong>Personal access tokens (classic)</strong> (for broader compatibility)</p>
<p><strong>2. Create New Token:</strong> - Click “Generate new token” and select the appropriate type - Add a descriptive note (e.g., “Docker Container Registry Access”) - Set expiration (recommended: 90 days for security)</p>
<p><strong>3. Select Required Scopes</strong> (check these boxes): - ✅ <strong>repo</strong> (Full control of private repositories) - <em>Required for private repos</em> - ✅ <strong>write:packages</strong> (Upload Docker images to GitHub Container Registry) - <em>Required for project maintainer</em> - ✅ <strong>read:packages</strong> (Download Docker images from GitHub Container Registry) - <em>Required for all team members</em> - ✅ <strong>delete:packages</strong> (Delete packages from GitHub Package Registry) - <em>Optional but recommended</em></p>
<p><strong>Note</strong>: Team members only need <code>read:packages</code> and <code>repo</code>, but the project maintainer needs all container permissions to push Docker images.</p>
<p><strong>Token Type Recommendation</strong>: Use fine-grained personal access tokens for new projects as they provide better security and more precise permissions.</p>
<p><strong>4. Generate and Copy Token:</strong> - Click “Generate token” at the bottom - <strong>Important</strong>: Copy the token immediately - you won’t see it again - Store it securely (see security practices below)</p>
</section>
<section id="token-security-best-practices" class="level2" data-number="9.2">
<h2 data-number="9.2" class="anchored" data-anchor-id="token-security-best-practices"><span class="header-section-number">9.2</span> Token Security Best Practices</h2>
<ul>
<li><strong>Never commit tokens to repositories</strong> - Use <code>.gitignore</code> to exclude files containing tokens</li>
<li><strong>Use environment variables</strong> - Store tokens in shell environment variables</li>
<li><strong>Set reasonable expiration dates</strong> - Use 30-90 day expiration for security</li>
<li><strong>Revoke unused tokens</strong> - Clean up tokens when no longer needed</li>
<li><strong>Consider GitHub CLI</strong> - Use <code>gh auth login</code> for easier management</li>
<li><strong>Monitor token usage</strong> - Check GitHub Settings → Developer settings → Personal access tokens for activity</li>
</ul>
</section>
<section id="alternative-using-github-cli" class="level2" data-number="9.3">
<h2 data-number="9.3" class="anchored" data-anchor-id="alternative-using-github-cli"><span class="header-section-number">9.3</span> Alternative: Using GitHub CLI</h2>
<p>For simpler token management, consider using GitHub CLI instead of manual tokens:</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install and authenticate (handles tokens)</span></span>
<span id="cb24-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> auth login <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--scopes</span> write:packages,read:packages,repo</span>
<span id="cb24-3"></span>
<span id="cb24-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Login to container registry (works with gh auth)</span></span>
<span id="cb24-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> auth token<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> login ghcr.io <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb24-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> api user <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--jq</span> .login<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--password-stdin</span></span></code></pre></div>
</section>
<section id="troubleshooting-common-issues-1" class="level2" data-number="9.4">
<h2 data-number="9.4" class="anchored" data-anchor-id="troubleshooting-common-issues-1"><span class="header-section-number">9.4</span> Troubleshooting Common Issues</h2>
<p><strong>“permission_denied: The token provided does not match expected scopes”</strong> - Verify your token includes <code>write:packages</code> and <code>read:packages</code> scopes - For private repositories, ensure <code>repo</code> scope is also selected - Create a new token with correct permissions if needed</p>
<p><strong>Token not recognized:</strong> - Ensure token is properly exported: <code>export GITHUB_TOKEN=your_token_here</code> - Verify token hasn’t expired - Check that you’re using the full token (starts with <code>ghp_</code>) 6. Horst, A.M., Hill, A.P., &amp; Gorman, K.B. (2020). palmerpenguins: Palmer Archipelago (Antarctica) penguin data. R package version 0.1.0. https://allisonhorst.github.io/palmerpenguins/ 7. Marwick, B. (2016). Computational reproducibility in archaeological research: Basic principles and a case study of their implementation. <em>Journal of Archaeological Method and Theory</em>, 24(2), 424-473.</p>
</section>
</section>
<section id="appendix-b-comprehensive-test-suite" class="level1 unnumbered">
<h1 class="unnumbered">Appendix B: Comprehensive Test Suite</h1>
<p>This appendix provides a set of tests that can be used to validate the Palmer Penguins analysis. These tests demonstrate best practices for data analysis testing and can be adapted for other projects.</p>
<section id="test-file-teststestthattest-comprehensive-analysis.r" class="level2" data-number="9.5">
<h2 data-number="9.5" class="anchored" data-anchor-id="test-file-teststestthattest-comprehensive-analysis.r"><span class="header-section-number">9.5</span> Test File: <code>tests/testthat/test-comprehensive-analysis.R</code></h2>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(testthat)</span>
<span id="cb25-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(palmerpenguins)</span>
<span id="cb25-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb25-4"></span>
<span id="cb25-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test 1: Data Availability and Basic Structure</span></span>
<span id="cb25-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generic application: Verify your primary dataset loads correctly and has </span></span>
<span id="cb25-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># expected dimensions</span></span>
<span id="cb25-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Catches: Package loading issues, file path problems, corrupted data files</span></span>
<span id="cb25-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test_that</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Palmer Penguins dataset is available and has correct structure"</span>, </span>
<span id="cb25-10">          {</span>
<span id="cb25-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_true</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exists</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"penguins"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">where =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"package:palmerpenguins"</span>))</span>
<span id="cb25-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_s3_class</span>(palmerpenguins<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>penguins, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data.frame"</span>)</span>
<span id="cb25-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_equal</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(palmerpenguins<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>penguins), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adapt: Set expected </span></span>
<span id="cb25-14">                                                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># column count</span></span>
<span id="cb25-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_gt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(palmerpenguins<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>penguins), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adapt: Set minimum </span></span>
<span id="cb25-16">                                                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># row threshold</span></span>
<span id="cb25-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_equal</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(palmerpenguins<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>penguins), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">344</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adapt: Set exact </span></span>
<span id="cb25-18">                                                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># expected count </span></span>
<span id="cb25-19">                                                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if known</span></span>
<span id="cb25-20">})</span>
<span id="cb25-21"></span>
<span id="cb25-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test 2: Required Columns Exist with Correct Types</span></span>
<span id="cb25-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generic application: Ensure your analysis depends on columns that </span></span>
<span id="cb25-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># actually </span></span>
<span id="cb25-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># exist with correct types</span></span>
<span id="cb25-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Catches: Column name changes, type coercion issues, CSV import problems</span></span>
<span id="cb25-27"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test_that</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dataset contains required columns with expected data types"</span>, {</span>
<span id="cb25-28">  df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> palmerpenguins<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>penguins</span>
<span id="cb25-29">  </span>
<span id="cb25-30">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check column existence - Adapt: List columns your analysis requires</span></span>
<span id="cb25-31">  required_cols <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"island"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>, </span>
<span id="cb25-32">                     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_depth_mm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"flipper_length_mm"</span>, </span>
<span id="cb25-33">                     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"body_mass_g"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sex"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"year"</span>)</span>
<span id="cb25-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_true</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all</span>(required_cols <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(df)))</span>
<span id="cb25-35">  </span>
<span id="cb25-36">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check data types - Adapt: Verify types match your analysis </span></span>
<span id="cb25-37">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># expectations</span></span>
<span id="cb25-38">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_type</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>species, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"integer"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Factor stored as integer</span></span>
<span id="cb25-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_type</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bill_length_mm, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"double"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Continuous measurements</span></span>
<span id="cb25-40">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_type</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>flipper_length_mm, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"integer"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Discrete measurements</span></span>
<span id="cb25-41">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_type</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>body_mass_g, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"integer"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Integer measurements</span></span>
<span id="cb25-42">})</span>
<span id="cb25-43"></span>
<span id="cb25-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test 3: Categorical Variables Have Expected Levels</span></span>
<span id="cb25-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generic application: Verify factor levels for categorical variables used</span></span>
<span id="cb25-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># in </span></span>
<span id="cb25-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># analysis</span></span>
<span id="cb25-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Catches: Missing categories, typos in factor levels, data encoding issues</span></span>
<span id="cb25-49"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test_that</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Species factor has expected levels"</span>, {</span>
<span id="cb25-50">  species_levels <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">levels</span>(palmerpenguins<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>penguins<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>species)</span>
<span id="cb25-51">  expected_species <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Adelie"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Chinstrap"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gentoo"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adapt: Your </span></span>
<span id="cb25-52">                                                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># expected </span></span>
<span id="cb25-53">                                                          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># categories</span></span>
<span id="cb25-54">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_equal</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(species_levels), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(expected_species))</span>
<span id="cb25-55">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_equal</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(species_levels), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adapt: Expected number of </span></span>
<span id="cb25-56">                                           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># categories</span></span>
<span id="cb25-57">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For other datasets: Test treatment groups, regions, product types, etc.</span></span>
<span id="cb25-58">})</span>
<span id="cb25-59"></span>
<span id="cb25-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test 4: Data Value Ranges are Domain-Reasonable</span></span>
<span id="cb25-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generic application: Verify numeric values fall within realistic ranges</span></span>
<span id="cb25-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for </span></span>
<span id="cb25-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># your domain</span></span>
<span id="cb25-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Catches: Data entry errors, unit conversion mistakes, outliers from </span></span>
<span id="cb25-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># measurement errors</span></span>
<span id="cb25-66"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test_that</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Measurement values fall within reasonable biological ranges"</span>, {</span>
<span id="cb25-67">  df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> palmerpenguins<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>penguins</span>
<span id="cb25-68">  </span>
<span id="cb25-69">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Bill length - Adapt: Set realistic bounds for your numeric variables</span></span>
<span id="cb25-70">  bill_lengths <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bill_length_mm[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bill_length_mm)]</span>
<span id="cb25-71">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_true</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all</span>(bill_lengths <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> bill_lengths <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">70</span>))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Penguin-</span></span>
<span id="cb25-72">                                                              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># specific </span></span>
<span id="cb25-73">                                                              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># range</span></span>
<span id="cb25-74">  </span>
<span id="cb25-75">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Flipper length - Examples for other domains:</span></span>
<span id="cb25-76">  flipper_lengths <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>flipper_length_mm[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>flipper_length_mm)]</span>
<span id="cb25-77">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_true</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all</span>(flipper_lengths <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> flipper_lengths <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>))</span>
<span id="cb25-78">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Finance: stock prices &gt; 0, percentages 0-100</span></span>
<span id="cb25-79">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Health: age 0-120, BMI 10-80, blood pressure 50-300</span></span>
<span id="cb25-80">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Engineering: temperatures -273+°C, pressures &gt; 0</span></span>
<span id="cb25-81">  </span>
<span id="cb25-82">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Body mass</span></span>
<span id="cb25-83">  body_masses <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>body_mass_g[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>body_mass_g)]</span>
<span id="cb25-84">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_true</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all</span>(body_masses <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> body_masses <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7000</span>))</span>
<span id="cb25-85">})</span>
<span id="cb25-86"></span>
<span id="cb25-87"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test 5: Missing Data Patterns are as Expected</span></span>
<span id="cb25-88"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generic application: Verify missingness patterns match your data </span></span>
<span id="cb25-89"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># collection </span></span>
<span id="cb25-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># expectations</span></span>
<span id="cb25-91"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Catches: Unexpected data loss, systematic missingness, data pipeline </span></span>
<span id="cb25-92"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># failures</span></span>
<span id="cb25-93"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test_that</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Missing data follows expected patterns"</span>, {</span>
<span id="cb25-94">  df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> palmerpenguins<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>penguins</span>
<span id="cb25-95">  </span>
<span id="cb25-96">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Total missing values should be manageable</span></span>
<span id="cb25-97">  total_na <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(df))</span>
<span id="cb25-98">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_lt</span>(total_na, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(df))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adapt: Set acceptable threshold for </span></span>
<span id="cb25-99">                                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># missing </span></span>
<span id="cb25-100">                                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># data</span></span>
<span id="cb25-101">  </span>
<span id="cb25-102">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Some variables may have expected missingness</span></span>
<span id="cb25-103">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_gt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sex)), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sex determination sometimes difficult</span></span>
<span id="cb25-104">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adapt examples: Optional survey questions, historical data gaps, sensor </span></span>
<span id="cb25-105">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># failures</span></span>
<span id="cb25-106">  </span>
<span id="cb25-107">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Critical variables should be complete</span></span>
<span id="cb25-108">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_equal</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>species)), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Primary identifier must be </span></span>
<span id="cb25-109">                                           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># complete</span></span>
<span id="cb25-110">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adapt: ID columns, primary keys, required fields should have no NAs</span></span>
<span id="cb25-111">})</span>
<span id="cb25-112"></span>
<span id="cb25-113"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test 6: Expected Statistical Relationships Hold</span></span>
<span id="cb25-114"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generic application: Test known relationships between variables in your </span></span>
<span id="cb25-115"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># domain</span></span>
<span id="cb25-116"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Catches: Data corruption, encoding errors, units mix-ups that break known </span></span>
<span id="cb25-117"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># patterns</span></span>
<span id="cb25-118"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test_that</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Expected correlations between measurements exist"</span>, {</span>
<span id="cb25-119">  df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> palmerpenguins<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>penguins</span>
<span id="cb25-120">  </span>
<span id="cb25-121">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test strong expected relationships</span></span>
<span id="cb25-122">  correlation <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cor</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>flipper_length_mm, df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>body_mass_g, </span>
<span id="cb25-123">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">use =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"complete.obs"</span>)</span>
<span id="cb25-124">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_gt</span>(correlation, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Strong positive correlation expected</span></span>
<span id="cb25-125">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adapt examples: height vs weight, price vs quality, experience vs salary</span></span>
<span id="cb25-126">  </span>
<span id="cb25-127">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test weaker but expected relationships</span></span>
<span id="cb25-128">  bill_cor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cor</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bill_length_mm, df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bill_depth_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">use =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"complete.obs"</span>)</span>
<span id="cb25-129">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_gt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(bill_cor), <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Some relationship should exist</span></span>
<span id="cb25-130">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adapt: Education vs income, advertising vs sales, temperature vs </span></span>
<span id="cb25-131">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># energy use</span></span>
<span id="cb25-132">})</span>
<span id="cb25-133"></span>
<span id="cb25-134"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test 7: Visualization Functions Work Correctly</span></span>
<span id="cb25-135"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generic application: Ensure your key plots and visualizations can be </span></span>
<span id="cb25-136"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generated</span></span>
<span id="cb25-137"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Catches: Missing aesthetic mappings, incompatible data types, package </span></span>
<span id="cb25-138"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># conflicts</span></span>
<span id="cb25-139"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test_that</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Basic plots can be generated without errors"</span>, {</span>
<span id="cb25-140">  df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> palmerpenguins<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>penguins</span>
<span id="cb25-141">  </span>
<span id="cb25-142">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test basic plot creation without errors</span></span>
<span id="cb25-143">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_no_error</span>({</span>
<span id="cb25-144">    p1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> flipper_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> bill_length_mm)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb25-145">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb25-146">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()</span>
<span id="cb25-147">  })</span>
<span id="cb25-148">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adapt: Test your key plot types - histograms, boxplots, time series,</span></span>
<span id="cb25-149">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># etc.</span></span>
<span id="cb25-150">  </span>
<span id="cb25-151">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test that plot object is properly created</span></span>
<span id="cb25-152">  p1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(df, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> flipper_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> bill_length_mm)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb25-153">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>()</span>
<span id="cb25-154">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_s3_class</span>(p1, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ggplot"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adapt: Check for your plotting </span></span>
<span id="cb25-155">                                   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># framework objects</span></span>
<span id="cb25-156">})</span>
<span id="cb25-157"></span>
<span id="cb25-158"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test 8: Data Filtering and Subsetting Work Correctly</span></span>
<span id="cb25-159"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generic application: Verify data manipulation operations produce expected</span></span>
<span id="cb25-160"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># results</span></span>
<span id="cb25-161"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Catches: Logic errors in filtering, unexpected factor behaviors, </span></span>
<span id="cb25-162"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># indexing mistakes</span></span>
<span id="cb25-163"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test_that</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Data can be properly filtered and subsetted"</span>, {</span>
<span id="cb25-164">  df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> palmerpenguins<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>penguins</span>
<span id="cb25-165">  </span>
<span id="cb25-166">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test categorical filtering</span></span>
<span id="cb25-167">  adelie_penguins <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df[df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>species <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Adelie"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>species), ]</span>
<span id="cb25-168">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_gt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(adelie_penguins), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adapt: Expected subset size</span></span>
<span id="cb25-169">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_true</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all</span>(adelie_penguins<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>species <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Adelie"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb25-170">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adapt: Filter by treatment groups, regions, time periods, etc.</span></span>
<span id="cb25-171">  </span>
<span id="cb25-172">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test missing data handling</span></span>
<span id="cb25-173">  complete_cases <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">complete.cases</span>(df), ]</span>
<span id="cb25-174">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_lt</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(complete_cases), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(df))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Some rows should be removed</span></span>
<span id="cb25-175">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_equal</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(complete_cases)), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># No NAs remaining</span></span>
<span id="cb25-176">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adapt: Test your specific data cleaning operations</span></span>
<span id="cb25-177">})</span>
<span id="cb25-178"></span>
<span id="cb25-179"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test 9: Summary Statistics are Reasonable</span></span>
<span id="cb25-180"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generic application: Verify computed statistics match domain knowledge </span></span>
<span id="cb25-181"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># expectations</span></span>
<span id="cb25-182"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Catches: Calculation errors, unit mistakes, algorithm bugs, extreme </span></span>
<span id="cb25-183"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># outliers</span></span>
<span id="cb25-184"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test_that</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Summary statistics fall within expected ranges"</span>, {</span>
<span id="cb25-185">  df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> palmerpenguins<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>penguins</span>
<span id="cb25-186">  </span>
<span id="cb25-187">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test means fall within expected ranges</span></span>
<span id="cb25-188">  mean_flipper <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>flipper_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb25-189">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_gt</span>(mean_flipper, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">190</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adapt: Set realistic bounds for your </span></span>
<span id="cb25-190">                                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># variables</span></span>
<span id="cb25-191">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_lt</span>(mean_flipper, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">210</span>)</span>
<span id="cb25-192">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Examples: Average customer age 20-80, mean salary $30k-200k, etc.</span></span>
<span id="cb25-193">  </span>
<span id="cb25-194">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test other central tendencies</span></span>
<span id="cb25-195">  mean_mass <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>body_mass_g, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb25-196">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_gt</span>(mean_mass, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4000</span>)</span>
<span id="cb25-197">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_lt</span>(mean_mass, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>)</span>
<span id="cb25-198">  </span>
<span id="cb25-199">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test variability measures are reasonable</span></span>
<span id="cb25-200">  sd_flipper <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sd</span>(df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>flipper_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb25-201">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_gt</span>(sd_flipper, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Not zero variance</span></span>
<span id="cb25-202">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_lt</span>(sd_flipper, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Not excessive variance</span></span>
<span id="cb25-203">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adapt: CV should be &lt;50%, SD should be meaningful relative to mean</span></span>
<span id="cb25-204">})</span>
<span id="cb25-205"></span>
<span id="cb25-206"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test 10: Complete Analysis Pipeline Integration Test</span></span>
<span id="cb25-207"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generic application: Test your entire analysis workflow runs without </span></span>
<span id="cb25-208"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># errors</span></span>
<span id="cb25-209"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Catches: Pipeline breaks, dependency issues, function interaction problems</span></span>
<span id="cb25-210"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test_that</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Complete analysis pipeline executes successfully"</span>, {</span>
<span id="cb25-211">  df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> palmerpenguins<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>penguins</span>
<span id="cb25-212">  </span>
<span id="cb25-213">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test that full workflow executes without errors</span></span>
<span id="cb25-214">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_no_error</span>({</span>
<span id="cb25-215">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Data preparation step</span></span>
<span id="cb25-216">    clean_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">complete.cases</span>(df[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"flipper_length_mm"</span>, </span>
<span id="cb25-217">                                       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>)]), ]</span>
<span id="cb25-218">    </span>
<span id="cb25-219">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Statistical analysis step - Adapt: Your key analyses</span></span>
<span id="cb25-220">    correlation_result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cor.test</span>(clean_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>flipper_length_mm, </span>
<span id="cb25-221">                                   clean_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bill_length_mm)</span>
<span id="cb25-222">    </span>
<span id="cb25-223">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Visualization step - Adapt: Your key plots</span></span>
<span id="cb25-224">    plot_result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(clean_df, </span>
<span id="cb25-225">                          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> flipper_length_mm, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> bill_length_mm)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb25-226">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb25-227">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_smooth</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lm"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb25-228">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb25-229">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Flipper Length vs. Bill Length"</span>,</span>
<span id="cb25-230">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Flipper Length (mm)"</span>,</span>
<span id="cb25-231">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Bill Length (mm)"</span>)</span>
<span id="cb25-232">  })</span>
<span id="cb25-233">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adapt: Add model fitting, prediction, reporting steps as needed</span></span>
<span id="cb25-234">  </span>
<span id="cb25-235">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Verify analysis produces meaningful results</span></span>
<span id="cb25-236">  clean_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">complete.cases</span>(df[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"flipper_length_mm"</span>, </span>
<span id="cb25-237">                                     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bill_length_mm"</span>)]), ]</span>
<span id="cb25-238">  correlation_result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cor.test</span>(clean_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>flipper_length_mm, </span>
<span id="cb25-239">                                 clean_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bill_length_mm)</span>
<span id="cb25-240">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_lt</span>(correlation_result<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>p.value, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Significant result expected</span></span>
<span id="cb25-241">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adapt: Check model R², prediction accuracy, convergence, etc.</span></span>
<span id="cb25-242">})</span></code></pre></div>
</section>
<section id="running-the-tests" class="level2" data-number="9.6">
<h2 data-number="9.6" class="anchored" data-anchor-id="running-the-tests"><span class="header-section-number">9.6</span> Running the Tests</h2>
<p>To run all tests in your project:</p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run all tests</span></span>
<span id="cb26-2">testthat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test_dir</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tests/testthat"</span>)</span>
<span id="cb26-3"></span>
<span id="cb26-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run specific test file</span></span>
<span id="cb26-5">testthat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test_file</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tests/testthat/test-comprehensive-analysis.R"</span>)</span>
<span id="cb26-6"></span>
<span id="cb26-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run tests with detailed output</span></span>
<span id="cb26-8">testthat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test_dir</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tests/testthat"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reporter =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"detailed"</span>)</span></code></pre></div>
</section>
<section id="test-categories-explained" class="level2" data-number="9.7">
<h2 data-number="9.7" class="anchored" data-anchor-id="test-categories-explained"><span class="header-section-number">9.7</span> Test Categories Explained</h2>
<p><strong>Data Validation Tests (1-5)</strong>: Verify data structure, types, ranges, and missing patterns <strong>Statistical Tests (6)</strong>: Confirm expected relationships in the data <strong>Functional Tests (7-8)</strong>: Ensure analysis functions work correctly <strong>Sanity Tests (9)</strong>: Check that summary statistics are reasonable <strong>Integration Tests (10)</strong>: Verify the complete analysis pipeline works end-to-end</p>
<p>These tests provide coverage for a data analysis project and can catch issues ranging from data corruption to environment setup problems.</p>
</section>
</section>
<section id="appendix-c-directory-structure" class="level1 unnumbered">
<h1 class="unnumbered">Appendix C: Directory Structure</h1>
<p>The zzrrtools setup creates the following directory structure:</p>
<pre><code>project/
├── DESCRIPTION              # Package metadata and dependencies
├── LICENSE                  # Project license  
├── README.md               # Project documentation
├── project.Rproj           # R project file
├── renv.lock               # Package dependency lockfile
├── setup_renv.R            # Automated renv setup script
├── Dockerfile              # Container specification
├── docker-compose.yml      # Multi-service Docker setup
├── Makefile                # Build automation (native R + Docker)
├── .Rprofile               # R startup configuration
├── .dockerignore           # Docker build exclusions
├── ZZRRTOOLS_USER_GUIDE.md # Comprehensive user documentation
├── .zshrc_docker           # zsh configuration for Docker container
├── .github/workflows/      # Multiple GitHub Actions workflows
│   ├── docker-ci.yml       # Docker-based CI/CD
│   ├── r-package.yml       # R package checking
│   └── render-paper.yml    # Automated paper rendering
├── check_renv_for_commit.R # renv consistency validation script
├── R/                      # R functions and utilities
│   └── utils.R             # Pre-built utility functions
├── man/                    # Generated function documentation
├── data/                   # Comprehensive data organization
│   ├── raw_data/           # Original, unmodified data
│   ├── derived_data/       # Processed/cleaned data
│   ├── metadata/           # Data documentation
│   ├── validation/         # Data validation scripts
│   └── external_data/      # Third-party datasets
├── analysis/               # Research analysis
│   ├── paper/              # Manuscript with PDF output
│   ├── figures/            # Generated plots and charts
│   ├── tables/             # Generated tables
│   └── templates/          # Document templates and CSL styles
├── scripts/                # Working R scripts and code snippets
├── tests/testthat/         # Unit tests and validation
├── vignettes/              # Package vignettes and tutorials
├── inst/doc/               # Package documentation
├── docs/                   # Additional documentation
├── archive/                # Archived files and old versions
└── [a,n,f,t,s,m,e,o,c]    # Symbolic links for easy navigation</code></pre>
<section id="key-features-explained" class="level2" data-number="9.8">
<h2 data-number="9.8" class="anchored" data-anchor-id="key-features-explained"><span class="header-section-number">9.8</span> Key Features Explained:</h2>
<p><strong>Data Organization:</strong> - <strong>raw_data/</strong>: Original, unmodified datasets as received - <strong>derived_data/</strong>: Processed, cleaned, or transformed data - <strong>metadata/</strong>: Documentation about data sources, collection methods, variables - <strong>validation/</strong>: Scripts that verify data integrity and quality - <strong>external_data/</strong>: Third-party datasets or reference data</p>
<p><strong>Multiple Output Formats:</strong> - <strong>figures/</strong>: Generated plots, charts, and visualizations - <strong>tables/</strong>: Generated summary tables and statistical results - <strong>paper/</strong>: Main manuscript and analysis documents - <strong>templates/</strong>: Document templates and citation style files</p>
<p><strong>R Package Structure:</strong> - <strong>R/</strong>: Custom functions and utilities - <strong>man/</strong>: Generated documentation for R functions - <strong>tests/testthat/</strong>: Unit tests and validation scripts - <strong>vignettes/</strong>: Long-form documentation and tutorials - <strong>DESCRIPTION</strong>: Package metadata and dependency specifications</p>
<p><strong>Docker Orchestration:</strong> - <strong>Dockerfile</strong>: Main container specification - <strong>docker-compose.yml</strong>: Multi-service development environments - <strong>Makefile</strong>: Build automation supporting both native R and Docker workflows</p>
<p><strong>Workflows:</strong> - <strong>.github/workflows/</strong>: GitHub Actions for testing, checking, and rendering - <strong>setup_renv.R</strong>: Package environment setup - <strong>RRTOOLS_USER_GUIDE.md</strong>: Usage documentation</p>
<p><strong>Navigation Shortcuts:</strong> - <strong>Symbolic links</strong>: Single-letter shortcuts for easy navigation - <code>a</code> → analysis/, <code>n</code> → analysis/, <code>f</code> → figures/ - <code>t</code> → tests/, <code>s</code> → scripts/, <code>m</code> → man/ - <code>e</code> → external_data/, <code>o</code> → output/, <code>c</code> → cache/</p>
<p>This structure supports research projects while maintaining clear organization and following established research compendium principles.</p>
</section>
</section>
<section id="appendix-d-docker-workflow-options" class="level1 unnumbered">
<h1 class="unnumbered">Appendix D: Docker Workflow Options</h1>
<p>The zzrrtools setup provides a multi-service Docker architecture optimized for collaborative shell-based development workflows.</p>
<section id="multi-service-docker-architecture" class="level2" data-number="9.9">
<h2 data-number="9.9" class="anchored" data-anchor-id="multi-service-docker-architecture"><span class="header-section-number">9.9</span> Multi-Service Docker Architecture</h2>
<p>zzrrtools creates specialized Docker environments for different development tasks:</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Build the containerized research environment</span></span>
<span id="cb28-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> docker-build</span>
<span id="cb28-3"></span>
<span id="cb28-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Interactive R console (primary development environment)</span></span>
<span id="cb28-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> docker-r</span>
<span id="cb28-6"></span>
<span id="cb28-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Development shell with personal dotfiles</span></span>
<span id="cb28-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> docker-zsh</span>
<span id="cb28-9"></span>
<span id="cb28-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Interactive bash session</span></span>
<span id="cb28-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> docker-bash</span>
<span id="cb28-12"></span>
<span id="cb28-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># RStudio Server (web-based IDE)</span></span>
<span id="cb28-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> docker-rstudio    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Access at http://localhost:8787</span></span>
<span id="cb28-15"></span>
<span id="cb28-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Render research paper</span></span>
<span id="cb28-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> docker-render</span>
<span id="cb28-18"></span>
<span id="cb28-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run tests</span></span>
<span id="cb28-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> docker-test</span>
<span id="cb28-21"></span>
<span id="cb28-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Package checking</span></span>
<span id="cb28-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> docker-check</span>
<span id="cb28-24"></span>
<span id="cb28-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># renv dependency validation</span></span>
<span id="cb28-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> docker-check-renv-fix</span>
<span id="cb28-27"></span>
<span id="cb28-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># See all available commands</span></span>
<span id="cb28-29"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> help</span></code></pre></div>
<p><strong>Collaborative Benefits:</strong> - <strong>Zero-setup onboarding</strong>: Team members run identical commands - <strong>Consistent environments</strong>: Same container across all developer machines - <strong>ARM64/Apple Silicon support</strong>: Platform-specific flags ensure compatibility - <strong>Shell-optimized workflows</strong>: Command-line development with rich tooling - <strong>Personal customization</strong>: Dotfiles integration for familiar environments - <strong>Web-based development</strong>: Optional RStudio Server for GUI-based workflows</p>
</section>
<section id="option-2-docker-compose-services" class="level2" data-number="9.10">
<h2 data-number="9.10" class="anchored" data-anchor-id="option-2-docker-compose-services"><span class="header-section-number">9.10</span> Option 2: Docker Compose Services</h2>
<p>Docker Compose orchestrates multiple container configurations:</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb29-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Interactive R session</span></span>
<span id="cb29-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker-compose</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rm</span> r-session</span>
<span id="cb29-3"></span>
<span id="cb29-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Bash shell access</span></span>
<span id="cb29-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker-compose</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rm</span> bash</span>
<span id="cb29-6"></span>
<span id="cb29-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Automated paper rendering</span></span>
<span id="cb29-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker-compose</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rm</span> research</span>
<span id="cb29-9"></span>
<span id="cb29-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Package testing</span></span>
<span id="cb29-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker-compose</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rm</span> test</span>
<span id="cb29-12"></span>
<span id="cb29-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Package checking</span></span>
<span id="cb29-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker-compose</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rm</span> check</span></code></pre></div>
<p><strong>Docker Compose Configuration Example:</strong></p>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb30-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">services</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb30-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">r-session</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb30-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> .</span></span>
<span id="cb30-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">volumes</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb30-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> .:/home/analyst/project</span></span>
<span id="cb30-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ./cache:/home/analyst/cache</span></span>
<span id="cb30-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">working_dir</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> /home/analyst/project</span></span>
<span id="cb30-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb30-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bash</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb30-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> .</span></span>
<span id="cb30-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">volumes</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb30-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> .:/home/analyst/project</span></span>
<span id="cb30-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">working_dir</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> /home/analyst/project</span></span>
<span id="cb30-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">entrypoint</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/bin/bash"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb30-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb30-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">research</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb30-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> .</span></span>
<span id="cb30-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">volumes</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb30-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> .:/home/analyst/project</span></span>
<span id="cb30-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ./analysis/figures:/home/analyst/output</span></span>
<span id="cb30-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">working_dir</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> /home/analyst/project</span></span>
<span id="cb30-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">command</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"R"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-e"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rmarkdown::render('analysis/paper/paper.Rmd')"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span></code></pre></div>
<p><strong>Benefits:</strong> - <strong>Service setup</strong>: Multiple predefined container configurations - <strong>Volume management</strong>: Consistent volume mounting across services - <strong>Environment isolation</strong>: Different services for different purposes - <strong>Parallel execution</strong>: Can run multiple services simultaneously</p>
</section>
<section id="option-3-direct-docker-commands" class="level2" data-number="9.11">
<h2 data-number="9.11" class="anchored" data-anchor-id="option-3-direct-docker-commands"><span class="header-section-number">9.11</span> Option 3: Direct Docker Commands</h2>
<p>For maximum control, use Docker commands directly:</p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb31-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Basic interactive session</span></span>
<span id="cb31-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-it</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">pwd</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">:/home/analyst/project"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb31-3">  ghcr.io/username/penguins_analysis:v1.0</span>
<span id="cb31-4"></span>
<span id="cb31-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Interactive session with mounted cache</span></span>
<span id="cb31-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-it</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb31-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">pwd</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">:/home/analyst/project"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb31-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">pwd</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/cache:/home/analyst/cache"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb31-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-w</span> /home/analyst/project <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb31-10">  ghcr.io/username/penguins_analysis:v1.0</span>
<span id="cb31-11"></span>
<span id="cb31-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Render research paper</span></span>
<span id="cb31-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rm</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb31-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">pwd</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">:/home/analyst/project"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb31-15">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">pwd</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/analysis/figures:/home/analyst/output"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb31-16">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-w</span> /home/analyst/project <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb31-17">  ghcr.io/username/penguins_analysis:v1.0 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb31-18">  R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rmarkdown::render('analysis/paper/paper.Rmd')"</span></span>
<span id="cb31-19"></span>
<span id="cb31-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run specific tests</span></span>
<span id="cb31-21"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rm</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb31-22">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">pwd</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">:/home/analyst/project"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb31-23">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-w</span> /home/analyst/project <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb31-24">  ghcr.io/username/penguins_analysis:v1.0 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb31-25">  R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"testthat::test_file('tests/testthat/test-data-integrity.R')"</span></span>
<span id="cb31-26"></span>
<span id="cb31-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Interactive bash session</span></span>
<span id="cb31-28"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-it</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb31-29">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">pwd</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">:/home/analyst/project"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb31-30">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-w</span> /home/analyst/project <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb31-31">  ghcr.io/username/penguins_analysis:v1.0 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb31-32">  /bin/bash</span></code></pre></div>
<p><strong>Common Docker Flags Explained:</strong> - <code>--rm</code>: Remove container when it exits - <code>-it</code>: Interactive terminal session - <code>-v</code>: Mount volume (host:container) - <code>-w</code>: Set working directory inside container - <code>--entrypoint</code>: Override default command</p>
<p><strong>Benefits:</strong> - <strong>Full flexibility</strong>: Complete control over container configuration - <strong>Educational</strong>: Shows exactly what’s happening under the hood - <strong>Troubleshooting</strong>: Easier to debug when you see all options - <strong>Portability</strong>: Commands work on any Docker installation</p>
</section>
<section id="volume-mounting-strategies" class="level2" data-number="9.12">
<h2 data-number="9.12" class="anchored" data-anchor-id="volume-mounting-strategies"><span class="header-section-number">9.12</span> Volume Mounting Strategies</h2>
<p><strong>Project Files:</strong></p>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Mount entire project directory</span></span>
<span id="cb32-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-v</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">pwd</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">:/home/analyst/project"</span></span></code></pre></div>
<p><strong>Output Separation:</strong></p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb33-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Separate outputs from source</span></span>
<span id="cb33-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-v</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">pwd</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/analysis/figures:/home/analyst/output"</span></span></code></pre></div>
<p><strong>Cache Persistence:</strong></p>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb34-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Persistent package cache across sessions</span></span>
<span id="cb34-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-v</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">pwd</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/cache:/home/analyst/cache"</span></span></code></pre></div>
<p><strong>Read-only Source:</strong></p>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb35-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Protect source files from modification</span></span>
<span id="cb35-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-v</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">pwd</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">:/home/analyst/project:ro"</span></span></code></pre></div>
</section>
<section id="choosing-the-right-approach" class="level2" data-number="9.13">
<h2 data-number="9.13" class="anchored" data-anchor-id="choosing-the-right-approach"><span class="header-section-number">9.13</span> Choosing the Right Approach</h2>
<p><strong>Use Make Commands When:</strong> - You want simplicity and consistency - You’re new to Docker - You’re focusing on analysis rather than infrastructure</p>
<p><strong>Use Docker Compose When:</strong> - You need multiple service configurations - You’re working with a team using standardized environments - You want to define complex volume and networking setups</p>
<p><strong>Use Direct Commands When:</strong> - You need maximum flexibility - You’re troubleshooting container issues - You’re creating custom workflows not covered by Make targets</p>
<p>All three approaches can be used together in the same project, depending on the specific task and user preferences.</p>
</section>
</section>
<section id="appendix-e-github-actions-cicd-setup" class="level1 unnumbered">
<h1 class="unnumbered">Appendix E: GitHub Actions CI/CD Setup</h1>
<p>GitHub Actions provides testing and deployment for research compendia. This appendix covers CI/CD setup for reproducible research workflows.</p>
<section id="understanding-github-actions-for-research" class="level2" data-number="9.14">
<h2 data-number="9.14" class="anchored" data-anchor-id="understanding-github-actions-for-research"><span class="header-section-number">9.14</span> Understanding GitHub Actions for Research</h2>
<p><strong>What is CI/CD for Research?</strong></p>
<p>Continuous Integration/Continuous Deployment (CI/CD) tests your research code whenever changes are made. For research compendia, this means:</p>
<ul>
<li><strong>Testing</strong>: Every push triggers your test suite</li>
<li><strong>Environment consistency</strong>: Tests run in identical Docker environments</li>
<li><strong>Early error detection</strong>: Problems caught during development</li>
<li><strong>Collaboration confidence</strong>: Team members see if changes break functionality</li>
<li><strong>Reproducibility validation</strong>: Ensures analysis works across different systems</li>
</ul>
</section>
<section id="step-by-step-setup" class="level2" data-number="9.15">
<h2 data-number="9.15" class="anchored" data-anchor-id="step-by-step-setup"><span class="header-section-number">9.15</span> Step-by-Step Setup</h2>
<section id="step-1-create-workflow-directory" class="level3" data-number="9.15.1">
<h3 data-number="9.15.1" class="anchored" data-anchor-id="step-1-create-workflow-directory"><span class="header-section-number">9.15.1</span> Step 1: Create Workflow Directory</h3>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb36-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the GitHub Actions directory</span></span>
<span id="cb36-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> .github/workflows</span></code></pre></div>
</section>
<section id="step-2-docker-based-ci-workflow-with-renv-validation" class="level3" data-number="9.15.2">
<h3 data-number="9.15.2" class="anchored" data-anchor-id="step-2-docker-based-ci-workflow-with-renv-validation"><span class="header-section-number">9.15.2</span> Step 2: Docker-based CI Workflow with renv Validation</h3>
<p>Create <code>.github/workflows/docker-ci.yml</code>:</p>
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb37-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Docker CI with renv Validation</span></span>
<span id="cb37-2"></span>
<span id="cb37-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">on</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb37-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb37-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">branches</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> main</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> master </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb37-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull_request</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb37-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">branches</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> main</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> master </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb37-8"></span>
<span id="cb37-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">jobs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb37-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build-and-test</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb37-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runs-on</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ubuntu-latest</span></span>
<span id="cb37-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb37-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb37-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Checkout repository</span></span>
<span id="cb37-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> actions/checkout@v4</span></span>
<span id="cb37-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span></span>
<span id="cb37-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Set up R for renv validation</span></span>
<span id="cb37-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> r-lib/actions/setup-r@v2</span></span>
<span id="cb37-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb37-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">r-version</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'release'</span></span>
<span id="cb37-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span></span>
<span id="cb37-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Install renv for validation</span></span>
<span id="cb37-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">      run</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb37-24">        install.packages("renv")</span>
<span id="cb37-25"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shell</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Rscript {0}</span></span>
<span id="cb37-26"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span></span>
<span id="cb37-27"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Validate renv consistency before Docker build</span></span>
<span id="cb37-28"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">      run</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb37-29">        # Validate renv environment before building Docker image</span>
<span id="cb37-30">        Rscript check_renv_for_commit.R --fail-on-issues --quiet</span>
<span id="cb37-31"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span></span>
<span id="cb37-32"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Set up Docker Buildx</span></span>
<span id="cb37-33"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> docker/setup-buildx-action@v3</span></span>
<span id="cb37-34"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span></span>
<span id="cb37-35"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Extract R version from renv.lock</span></span>
<span id="cb37-36"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> r-version</span></span>
<span id="cb37-37"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">      run</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb37-38">        R_VERSION=$(Rscript -e "cat(renv::lockfile_read()\$R\$Version)")</span>
<span id="cb37-39">        echo "r-version=${R_VERSION}" &gt;&gt; $GITHUB_OUTPUT</span>
<span id="cb37-40"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span></span>
<span id="cb37-41"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Build Docker image</span></span>
<span id="cb37-42"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> docker/build-push-action@v5</span></span>
<span id="cb37-43"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb37-44"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">context</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> .</span></span>
<span id="cb37-45"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb37-46"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tags</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ github.repository }}:latest</span></span>
<span id="cb37-47"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">        build-args</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb37-48">          R_VERSION=${{ steps.r-version.outputs.r-version }}</span>
<span id="cb37-49"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cache-from</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> type=gha</span></span>
<span id="cb37-50"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cache-to</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> type=gha,mode=max</span></span>
<span id="cb37-51"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span></span>
<span id="cb37-52"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Run tests in container</span></span>
<span id="cb37-53"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">      run</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb37-54">        docker run --rm -v $PWD:/home/analyst/project \</span>
<span id="cb37-55">          ${{ github.repository }}:latest \</span>
<span id="cb37-56">          R -e "testthat::test_dir('tests/testthat')"</span>
<span id="cb37-57">          </span>
<span id="cb37-58"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Render research paper</span></span>
<span id="cb37-59"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">      run</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb37-60">        docker run --rm -v $PWD:/home/analyst/project \</span>
<span id="cb37-61">          -v $PWD/analysis/figures:/home/analyst/output \</span>
<span id="cb37-62">          ${{ github.repository }}:latest \</span>
<span id="cb37-63">          R -e "rmarkdown::render('analysis/paper/paper.Rmd')"</span>
<span id="cb37-64">          </span>
<span id="cb37-65"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Upload rendered paper</span></span>
<span id="cb37-66"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> actions/upload-artifact@v4</span></span>
<span id="cb37-67"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> success()</span></span>
<span id="cb37-68"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb37-69"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> research-paper</span></span>
<span id="cb37-70"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">path</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> analysis/paper/paper.pdf</span></span></code></pre></div>
</section>
<section id="step-3-r-package-check-workflow" class="level3" data-number="9.15.3">
<h3 data-number="9.15.3" class="anchored" data-anchor-id="step-3-r-package-check-workflow"><span class="header-section-number">9.15.3</span> Step 3: R Package Check Workflow</h3>
<p>Create <code>.github/workflows/r-package.yml</code>:</p>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb38-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> R Package Check</span></span>
<span id="cb38-2"></span>
<span id="cb38-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">on</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb38-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb38-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">branches</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> main</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> master </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb38-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull_request</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb38-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">branches</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> main</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> master </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb38-8"></span>
<span id="cb38-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">jobs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb38-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">R-CMD-check</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb38-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runs-on</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ matrix.config.os }}</span></span>
<span id="cb38-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb38-13"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ matrix.config.os }} (${{ matrix.config.r }})</span></span>
<span id="cb38-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb38-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strategy</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb38-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fail-fast</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb38-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb38-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">config</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb38-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">os</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ubuntu-latest</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">   </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">r</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'release'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb38-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">os</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> macOS-latest</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">r</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'release'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb38-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">os</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> windows-latest</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">r</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'release'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb38-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb38-23"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">env</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb38-24"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GITHUB_PAT</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ secrets.GITHUB_TOKEN }}</span></span>
<span id="cb38-25"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">R_KEEP_PKG_SOURCE</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">yes</span></span>
<span id="cb38-26"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb38-27"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb38-28"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> actions/checkout@v4</span></span>
<span id="cb38-29"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span></span>
<span id="cb38-30"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> r-lib/actions/setup-pandoc@v2</span></span>
<span id="cb38-31"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span></span>
<span id="cb38-32"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> r-lib/actions/setup-r@v2</span></span>
<span id="cb38-33"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb38-34"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">r-version</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ matrix.config.r }}</span></span>
<span id="cb38-35"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">http-user-agent</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ matrix.config.http-user-agent }}</span></span>
<span id="cb38-36"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use-public-rspm</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb38-37"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span></span>
<span id="cb38-38"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> r-lib/actions/setup-renv@v2</span></span>
<span id="cb38-39"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span></span>
<span id="cb38-40"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Install system dependencies</span></span>
<span id="cb38-41"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> runner.os == 'Linux'</span></span>
<span id="cb38-42"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">        run</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb38-43">          sudo apt-get update</span>
<span id="cb38-44">          sudo apt-get install -y \</span>
<span id="cb38-45">            libcurl4-openssl-dev \</span>
<span id="cb38-46">            libssl-dev \</span>
<span id="cb38-47">            libxml2-dev</span>
<span id="cb38-48">            </span>
<span id="cb38-49"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Validate renv consistency</span></span>
<span id="cb38-50"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">        run</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb38-51">          # Use the renv validation script included in the repository</span>
<span id="cb38-52">          Rscript check_renv_for_commit.R --fail-on-issues --quiet</span>
<span id="cb38-53">            </span>
<span id="cb38-54"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> r-lib/actions/check-r-package@v2</span></span>
<span id="cb38-55"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb38-56"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">upload-snapshots</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">true</span></span></code></pre></div>
</section>
<section id="step-4-automated-paper-rendering" class="level3" data-number="9.15.4">
<h3 data-number="9.15.4" class="anchored" data-anchor-id="step-4-automated-paper-rendering"><span class="header-section-number">9.15.4</span> Step 4: Automated Paper Rendering</h3>
<p>Create <code>.github/workflows/render-paper.yml</code>:</p>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb39-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Render Research Paper</span></span>
<span id="cb39-2"></span>
<span id="cb39-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">on</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">workflow_dispatch</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  # Manual trigger</span></span>
<span id="cb39-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">branches</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> main</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">,</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> master </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb39-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paths</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'analysis/paper/**'</span></span>
<span id="cb39-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'analysis/data/**'</span></span>
<span id="cb39-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'R/**'</span></span>
<span id="cb39-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'data/**'</span></span>
<span id="cb39-12"></span>
<span id="cb39-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">jobs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-14"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">render</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runs-on</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ubuntu-latest</span></span>
<span id="cb39-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb39-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Checkout repository</span></span>
<span id="cb39-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> actions/checkout@v4</span></span>
<span id="cb39-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span></span>
<span id="cb39-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Set up Docker Buildx</span></span>
<span id="cb39-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> docker/setup-buildx-action@v3</span></span>
<span id="cb39-23"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span></span>
<span id="cb39-24"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Build Docker image</span></span>
<span id="cb39-25"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> docker/build-push-action@v5</span></span>
<span id="cb39-26"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-27"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">context</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> .</span></span>
<span id="cb39-28"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">false</span></span>
<span id="cb39-29"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tags</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> paper-render:latest</span></span>
<span id="cb39-30"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cache-from</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> type=gha</span></span>
<span id="cb39-31"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cache-to</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> type=gha,mode=max</span></span>
<span id="cb39-32"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span></span>
<span id="cb39-33"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Render paper in container</span></span>
<span id="cb39-34"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">        run</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb39-35">          docker run --rm \</span>
<span id="cb39-36">            -v $PWD:/home/analyst/project \</span>
<span id="cb39-37">            -v $PWD/analysis/figures:/home/analyst/output \</span>
<span id="cb39-38">            paper-render:latest \</span>
<span id="cb39-39">            R -e "rmarkdown::render('analysis/paper/paper.Rmd')"</span>
<span id="cb39-40">            </span>
<span id="cb39-41"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Upload rendered paper</span></span>
<span id="cb39-42"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> actions/upload-artifact@v4</span></span>
<span id="cb39-43"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb39-44"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> research-paper-${{ github.sha }}</span></span>
<span id="cb39-45"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">          path</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb39-46">            analysis/paper/paper.pdf</span>
<span id="cb39-47">            analysis/figures/*.png</span>
<span id="cb39-48">            analysis/figures/*.jpg</span>
<span id="cb39-49"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">retention-days</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span></span></code></pre></div>
</section>
<section id="step-5-container-registry-integration" class="level3" data-number="9.15.5">
<h3 data-number="9.15.5" class="anchored" data-anchor-id="step-5-container-registry-integration"><span class="header-section-number">9.15.5</span> Step 5: Container Registry Integration</h3>
<p>Create <code>.github/workflows/container-publish.yml</code>:</p>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb40-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Build and Push Container</span></span>
<span id="cb40-2"></span>
<span id="cb40-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">on</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb40-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb40-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">branches</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> main </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb40-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tags</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'v*'</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb40-7"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull_request</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb40-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">branches</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> main </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]</span></span>
<span id="cb40-9"></span>
<span id="cb40-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">env</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb40-11"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">REGISTRY</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ghcr.io</span></span>
<span id="cb40-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IMAGE_NAME</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ github.repository }}</span></span>
<span id="cb40-13"></span>
<span id="cb40-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">jobs</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb40-15"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build-and-push</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb40-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runs-on</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ubuntu-latest</span></span>
<span id="cb40-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">permissions</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb40-18"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">contents</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> read</span></span>
<span id="cb40-19"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">packages</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> write</span></span>
<span id="cb40-20"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span></span>
<span id="cb40-21"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">steps</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb40-22"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Checkout repository</span></span>
<span id="cb40-23"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> actions/checkout@v4</span></span>
<span id="cb40-24"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span></span>
<span id="cb40-25"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Set up Docker Buildx</span></span>
<span id="cb40-26"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> docker/setup-buildx-action@v3</span></span>
<span id="cb40-27"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span></span>
<span id="cb40-28"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Log in to Container Registry</span></span>
<span id="cb40-29"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">if</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> github.event_name != 'pull_request'</span></span>
<span id="cb40-30"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> docker/login-action@v3</span></span>
<span id="cb40-31"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb40-32"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">registry</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ env.REGISTRY }}</span></span>
<span id="cb40-33"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">username</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ github.actor }}</span></span>
<span id="cb40-34"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">password</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ secrets.GITHUB_TOKEN }}</span></span>
<span id="cb40-35"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span></span>
<span id="cb40-36"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Extract metadata</span></span>
<span id="cb40-37"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> meta</span></span>
<span id="cb40-38"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> docker/metadata-action@v5</span></span>
<span id="cb40-39"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb40-40"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">images</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}</span></span>
<span id="cb40-41"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">          tags</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">: </span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">|</span></span>
<span id="cb40-42">            type=ref,event=branch</span>
<span id="cb40-43">            type=ref,event=pr</span>
<span id="cb40-44">            type=semver,pattern={{version}}</span>
<span id="cb40-45">            type=semver,pattern={{major}}.{{minor}}</span>
<span id="cb40-46">            </span>
<span id="cb40-47"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Build and push Docker image</span></span>
<span id="cb40-48"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uses</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> docker/build-push-action@v5</span></span>
<span id="cb40-49"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">        </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">with</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb40-50"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">context</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> .</span></span>
<span id="cb40-51"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">platforms</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> linux/amd64,linux/arm64</span></span>
<span id="cb40-52"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ github.event_name != 'pull_request' }}</span></span>
<span id="cb40-53"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tags</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ steps.meta.outputs.tags }}</span></span>
<span id="cb40-54"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labels</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ${{ steps.meta.outputs.labels }}</span></span>
<span id="cb40-55"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cache-from</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> type=gha</span></span>
<span id="cb40-56"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">          </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cache-to</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> type=gha,mode=max</span></span></code></pre></div>
</section>
</section>
<section id="workflow-explanations" class="level2" data-number="9.16">
<h2 data-number="9.16" class="anchored" data-anchor-id="workflow-explanations"><span class="header-section-number">9.16</span> Workflow Explanations</h2>
<section id="docker-ci-workflow-features" class="level3" data-number="9.16.1">
<h3 data-number="9.16.1" class="anchored" data-anchor-id="docker-ci-workflow-features"><span class="header-section-number">9.16.1</span> Docker CI Workflow Features:</h3>
<ul>
<li><strong>Pre-build renv Validation</strong>: Validates package dependency consistency before Docker build (prevents build failures)</li>
<li><strong>Dynamic R Version</strong>: Extracts R version from renv.lock and passes it to Docker build</li>
<li><strong>Build Testing</strong>: Ensures Docker image builds with latest changes using correct R version</li>
<li><strong>Testing</strong>: Runs R package tests and renders paper in container</li>
<li><strong>Artifact Generation</strong>: Saves rendered papers as downloadable artifacts</li>
<li><strong>Caching</strong>: Uses GitHub Actions cache for faster builds</li>
<li><strong>Early Failure</strong>: Stops pipeline if dependency issues are detected</li>
</ul>
</section>
<section id="r-package-check-features" class="level3" data-number="9.16.2">
<h3 data-number="9.16.2" class="anchored" data-anchor-id="r-package-check-features"><span class="header-section-number">9.16.2</span> R Package Check Features:</h3>
<ul>
<li><strong>Multi-platform Testing</strong>: Tests on Ubuntu, macOS, and Windows</li>
<li><strong>R CMD Check</strong>: Package validation</li>
<li><strong>renv Integration</strong>: Restores package environment</li>
<li><strong>renv Consistency Validation</strong>: Verifies dependency synchronization across platforms</li>
<li><strong>System Dependencies</strong>: Installs required system libraries</li>
</ul>
</section>
<section id="paper-rendering-features" class="level3" data-number="9.16.3">
<h3 data-number="9.16.3" class="anchored" data-anchor-id="paper-rendering-features"><span class="header-section-number">9.16.3</span> Paper Rendering Features:</h3>
<ul>
<li><strong>Selective Triggering</strong>: Only runs when relevant files change</li>
<li><strong>Manual Execution</strong>: Can be triggered manually via GitHub interface</li>
<li><strong>Artifact Storage</strong>: Saves PDFs and figures with retention policy</li>
<li><strong>Path-based Triggers</strong>: Responds to changes in analysis files</li>
</ul>
</section>
<section id="container-publishing-features" class="level3" data-number="9.16.4">
<h3 data-number="9.16.4" class="anchored" data-anchor-id="container-publishing-features"><span class="header-section-number">9.16.4</span> Container Publishing Features:</h3>
<ul>
<li><strong>Building</strong>: Builds on pushes and tags</li>
<li><strong>Multi-platform</strong>: Supports AMD64 and ARM64 platforms</li>
<li><strong>Semantic Versioning</strong>: Tagging based on git tags</li>
<li><strong>Security</strong>: Uses built-in GitHub token for authentication</li>
</ul>
</section>
</section>
<section id="authentication-and-permissions" class="level2" data-number="9.17">
<h2 data-number="9.17" class="anchored" data-anchor-id="authentication-and-permissions"><span class="header-section-number">9.17</span> Authentication and Permissions</h2>
<section id="built-in-github_token" class="level3" data-number="9.17.1">
<h3 data-number="9.17.1" class="anchored" data-anchor-id="built-in-github_token"><span class="header-section-number">9.17.1</span> Built-in GITHUB_TOKEN:</h3>
<p>The built-in <code>GITHUB_TOKEN</code> automatically provides: - Read access to repository contents - Write access to GitHub Packages (when permissions are set) - No manual setup required</p>
</section>
<section id="setting-repository-permissions" class="level3" data-number="9.17.2">
<h3 data-number="9.17.2" class="anchored" data-anchor-id="setting-repository-permissions"><span class="header-section-number">9.17.2</span> Setting Repository Permissions:</h3>
<ol type="1">
<li><strong>Repository Settings</strong> → <strong>Actions</strong> → <strong>General</strong></li>
<li><strong>Workflow permissions</strong>: Choose “Read and write permissions”</li>
<li><strong>Allow GitHub Actions to create and approve pull requests</strong>: Enable if needed</li>
</ol>
</section>
<section id="using-personal-access-tokens-advanced" class="level3" data-number="9.17.3">
<h3 data-number="9.17.3" class="anchored" data-anchor-id="using-personal-access-tokens-advanced"><span class="header-section-number">9.17.3</span> Using Personal Access Tokens (Advanced):</h3>
<p>For broader permissions, create repository secrets:</p>
<ol type="1">
<li><strong>Repository Settings</strong> → <strong>Secrets and variables</strong> → <strong>Actions</strong></li>
<li><strong>New repository secret</strong>: Add <code>GHCR_TOKEN</code> with Personal Access Token</li>
<li><strong>Reference in workflow</strong>: <code>password: ${{ secrets.GHCR_TOKEN }}</code></li>
</ol>
</section>
</section>
<section id="integration-with-collaborative-workflow" class="level2" data-number="9.18">
<h2 data-number="9.18" class="anchored" data-anchor-id="integration-with-collaborative-workflow"><span class="header-section-number">9.18</span> Integration with Collaborative Workflow</h2>
<section id="pull-request-integration" class="level3" data-number="9.18.1">
<h3 data-number="9.18.1" class="anchored" data-anchor-id="pull-request-integration"><span class="header-section-number">9.18.1</span> Pull Request Integration:</h3>
<p>When a team member submits a pull request: 1. GitHub automatically triggers CI workflows 2. Tests run in clean environment identical to production 3. Results displayed directly in pull request interface 4. Merge can be blocked if tests fail</p>
</section>
<section id="branch-protection-rules" class="level3" data-number="9.18.2">
<h3 data-number="9.18.2" class="anchored" data-anchor-id="branch-protection-rules"><span class="header-section-number">9.18.2</span> Branch Protection Rules:</h3>
<p>Enable in <strong>Repository Settings</strong> → <strong>Branches</strong>: - <strong>Require status checks</strong>: Force CI to pass before merging - <strong>Require branches to be up to date</strong>: Ensure latest code is tested - <strong>Include administrators</strong>: Apply rules to all users</p>
</section>
</section>
<section id="monitoring-and-troubleshooting" class="level2" data-number="9.19">
<h2 data-number="9.19" class="anchored" data-anchor-id="monitoring-and-troubleshooting"><span class="header-section-number">9.19</span> Monitoring and Troubleshooting</h2>
<section id="viewing-workflow-results" class="level3" data-number="9.19.1">
<h3 data-number="9.19.1" class="anchored" data-anchor-id="viewing-workflow-results"><span class="header-section-number">9.19.1</span> Viewing Workflow Results:</h3>
<ol type="1">
<li><strong>Repository</strong> → <strong>Actions</strong> tab</li>
<li>Click specific workflow run to see details</li>
<li>Expand steps to see detailed logs</li>
<li>Download artifacts (rendered papers, test results)</li>
</ol>
</section>
<section id="common-issues-and-solutions" class="level3" data-number="9.19.2">
<h3 data-number="9.19.2" class="anchored" data-anchor-id="common-issues-and-solutions"><span class="header-section-number">9.19.2</span> Common Issues and Solutions:</h3>
<p><strong>Docker Build Failures:</strong> - Check Dockerfile syntax - Verify all COPY paths exist - Ensure base image is accessible</p>
<p><strong>renv Restore Failures:</strong> - Verify renv.lock is committed - Check for platform-specific packages - Consider using RSPM for faster installs</p>
<p><strong>Permission Errors:</strong> - Verify GITHUB_TOKEN permissions - Check repository secrets configuration - Ensure workflows have necessary permissions</p>
</section>
<section id="performance-optimization" class="level3" data-number="9.19.3">
<h3 data-number="9.19.3" class="anchored" data-anchor-id="performance-optimization"><span class="header-section-number">9.19.3</span> Performance Optimization:</h3>
<p><strong>Caching Strategies:</strong> - Docker layer caching with <code>cache-from/cache-to</code> - renv package caching with <code>r-lib/actions/setup-renv</code> - Artifact caching for large datasets</p>
<p><strong>Parallel Execution:</strong> - Run tests and documentation in parallel jobs - Use matrix strategies for multi-platform testing - Conditional execution based on changed files</p>
<p>This CI/CD setup ensures that research compendia remain reproducible, tested, and deployment-ready throughout the development lifecycle.</p>
</section>
</section>
</section>
<section id="appendix-f-docker-configuration-examples" class="level1 unnumbered">
<h1 class="unnumbered">Appendix F: Docker Configuration Examples</h1>
<p>This appendix provides Dockerfile examples ranging from minimal configurations to full development environments.</p>
<section id="production-dockerfile" class="level2" data-number="9.20">
<h2 data-number="9.20" class="anchored" data-anchor-id="production-dockerfile"><span class="header-section-number">9.20</span> Production Dockerfile</h2>
<p>The following Dockerfile provides a development environment with zsh, vim plugins, dotfiles integration, and development tools:</p>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode dockerfile code-with-copy"><code class="sourceCode dockerfile"><span id="cb41-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use R version from renv.lock for perfect consistency</span></span>
<span id="cb41-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ARG</span> R_VERSION=4.3.0</span>
<span id="cb41-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">FROM</span> rocker/r-ver:${R_VERSION}</span>
<span id="cb41-4"></span>
<span id="cb41-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install system dependencies including zsh and development tools</span></span>
<span id="cb41-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> update <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">apt-get</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb41-7">    libxml2-dev <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb41-8">    libcurl4-openssl-dev <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb41-9">    libssl-dev <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb41-10">    libgit2-dev <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb41-11">    libfontconfig1-dev <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb41-12">    libcairo2-dev <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb41-13">    libxt-dev <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb41-14">    pandoc <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb41-15">    zsh <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb41-16">    curl <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb41-17">    git <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb41-18">    fonts-dejavu <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb41-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-rf</span> /var/lib/apt/lists/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb41-20"></span>
<span id="cb41-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create non-root user with zsh as default shell</span></span>
<span id="cb41-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ARG</span> USERNAME=analyst</span>
<span id="cb41-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">useradd</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--create-home</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--shell</span> /bin/zsh <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${USERNAME}</span></span>
<span id="cb41-24"></span>
<span id="cb41-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set working directory</span></span>
<span id="cb41-26"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">WORKDIR</span> /home/${USERNAME}/project</span>
<span id="cb41-27"></span>
<span id="cb41-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Copy project files first (for better Docker layer caching)</span></span>
<span id="cb41-29"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">COPY</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--chown=${USERNAME}:${USERNAME}</span> DESCRIPTION .</span>
<span id="cb41-30"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">COPY</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--chown=${USERNAME}:${USERNAME}</span> renv.lock* ./</span>
<span id="cb41-31"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">COPY</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--chown=${USERNAME}:${USERNAME}</span> .Rprofile* ./</span>
<span id="cb41-32"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">COPY</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--chown=${USERNAME}:${USERNAME}</span> renv/activate.R* renv/activate.R</span>
<span id="cb41-33"></span>
<span id="cb41-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Configure renv library path</span></span>
<span id="cb41-35"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">ENV</span> RENV_PATHS_LIBRARY renv/library</span>
<span id="cb41-36"></span>
<span id="cb41-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Switch to non-root user for R package installation</span></span>
<span id="cb41-38"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">USER</span> ${USERNAME}</span>
<span id="cb41-39"></span>
<span id="cb41-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install renv and essential R packages</span></span>
<span id="cb41-41"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">R</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"install.packages(c('renv', 'remotes', 'devtools', 'knitr', </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb41-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    'rmarkdown'), repos = c(CRAN = 'https://cloud.r-project.org'))"</span></span>
<span id="cb41-43"></span>
<span id="cb41-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Restore R packages from lockfile (if exists)</span></span>
<span id="cb41-45"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">R</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"if (file.exists('renv.lock')) renv::restore() else </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb41-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    cat('No renv.lock found, skipping restore</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">n')"</span></span>
<span id="cb41-47"></span>
<span id="cb41-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Copy dotfiles for development environment</span></span>
<span id="cb41-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Note: Ensure .vimrc and .zshrc_docker exist in build context or create </span></span>
<span id="cb41-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># defaults</span></span>
<span id="cb41-51"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">COPY</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--chown=${USERNAME}:${USERNAME}</span> .vimrc /home/${USERNAME}/.vimrc</span>
<span id="cb41-52"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">COPY</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--chown=${USERNAME}:${USERNAME}</span> .zshrc_docker /home/${USERNAME}/.zshrc</span>
<span id="cb41-53"></span>
<span id="cb41-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install zsh plugins for shell experience</span></span>
<span id="cb41-55"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> /home/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${USERNAME}</span>/.zsh <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb41-56">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://github.com/zsh-users/zsh-autosuggestions <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb41-57">        /home/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${USERNAME}</span>/.zsh/zsh-autosuggestions <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb41-58">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chown</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-R</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${USERNAME}</span>:<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${USERNAME}</span> /home/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${USERNAME}</span>/.zsh</span>
<span id="cb41-59"></span>
<span id="cb41-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install vim-plug and configure vim environment</span></span>
<span id="cb41-61"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> /home/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${USERNAME}</span>/.vim/autoload <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb41-62">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fLo</span> /home/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${USERNAME}</span>/.vim/autoload/plug.vim <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb41-63">    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb41-64">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chown</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-R</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${USERNAME}</span>:<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${USERNAME}</span> /home/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${USERNAME}</span>/.vim</span>
<span id="cb41-65"></span>
<span id="cb41-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install vim plugins (suppress interactive mode)</span></span>
<span id="cb41-67"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">vim</span> +PlugInstall +qall <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">||</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb41-68"></span>
<span id="cb41-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Copy rest of project</span></span>
<span id="cb41-70"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">COPY</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--chown=${USERNAME}:${USERNAME}</span> . .</span>
<span id="cb41-71"></span>
<span id="cb41-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install the research compendium as a package</span></span>
<span id="cb41-73"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">RUN</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">R</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"devtools::install('.', dependencies = TRUE)"</span></span>
<span id="cb41-74"></span>
<span id="cb41-75"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set default shell to zsh for development experience</span></span>
<span id="cb41-76"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">WORKDIR</span> /home/${USERNAME}/project</span>
<span id="cb41-77"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">CMD</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/bin/zsh"</span>]</span></code></pre></div>
</section>
<section id="features-of-the-production-dockerfile" class="level2" data-number="9.21">
<h2 data-number="9.21" class="anchored" data-anchor-id="features-of-the-production-dockerfile"><span class="header-section-number">9.21</span> Features of the Production Dockerfile</h2>
<p>This production-ready Dockerfile provides:</p>
<ul>
<li><strong>R version consistency</strong>: Matches exact R version specified in renv.lock for perfect environment alignment</li>
<li><strong>Minimal base</strong>: rocker/r-ver provides clean R installation without unnecessary packages</li>
<li><strong>Shell environment</strong>: zsh with autosuggestions and professional prompt for improved productivity</li>
<li><strong>Editor environment</strong>: vim with plugins configured automatically during build</li>
<li><strong>Dotfiles integration</strong>: Personal development preferences (.vimrc, .zshrc) copied from host system</li>
<li><strong>Development tools</strong>: git, curl, pandoc, and essential development libraries pre-installed</li>
<li><strong>Security</strong>: Non-root user execution with proper file permissions</li>
<li><strong>renv integration</strong>: Automatic package restoration with proper library path configuration</li>
<li><strong>Container-optimized workflow</strong>: Optimized layer caching and build process for efficient rebuilds</li>
</ul>
</section>
<section id="r-version-extraction" class="level2" data-number="9.22">
<h2 data-number="9.22" class="anchored" data-anchor-id="r-version-extraction"><span class="header-section-number">9.22</span> R Version Extraction</h2>
<p>The Dockerfile uses a build argument to ensure the R version exactly matches what’s specified in <code>renv.lock</code>. The build command extracts the R version directly from the renv lockfile:</p>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb42-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract R version from renv.lock</span></span>
<span id="cb42-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">R_VERSION</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jq</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.R.Version'</span> renv.lock<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb42-3"></span>
<span id="cb42-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Build Docker image with extracted R version</span></span>
<span id="cb42-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--build-arg</span> R_VERSION=<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${R_VERSION}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb42-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> ghcr.io/username/penguins_analysis:v1.0 .</span></code></pre></div>
<p>If the <code>renv.lock</code> file specifies R 4.3.1, the Docker image will use <code>rocker/r-ver:4.3.1</code>. If renv is updated to R 4.4.0, the Docker build will use <code>rocker/r-ver:4.4.0</code>. This maintains consistency between the package environment and system environment.</p>
</section>
</section>
<section id="appendix-g-renv-management-and-validation" class="level1 unnumbered">
<h1 class="unnumbered">Appendix G: renv Management and Validation</h1>
<p>This appendix provides details for the renv consistency checking script and dependency management workflows.</p>
<section id="renv-consistency-checker-features" class="level2" data-number="9.23">
<h2 data-number="9.23" class="anchored" data-anchor-id="renv-consistency-checker-features"><span class="header-section-number">9.23</span> renv Consistency Checker Features</h2>
<p>The <code>check_renv_for_commit.R</code> script provides advanced team collaboration features through dependency validation:</p>
<ul>
<li><strong>Team conflict prevention</strong>: Pre-commit validation stops dependency inconsistencies before they reach the repository</li>
<li><strong>Automated dependency discovery</strong>: Scans R/, scripts/, and analysis/ directories for <code>library()</code>, <code>require()</code>, and <code>pkg::</code> calls</li>
<li><strong>Multi-source synchronization</strong>: Ensures packages are consistent across code files, DESCRIPTION, and renv.lock</li>
<li><strong>CRAN validation</strong>: Verifies packages exist and are properly named before team integration</li>
<li><strong>Automatic fixing</strong>: Updates DESCRIPTION and regenerates renv.lock to maintain team synchronization</li>
<li><strong>CI/CD fail-fast</strong>: Provides proper exit codes for automated workflows</li>
<li><strong>Interactive collaboration mode</strong>: Guides developers through dependency resolution during development</li>
</ul>
</section>
<section id="team-collaboration-commands" class="level2" data-number="9.24">
<h2 data-number="9.24" class="anchored" data-anchor-id="team-collaboration-commands"><span class="header-section-number">9.24</span> Team Collaboration Commands</h2>
<div class="sourceCode" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb43-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Team development workflow (via Make)</span></span>
<span id="cb43-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> check-renv          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Interactive dependency checking</span></span>
<span id="cb43-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> check-renv-fix      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Auto-fix dependency issues</span></span>
<span id="cb43-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> check-renv-ci       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CI/CD validation with fail-fast</span></span>
<span id="cb43-5"></span>
<span id="cb43-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Docker-based validation (no local R required)</span></span>
<span id="cb43-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> docker-check-renv-fix  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fix dependencies in container</span></span>
<span id="cb43-8"></span>
<span id="cb43-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Direct script usage</span></span>
<span id="cb43-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Rscript</span> check_renv_for_commit.R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--fix</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--fail-on-issues</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CI mode</span></span>
<span id="cb43-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Rscript</span> check_renv_for_commit.R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--quiet</span>                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Minimal output</span></span>
<span id="cb43-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Rscript</span> check_renv_for_commit.R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--help</span>                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Usage info</span></span></code></pre></div>
</section>
<section id="multi-developer-workflow" class="level2" data-number="9.25">
<h2 data-number="9.25" class="anchored" data-anchor-id="multi-developer-workflow"><span class="header-section-number">9.25</span> Multi-Developer Workflow</h2>
<ol type="1">
<li><strong>Install packages in container</strong>: Use <code>install.packages()</code> or <code>renv::install()</code> within Docker environment</li>
<li><strong>Validate team dependencies</strong>: Run <code>make check-renv</code> to check for conflicts before committing</li>
<li><strong>Review team impacts</strong>: Script identifies packages that would affect other team members</li>
<li><strong>Synchronize team environment</strong>: Use <code>make check-renv-fix</code> to update shared dependency files</li>
<li><strong>Commit with team confidence</strong>: Other developers can reproduce your exact environment</li>
</ol>
</section>
<section id="integration-with-development-workflows" class="level2" data-number="9.26">
<h2 data-number="9.26" class="anchored" data-anchor-id="integration-with-development-workflows"><span class="header-section-number">9.26</span> Integration with Development Workflows</h2>
<section id="pre-commit-hooks" class="level3" data-number="9.26.1">
<h3 data-number="9.26.1" class="anchored" data-anchor-id="pre-commit-hooks"><span class="header-section-number">9.26.1</span> Pre-commit Hooks</h3>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb44-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add to .git/hooks/pre-commit</span></span>
<span id="cb44-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Rscript</span> check_renv_for_commit.R <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--fail-on-issues</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--quiet</span></span></code></pre></div>
</section>
<section id="makefile-integration" class="level3" data-number="9.26.2">
<h3 data-number="9.26.2" class="anchored" data-anchor-id="makefile-integration"><span class="header-section-number">9.26.2</span> Makefile Integration</h3>
<div class="sourceCode" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode makefile code-with-copy"><code class="sourceCode makefile"><span id="cb45-1"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">check-renv:</span></span>
<span id="cb45-2"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span>Rscript check_renv_for_commit.R</span>
<span id="cb45-3"></span>
<span id="cb45-4"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">check-renv-fix:</span></span>
<span id="cb45-5"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span>Rscript check_renv_for_commit.R --fix</span>
<span id="cb45-6"></span>
<span id="cb45-7"><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">check-renv-ci:</span></span>
<span id="cb45-8"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span>Rscript check_renv_for_commit.R --quiet --fail-on-issues</span></code></pre></div>
</section>
<section id="cicd-integration" class="level3" data-number="9.26.3">
<h3 data-number="9.26.3" class="anchored" data-anchor-id="cicd-integration"><span class="header-section-number">9.26.3</span> CI/CD Integration</h3>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb46-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Validate renv consistency</span></span>
<span id="cb46-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">run</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> Rscript check_renv_for_commit.R --fail-on-issues --quiet</span></span></code></pre></div>
<p>This approach ensures that collaborators can reliably reproduce your package environment and that CI/CD pipelines have all necessary dependency information.</p>


</section>
</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald and Thomas, R.G.},
  title = {Research {Compendia} for {Full} {Reproducibility} in {R:} {A}
    Zzrrtools, Renv, and {Docker} {Strategy}},
  date = {2025-06-30},
  url = {https://focusonr.org/posts/share_R_code_via_docker_p25/},
  langid = {en},
  abstract = {This white paper presents an approach to achieving
    reproducibility in R workflows by combining three tools: zzrrtools
    for creating structured research compendia, renv for R package
    management, and Docker for containerizing the computing environment.
    The zzrrtools framework provides a standardized research compendium
    structure, renv manages package dependencies, and Docker ensures
    consistent execution environments. Together, these tools create
    self-contained research compendia that run identically across
    different systems. The paper includes a practical case study
    demonstrating multi-developer collaborative workflows with clear
    governance roles, where a project maintainer manages the technical
    infrastructure while multiple contributors extend the research
    analysis.}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald, and R.G. Thomas. 2025. <span>“Research
Compendia for Full Reproducibility in R: A Zzrrtools, Renv, and Docker
Strategy.”</span> June 30, 2025. <a href="https://focusonr.org/posts/share_R_code_via_docker_p25/">https://focusonr.org/posts/share_R_code_via_docker_p25/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/share_R_code_via_docker_p25/</guid>
  <pubDate>Mon, 30 Jun 2025 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Generating scripts to initiate an rrtools R data analysis project framework</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <dc:creator>R.G. Thomas</dc:creator>
  <link>https://focusonr.org/posts/setup_or_modifyto_rrtools_analysis_repo_p33/</link>
  <description><![CDATA[ 




<section id="executive-summary" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="executive-summary"><span class="header-section-number">1</span> Executive Summary</h2>
<p>Setting up a working repo can be time consuming and error-prone. This document presents a solution to this problem by providing a step-by-step guide to creating a reproducible R project using the rrtools package. The guide includes instructions for generating a project structure, creating a README file, And generating a Dockerfile for containerization. The goal is to provide a</p>
</section>
<section id="motivation" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="motivation"><span class="header-section-number">2</span> Motivation</h2>
<p>Imagine you’ve written code that you want to share with a colleague. At first glance, this may seem like a straightforward task—simply send the R files via email. However, ensuring that your colleague can run the code without errors and obtain the same results is often much more challenging than anticipated.</p>
<p>When sharing R code, several potential problems can arise:</p>
<ul>
<li>Different versions of R installed on each machine</li>
<li>Mismatched R package versions</li>
<li>Missing system dependencies (like pandoc or LaTeX)</li>
<li>Missing supplemental files referenced by the program (bibliography files, LaTeX preambles, datasets, images)</li>
<li>Different R startup configurations (.Rprofile or .Renviron)</li>
</ul>
<p>A real-world scenario often unfolds like this:</p>
<ol type="1">
<li>You email your R Markdown file to your colleague, Joe</li>
<li>Joe attempts to run it with <code>R -e "source('peng1.Rmd')"</code></li>
<li>R isn’t installed on Joe’s system</li>
<li>After installing R, Joe gets an error: “could not find function ‘render’”</li>
<li>Joe installs the rmarkdown package</li>
<li>Now pandoc is missing</li>
<li>After installing pandoc, a required package is missing</li>
<li>After installing the package, external files are missing (bibliography, images)</li>
<li>And so on…</li>
</ol>
</section>
<section id="conclusion" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="conclusion"><span class="header-section-number">3</span> Conclusion</h2>
<p>Achieving full reproducibility in R requires addressing both package dependencies and system-level consistency, while ensuring code quality through testing. By combining renv for R package management, Docker for environment containerization, and automated testing for code validation, data scientists and researchers can create truly portable, reproducible, and reliable workflows.</p>
<p>The comprehensive approach presented in this white paper ensures that the common frustration of “it works on my machine” becomes a thing of the past. Instead, R Markdown projects become easy to share and fully reproducible. A collaborator or reviewer can launch the Docker container and get identical results, without worrying about package versions or system setup.</p>
<p>The case study demonstrates how two developers can effectively collaborate on an analysis while maintaining reproducibility and code quality throughout the project lifecycle. By integrating testing into the workflow, the team can be confident that their analysis is not only reproducible but also correct.</p>
<p>This strategy represents a best practice for long-term reproducibility in R, meeting the high standards required for professional data science and research documentation. By adopting this comprehensive approach, the R community can make significant strides toward the goal of fully reproducible and reliable research and analysis.</p>
</section>
<section id="references" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="references"><span class="header-section-number">4</span> References</h2>
<ol type="1">
<li>Thomas, R.G. “Docker and renv strategy.”</li>
<li>“Palmer Penguins Analysis.”</li>
<li>The Rocker Project. https://www.rocker-project.org/</li>
<li>renv documentation. https://rstudio.github.io/renv/</li>
<li>testthat documentation. https://testthat.r-lib.org/</li>
<li>Horst, A.M., Hill, A.P., &amp; Gorman, K.B. (2022). palmerpenguins: Palmer Archipelago (Antarctica) penguin data. R Journal.</li>
</ol>
<hr>
</section>
<section id="prerequisites" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">5</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">6</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="7">
<h2 data-number="7" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">7</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="8">
<h2 data-number="8" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">8</span> Further Reading</h2>
<p>In development</p>
<p>Session Summary</p>
<p>In this session, we worked on refactoring a shell script to convert a generic R research project to follow the rrtools framework for reproducible research. Here’s what we accomplished:</p>
<p>Main Achievements</p>
<ol type="1">
<li>Analyzed the existing adjust_to_rtools.sh script that was designed for an MCI analysis project</li>
<li>Refactored the script to work with generic research repositories like x19</li>
<li>Enhanced the script to align more closely with Ben Marwick’s rrtools framework</li>
<li>Added proper directory structure, documentation templates, and reproducibility features</li>
</ol>
<p>Key Script Developed</p>
<p>The main deliverable was a comprehensive shell script that: - Creates the standard rrtools directory structure - Organizes R functions, analysis scripts, and Rmd files - Sets up proper testing infrastructure - Creates documentation files (README, CONTRIBUTING, CONDUCT) - Configures Docker and Binder support - Establishes dependency management with renv - Creates symbolic links for easier navigation</p>
<p>Notable Features</p>
<ul>
<li>Backs up the original project structure before making changes</li>
<li>Detects package name from DESCRIPTION file</li>
<li>Intelligently sorts existing files into appropriate directories</li>
<li>Creates templates for R Markdown manuscripts using bookdown</li>
<li>Sets up Docker containers for reproducibility</li>
<li>Configures Binder for browser-based analysis</li>
<li>Adds comprehensive documentation following rrtools standards</li>
</ul>
<p>This refactored script provides a solid foundation for converting existing R research projects to follow best practices for reproducible research using the rrtools framework.</p>


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald and Thomas, R.G.},
  title = {Generating Scripts to Initiate an Rrtools {R} Data Analysis
    Project Framework},
  date = {2025-06-30},
  url = {https://focusonr.org/posts/setup_or_modifyto_rrtools_analysis_repo_p33/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald, and R.G. Thomas. 2025. <span>“Generating
Scripts to Initiate an Rrtools R Data Analysis Project
Framework.”</span> June 30, 2025. <a href="https://focusonr.org/posts/setup_or_modifyto_rrtools_analysis_repo_p33/">https://focusonr.org/posts/setup_or_modifyto_rrtools_analysis_repo_p33/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/setup_or_modifyto_rrtools_analysis_repo_p33/</guid>
  <pubDate>Mon, 30 Jun 2025 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Update R package development process</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <dc:creator>R.G. Thomas</dc:creator>
  <link>https://focusonr.org/posts/r_code_package_updating_p34/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/r_code_package_updating_p34/img/Rlogo.png" class="img-fluid figure-img"></p>
<figcaption>quarto</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>The R packaging system is a useful organizing framework. Whether we’re looking to manage a set of R functions we use regularly or want to customize an existing package to our own requirements or looking to contribute to an open source project working within the R package paradigm is a good idea.</p>
<p>Describe the scenario to be considered.</p>
<p>Start with cloning the github repo.</p>
<p>powerful tool for organizing and sharing R code. This post outlines the process of making changes to an R package, specifically <code>zzdataframe2graphic</code>, from code modification to testing and GitHub integration.</p>
<p>Here’s the expanded procedure including Git and GitHub steps:</p>
<ol type="1">
<li><p>Create New Branch</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> checkout main         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Start from main branch</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> pull origin main     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get latest changes</span></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> checkout <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-b</span> feature-name   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create &amp; switch to new branch</span></span></code></pre></div></li>
<li><p>Edit the R Code</p>
<ul>
<li>Navigate to R/zzdataframe2graphic.R</li>
<li>Make your code changes</li>
<li>Document new parameters/changes in roxygen comments</li>
<li>Save file</li>
</ul></li>
<li><p>Update Documentation</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># In R:</span></span>
<span id="cb2-2">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">document</span>()   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Updates NAMESPACE and man/ files</span></span></code></pre></div></li>
<li><p>Write New Tests</p>
<ul>
<li>Edit tests/testthat/test-zzdataframe2graphic.R</li>
<li>Add new test cases:</li>
</ul>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test_that</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"new feature works as expected"</span>, {</span>
<span id="cb3-2">  result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">your_function</span>(test_input)</span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expect_equal</span>(result, expected_output)</span>
<span id="cb3-4">})</span></code></pre></div></li>
<li><p>Run Tests Locally</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test</span>()</span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fix any failures and add more tests if needed</span></span></code></pre></div></li>
<li><p>Update Version &amp; Description</p>
<ul>
<li>Edit DESCRIPTION file</li>
<li>Increment version number</li>
<li>Update date field</li>
<li>Update any dependencies if needed</li>
</ul></li>
<li><p>Build and Check Package</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build</span>()</span>
<span id="cb5-2">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">check</span>()</span></code></pre></div></li>
<li><p>Additional Checks</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">check_win_devel</span>()</span>
<span id="cb6-2">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">check_mac_release</span>()</span>
<span id="cb6-3">rcmdcheck<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rcmdcheck</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">args =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--as-cran"</span>))</span></code></pre></div></li>
<li><p>Stage Changes</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> status                  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Review changes</span></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add R/zzdataframe2graphic.R</span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add tests/testthat/test-zzdataframe2graphic.R</span>
<span id="cb7-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add DESCRIPTION</span>
<span id="cb7-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add man/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb7-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add NAMESPACE</span></code></pre></div></li>
<li><p>Commit Changes</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"feat: add new feature to zzdataframe2graphic</span></span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- Added X functionality</span></span>
<span id="cb8-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- Updated documentation</span></span>
<span id="cb8-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">- Added tests"</span></span></code></pre></div></li>
<li><p>Push to GitHub <code>bash     git push origin feature-name</code></p></li>
<li><p>Create Pull Request</p>
<ul>
<li>Go to your GitHub repository</li>
<li>Click “Pull requests” tab</li>
<li>Click “New pull request”</li>
<li>Select:
<ul>
<li>base: main</li>
<li>compare: feature-name</li>
</ul></li>
<li>Fill in PR description:
<ul>
<li>What changes were made</li>
<li>Why changes were made</li>
<li>How to test the changes</li>
<li>Any related issues</li>
</ul></li>
</ul></li>
<li><p>CI/Actions Check</p>
<ul>
<li><p>Wait for GitHub Actions to complete</p></li>
<li><p>Review any failures</p></li>
<li><p>Make necessary fixes:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add .</span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fix: address CI failures"</span></span>
<span id="cb9-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push origin feature-name</span></code></pre></div></li>
</ul></li>
<li><p>PR Review Process</p>
<ul>
<li>Address any review comments</li>
<li>Make requested changes</li>
<li>Push additional commits</li>
<li>Request re-review if needed</li>
</ul></li>
<li><p>Merge PR</p>
<ul>
<li>Once approved and all checks pass</li>
<li>Choose merge strategy (usually “Squash and merge”)</li>
<li>Update PR title if needed</li>
<li>Click “Squash and merge”</li>
</ul></li>
<li><p>Clean Up <code>bash     git checkout main     git pull origin main     git branch -d feature-name    # Delete local branch</code></p></li>
<li><p>Create Release (optional)</p>
<ul>
<li>Go to GitHub “Releases”</li>
<li>Click “Create new release”</li>
<li>Tag version (e.g., v0.2.1)</li>
<li>Add release notes</li>
<li>Publish release</li>
</ul></li>
</ol>
<p>Would you like me to elaborate on any of these steps or explain the reasoning behind any particular practices? Here’s an expanded blog post about making changes to the zzdataframe2graphic package:</p>
</section>
<section id="making-changes-to-an-r-package-a-complete-workflow" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Making Changes to an R Package: A Complete Workflow</h1>
<p>In this post, I’ll walk through the complete process of making changes to an R package, from code modification to testing and GitHub integration. I’ll use my package <code>zzdataframe2graphic</code> as an example.</p>
<section id="initial-code-changes" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="initial-code-changes"><span class="header-section-number">2.1</span> Initial Code Changes</h2>
<p>The workflow begins with modifying your R code. Let’s say we want to improve error handling in the package:</p>
<ol type="1">
<li>Navigate to the package’s R directory</li>
<li>Open the relevant R file (in this case, <code>zzdataframe2graphic.R</code>)</li>
<li>Make your changes</li>
<li>Document any new parameters or changes in the roxygen comments</li>
</ol>
</section>
<section id="local-testing-and-building" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="local-testing-and-building"><span class="header-section-number">2.2</span> Local Testing and Building</h2>
<p>After making changes, follow these steps:</p>
<ol type="1">
<li>Document the changes:</li>
</ol>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">document</span>()</span></code></pre></div>
<p>This updates the NAMESPACE and man/ files based on your roxygen comments.</p>
<ol start="2" type="1">
<li>Run the tests:</li>
</ol>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test</span>()</span></code></pre></div>
<p>Fix any test failures that appear.</p>
<ol start="3" type="1">
<li>Build and install the package:</li>
</ol>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build</span>()</span>
<span id="cb12-2">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install</span>()</span></code></pre></div>
</section>
<section id="github-integration" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="github-integration"><span class="header-section-number">2.3</span> GitHub Integration</h2>
<p>Once your local changes are working, it’s time to integrate with GitHub:</p>
<ol type="1">
<li>Create a new branch:</li>
</ol>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> checkout <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-b</span> feature-name</span></code></pre></div>
<ol start="2" type="1">
<li>Stage and commit your changes:</li>
</ol>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add R/zzdataframe2graphic.R</span>
<span id="cb14-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add tests/testthat/test-zzdataframe2graphic.R</span>
<span id="cb14-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Add improved error handling"</span></span></code></pre></div>
<ol start="3" type="1">
<li>Push to GitHub:</li>
</ol>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push origin feature-name</span></code></pre></div>
</section>
<section id="github-actions" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="github-actions"><span class="header-section-number">2.4</span> GitHub Actions</h2>
<p>GitHub Actions automate the testing process. The package uses three main workflows:</p>
<section id="r-cmd-check" class="level3" data-number="2.4.1">
<h3 data-number="2.4.1" class="anchored" data-anchor-id="r-cmd-check"><span class="header-section-number">2.4.1</span> R-CMD-check</h3>
<p>This workflow runs <code>R CMD check</code> on multiple operating systems: - Windows latest - macOS latest - Ubuntu latest (with R-release, R-devel, and R-oldrel)</p>
<p>The workflow is triggered on: - Push to main/master - Pull requests to main/master</p>
</section>
<section id="test-coverage" class="level3" data-number="2.4.2">
<h3 data-number="2.4.2" class="anchored" data-anchor-id="test-coverage"><span class="header-section-number">2.4.2</span> Test Coverage</h3>
<p>This workflow: - Runs all package tests - Generates coverage reports - Requires proper setup of LaTeX dependencies - Reports which parts of the code need more testing</p>
</section>
<section id="pkgdown" class="level3" data-number="2.4.3">
<h3 data-number="2.4.3" class="anchored" data-anchor-id="pkgdown"><span class="header-section-number">2.4.3</span> pkgdown</h3>
<p>This workflow: - Builds package documentation - Deploys to GitHub Pages - Updates whenever changes are pushed to main/master</p>
</section>
</section>
<section id="setting-up-github-actions" class="level2" data-number="2.5">
<h2 data-number="2.5" class="anchored" data-anchor-id="setting-up-github-actions"><span class="header-section-number">2.5</span> Setting Up GitHub Actions</h2>
<p>To set up these workflows:</p>
<ol type="1">
<li>Create the workflows directory:</li>
</ol>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> .github/workflows</span></code></pre></div>
<ol start="2" type="1">
<li>Add the necessary YAML files:</li>
</ol>
<ul>
<li><code>R-CMD-check.yaml</code></li>
<li><code>test-coverage.yaml</code></li>
<li><code>pkgdown.yaml</code></li>
</ul>
<ol start="3" type="1">
<li>Configure repository settings:</li>
</ol>
<ul>
<li>Go to Settings → Actions → General</li>
<li>Set “Workflow permissions” to “Read and write”</li>
<li>Enable GitHub Pages deployment</li>
</ul>
</section>
<section id="monitoring-the-process" class="level2" data-number="2.6">
<h2 data-number="2.6" class="anchored" data-anchor-id="monitoring-the-process"><span class="header-section-number">2.6</span> Monitoring the Process</h2>
<p>After pushing changes:</p>
<ol type="1">
<li>Check the “Actions” tab on GitHub</li>
<li>Monitor each workflow’s progress</li>
<li>Review any failures</li>
<li>Check the generated documentation site</li>
<li>Review test coverage reports</li>
</ol>
</section>
<section id="best-practices" class="level2" data-number="2.7">
<h2 data-number="2.7" class="anchored" data-anchor-id="best-practices"><span class="header-section-number">2.7</span> Best Practices</h2>
<ul>
<li>Always create a new branch for changes</li>
<li>Run tests locally before pushing</li>
<li>Write tests for new functionality</li>
<li>Keep commits focused and well-documented</li>
<li>Monitor GitHub Actions results</li>
<li>Address failures promptly</li>
</ul>
</section>
<section id="conclusion" class="level2" data-number="2.8">
<h2 data-number="2.8" class="anchored" data-anchor-id="conclusion"><span class="header-section-number">2.8</span> Conclusion</h2>
<p>This workflow ensures that changes to the package are properly tested, documented, and integrated. The GitHub Actions automation provides confidence that the package works across different environments and maintains high-quality documentation.</p>
<p>Would you like me to expand on any particular aspect of this workflow?</p>
<p>Here’s an additional section for the blog post with references:</p>
</section>
<section id="further-reading-and-resources" class="level2" data-number="2.9">
<h2 data-number="2.9" class="anchored" data-anchor-id="further-reading-and-resources"><span class="header-section-number">2.9</span> Further Reading and Resources</h2>
<section id="git-fundamentals" class="level3" data-number="2.9.1">
<h3 data-number="2.9.1" class="anchored" data-anchor-id="git-fundamentals"><span class="header-section-number">2.9.1</span> Git Fundamentals</h3>
<ul>
<li><a href="https://git-scm.com/book/en/v2">Pro Git Book</a> - The official and comprehensive guide to Git</li>
<li><a href="https://guides.github.com/introduction/git-handbook/">Git Handbook</a> - GitHub’s introduction to Git basics</li>
<li><a href="https://ohshitgit.com/">Oh Shit, Git!?!</a> - Practical solutions for common Git mistakes</li>
</ul>
</section>
<section id="r-package-development" class="level3" data-number="2.9.2">
<h3 data-number="2.9.2" class="anchored" data-anchor-id="r-package-development"><span class="header-section-number">2.9.2</span> R Package Development</h3>
<ul>
<li><a href="https://r-pkgs.org/">R Packages (2e)</a> by Hadley Wickham and Jenny Bryan</li>
<li><a href="https://cran.r-project.org/doc/manuals/r-release/R-exts.html">Writing R Extensions</a> - The official R manual for package development</li>
<li><a href="https://devtools.r-lib.org/">devtools documentation</a> - Comprehensive guide to the devtools package</li>
</ul>
</section>
<section id="github-actions-1" class="level3" data-number="2.9.3">
<h3 data-number="2.9.3" class="anchored" data-anchor-id="github-actions-1"><span class="header-section-number">2.9.3</span> GitHub Actions</h3>
<ul>
<li><a href="https://github.com/r-lib/actions">GitHub Actions for R</a> - r-lib’s collection of GitHub Actions for R</li>
<li><a href="https://docs.github.com/en/actions">GitHub Actions Documentation</a> - Official documentation</li>
<li><a href="https://usethis.r-lib.org/articles/articles/usethis-github-action-examples.html">GitHub Actions for R packages</a> - Examples from the usethis package</li>
</ul>
</section>
<section id="testing-in-r" class="level3" data-number="2.9.4">
<h3 data-number="2.9.4" class="anchored" data-anchor-id="testing-in-r"><span class="header-section-number">2.9.4</span> Testing in R</h3>
<ul>
<li><a href="https://testthat.r-lib.org/">testthat documentation</a> - The standard testing framework for R</li>
<li><a href="https://r-pkgs.org/tests.html">Testing R packages</a> - Chapter from R Packages book</li>
<li><a href="https://covr.r-lib.org/">covr documentation</a> - For understanding test coverage</li>
</ul>
</section>
<section id="package-documentation" class="level3" data-number="2.9.5">
<h3 data-number="2.9.5" class="anchored" data-anchor-id="package-documentation"><span class="header-section-number">2.9.5</span> Package Documentation</h3>
<ul>
<li><a href="https://roxygen2.r-lib.org/">roxygen2 documentation</a> - For writing package documentation</li>
<li><a href="https://pkgdown.r-lib.org/">pkgdown documentation</a> - For creating package websites</li>
<li><a href="https://style.tidyverse.org/documentation.html">Documentation guide</a> from the tidyverse style guide</li>
</ul>
</section>
<section id="interactive-learning" class="level3" data-number="2.9.6">
<h3 data-number="2.9.6" class="anchored" data-anchor-id="interactive-learning"><span class="header-section-number">2.9.6</span> Interactive Learning</h3>
<ul>
<li><a href="https://skills.github.com/">GitHub Skills</a> - Interactive courses for learning GitHub</li>
<li><a href="https://try.github.io/">Try Git</a> - Resources to learn Git</li>
<li><a href="https://lab.github.com/">GitHub Learning Lab</a> - Interactive GitHub tutorials</li>
</ul>
<p>These resources range from beginner-friendly introductions to detailed technical references, allowing readers to dive deeper into any aspect of the workflow that interests them.</p>
<p>The official and comprehensive guide to Git is available in the Pro Git Book <span class="citation" data-cites="progit">Chacon and Straub (2014)</span>. GitHub provides an excellent introduction through their Git Handbook <span class="citation" data-cites="githandbook"><span>“Git Handbook”</span> (2024)</span>. For practical solutions to common Git problems, the Oh Shit, Git!?! guide <span class="citation" data-cites="ohshitgit">Sylor-Miller (2024)</span> is invaluable.</p>
<p>The definitive guide is “R Packages (2e)” by Hadley Wickham and Jenny Bryan <span class="citation" data-cites="rpackages">Wickham and Bryan (2023)</span>. The official manual for package development is “Writing R Extensions” <span class="citation" data-cites="rextensions"><em>Writing r Extensions</em> (2024)</span>. For practical development tools, see the devtools documentation <span class="citation" data-cites="devtools">Wickham et al. (2024a)</span>.</p>
<p>The r-lib collection of GitHub Actions for R <span class="citation" data-cites="ractions"><span>“GitHub Actions for r”</span> (2024)</span> provides essential tools. The official GitHub Actions documentation <span class="citation" data-cites="githubactions"><span>“GitHub Actions Documentation”</span> (2024)</span> offers comprehensive coverage. The usethis package provides practical examples <span class="citation" data-cites="usethisactions"><span>“GitHub Actions for r Packages”</span> (2024)</span>.</p>
<p>The standard testing framework is documented in testthat <span class="citation" data-cites="testthat">Wickham (2024a)</span>. For comprehensive coverage of testing, see the testing chapter in R Packages <span class="citation" data-cites="rpackages">Wickham and Bryan (2023)</span>. Understanding test coverage is explained in the covr documentation <span class="citation" data-cites="covr">Hester (2024)</span>.</p>
<p>Package documentation tools include roxygen2 <span class="citation" data-cites="roxygen2">Wickham et al. (2024c)</span> and pkgdown <span class="citation" data-cites="pkgdown">Wickham et al. (2024b)</span>. The tidyverse style guide provides documentation standards <span class="citation" data-cites="tidyversestyle">Wickham (2024b)</span>.</p>
<p>GitHub provides interactive learning through GitHub Skills <span class="citation" data-cites="githubskills"><span>“GitHub Skills”</span> (2024)</span> and GitHub Learning Lab <span class="citation" data-cites="githublab"><span>“GitHub Learning Lab”</span> (2024)</span>. The Try Git resources <span class="citation" data-cites="trygit"><span>“Try Git”</span> (2024)</span> offer hands-on practice.</p>
</section>
</section>
</section>
<section id="references" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> References</h1>
<section id="prerequisites" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">3.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">3.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">3.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="3.4">
<h2 data-number="3.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">3.4</span> Further Reading</h2>
<p>In development</p>



</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-progit" class="csl-entry">
Chacon, Scott, and Ben Straub. 2014. <em>Pro Git</em>. 2nd ed. Apress. <a href="https://git-scm.com/book/en/v2">https://git-scm.com/book/en/v2</a>.
</div>
<div id="ref-githandbook" class="csl-entry">
<span>“Git Handbook.”</span> 2024. GitHub. 2024. <a href="https://guides.github.com/introduction/git-handbook/">https://guides.github.com/introduction/git-handbook/</a>.
</div>
<div id="ref-githubactions" class="csl-entry">
<span>“GitHub Actions Documentation.”</span> 2024. GitHub. 2024. <a href="https://docs.github.com/en/actions">https://docs.github.com/en/actions</a>.
</div>
<div id="ref-ractions" class="csl-entry">
<span>“GitHub Actions for r.”</span> 2024. r-lib. 2024. <a href="https://github.com/r-lib/actions">https://github.com/r-lib/actions</a>.
</div>
<div id="ref-usethisactions" class="csl-entry">
<span>“GitHub Actions for r Packages.”</span> 2024. usethis. 2024. <a href="https://usethis.r-lib.org/articles/articles/usethis-github-action-examples.html">https://usethis.r-lib.org/articles/articles/usethis-github-action-examples.html</a>.
</div>
<div id="ref-githublab" class="csl-entry">
<span>“GitHub Learning Lab.”</span> 2024. GitHub. 2024. <a href="https://lab.github.com/">https://lab.github.com/</a>.
</div>
<div id="ref-githubskills" class="csl-entry">
<span>“GitHub Skills.”</span> 2024. GitHub. 2024. <a href="https://skills.github.com/">https://skills.github.com/</a>.
</div>
<div id="ref-covr" class="csl-entry">
Hester, Jim. 2024. <span>“Covr: Test Coverage for r Packages.”</span> 2024. <a href="https://covr.r-lib.org/">https://covr.r-lib.org/</a>.
</div>
<div id="ref-ohshitgit" class="csl-entry">
Sylor-Miller, Katie. 2024. <span>“Oh Shit, Git!?!”</span> 2024. <a href="https://ohshitgit.com/">https://ohshitgit.com/</a>.
</div>
<div id="ref-trygit" class="csl-entry">
<span>“Try Git.”</span> 2024. GitHub. 2024. <a href="https://try.github.io/">https://try.github.io/</a>.
</div>
<div id="ref-devtools" class="csl-entry">
Wickham, Hadley et al. 2024a. <span>“Devtools: Tools to Make Developing r Packages Easier.”</span> 2024. <a href="https://devtools.r-lib.org/">https://devtools.r-lib.org/</a>.
</div>
<div id="ref-pkgdown" class="csl-entry">
——— et al. 2024b. <span>“Pkgdown: Make Static HTML Documentation for an r Package.”</span> 2024. <a href="https://pkgdown.r-lib.org/">https://pkgdown.r-lib.org/</a>.
</div>
<div id="ref-roxygen2" class="csl-entry">
——— et al. 2024c. <span>“Roxygen2: In-Line Documentation for r.”</span> 2024. <a href="https://roxygen2.r-lib.org/">https://roxygen2.r-lib.org/</a>.
</div>
<div id="ref-testthat" class="csl-entry">
Wickham, Hadley. 2024a. <span>“Testthat: Unit Testing for r.”</span> 2024. <a href="https://testthat.r-lib.org/">https://testthat.r-lib.org/</a>.
</div>
<div id="ref-tidyversestyle" class="csl-entry">
———. 2024b. <span>“The Tidyverse Style Guide.”</span> 2024. <a href="https://style.tidyverse.org/documentation.html">https://style.tidyverse.org/documentation.html</a>.
</div>
<div id="ref-rpackages" class="csl-entry">
Wickham, Hadley, and Jenny Bryan. 2023. <em>R Packages (2nd Edition)</em>. O’Reilly. <a href="https://r-pkgs.org/">https://r-pkgs.org/</a>.
</div>
<div id="ref-rextensions" class="csl-entry">
<em>Writing r Extensions</em>. 2024. R Core Team. <a href="https://cran.r-project.org/doc/manuals/r-release/R-exts.html">https://cran.r-project.org/doc/manuals/r-release/R-exts.html</a>.
</div>
</div></section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald and Thomas, R.G.},
  title = {Update {R} Package Development Process},
  date = {2025-05-23},
  url = {https://focusonr.org/posts/r_code_package_updating_p34/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald, and R.G. Thomas. 2025. <span>“Update R
Package Development Process.”</span> May 23, 2025. <a href="https://focusonr.org/posts/r_code_package_updating_p34/">https://focusonr.org/posts/r_code_package_updating_p34/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/r_code_package_updating_p34/</guid>
  <pubDate>Fri, 23 May 2025 15:14:55 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/r_code_package_updating_p34/img/Rlogo.png" medium="image" type="image/png" height="135" width="144"/>
</item>
<item>
  <title>A Concise Strategy to get your Shiny App Online, Securely and Continuously Updated.</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/dockerize_compose/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://focusonr.org/posts/dockerize_compose/img/crane.jpg" class="img-fluid" alt="under construction"> <font size="1"> Photo by <a href="https://unsplash.com/@nathangwaters?utm_source=unsplash&amp;\
utm_medium=referral&amp;utm_content=creditCopyText">Nathan Waters</a> </font></p>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>This is the second in a series of posts offering suggested strategies for solving one of the central practical challenges in the practice of data science, i.e.&nbsp;how to effectively communicate analysis results to clients and collaborators. The strategies offered in this series of posts are all based on open source tools: e.g.&nbsp;<code>linux</code>, <code>R</code>, <code>Shiny</code>, <code>Docker</code>, <code>Git</code>, and <code>Caddy</code>. In this post we’ll make use of two cloud services: Gitlab and Amazon Web Service (AWS). Further posts will describe alternative cloud services, e.g.&nbsp;the low cost service: Hetzner.</p>
<p>A similarly straightforward strategy, but one that’ a bit simpler avoiding <code>Gitlab</code> and <code>docker</code> is described here <a href="https://focusonr.org/blog/dockerize_simple/">(here)</a>. This approach provides a simpler initial construction, but a more labor intensive updating process.</p>
<p>This post is a proof-of-concept example applying common open-source technologies with the goal of hosting an interactive Shiny application on a secure dedicated website. We start with a simple, stand-alone Shiny app on our local workstation, and end the process with the app running securely on a dedicated website with a custom domain name.</p>
</section>
<section id="methods" class="level1 page-columns page-full" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Methods</h1>
<p>We’ll start by creating a repository for the project on the version control cloud service <code>Gitlab</code>. We’ll then <code>clone</code> the repo to our local workstation to create a local workspace. More specifically, we’ll log into Gitlab and create a new empty private repo (see detail box below), call it, e.g.&nbsp;<code>power1_app</code>. Then on your local workstation navigate to a development directory, say e.g.&nbsp;<code>~/prj/shiny</code>, and clone the <code>power1_app</code> repo from Gitlab:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ~/prj/shiny</span>
<span id="cb1-2"> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://gitlab.com/rgt47/power1_app.git</span></code></pre></div>
<p>After cloning the repo change directories into <code>~/prj/shiny/power1_app</code> and create two new sub-directories, <code>power1_shiny</code> and <code>site</code>. These directories will house our shiny app and our web site landing page, respectively.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://focusonr.org/posts/dockerize_compose/img/gitlab1.png" class="img-fluid"></p>
</div></div><div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Details for creating a gitlab repo follow:
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<ul>
<li><p>Login to <code>gitlab</code> (see screenshot in margin)</p></li>
<li><p>Click on <code>New project</code>. In <code>repository name</code> field enter <code>power1_app</code>.</p></li>
<li><p>Make the repo private.</p></li>
<li><p>leave <code>deployment target</code> empty.</p></li>
<li><p>Click <code>Create project</code> (blue button) at the bottom of the page to create the repo.</p></li>
<li><p>On your local workstation <code>cd</code> to development directory, say ~/prj/shiny and clone the gitlab repo:</p></li>
<li><p>generate <code>gitlab_access_token</code>.</p></li>
</ul>
</div>
</div>
</div>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> power1_app</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> power1_shiny</span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> site</span></code></pre></div>
<p>Now begin <code>Shiny</code> code development in the <code>~/prj/shiny/power1_app/power1_shiny</code> directory. For this post we’ve written code for a simple <code>Shiny</code> app. See the <code>Shiny</code> code for our example <code>power1_shiny</code> app (<code>app.R</code>) below.</p>

<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/dockerize_compose/img/shinyapppower1.png" class="img-fluid figure-img" style="width:2.5in"></p>
<figcaption><em>Shiny app</em> shows the Shiny app running locally in a browser, it consists of a widget to select the sample size and provide a dynamic visualization (2D plot) of the statistical power as a function of the standardized effect size:</figcaption>
</figure>
</div>
</div></div><p>This example is a simple Shiny app that calculates the power for a 2-sample t-test as a function of the standardized effect size. The app is intentionally minimal. Using only base R functions. It has a minimum of reactive widgets and layout commands to keep it simple while still performing a useful function.</p>
<p>Figure 1 shows the Shiny app running locally in a browser, it consists of a widget to select the sample size and provide a dynamic visualization (2D plot) of the statistical power as a function of the standardized effect size:</p>
<p>The code is here:</p>
<details class="code-fold">
<summary>show the <code>power1_shiny/app.R</code> code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">titlePanel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Power Calculator for Two Group Parallel Designs"</span>),</span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sliderInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"N"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total Sample Size:"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>),</span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plot"</span>),</span>
<span id="cb3-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">verbatimTextOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"eff"</span>))</span>
<span id="cb3-6"></span>
<span id="cb3-7">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {</span>
<span id="cb3-8">  delta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">05</span>)</span>
<span id="cb3-9">  pow <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">reactive</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(delta, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">power.t.test</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>N, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">d=</span>x)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>power ))</span>
<span id="cb3-10">  eff <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderText</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">power.t.test</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>N, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">power=</span>.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>d)</span>
<span id="cb3-11">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderPlot</span>({</span>
<span id="cb3-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(delta, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pow</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"power"</span>)</span>
<span id="cb3-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h =</span> .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb3-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">v =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eff</span>(), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)})</span>
<span id="cb3-15">  output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>eff <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderText</span>(</span>
<span id="cb3-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Std. effect detectable with power 80% = "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">eff</span>()) )</span>
<span id="cb3-17">}</span>
<span id="cb3-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(ui, server)</span></code></pre></div>
</details>
<p>We can test the app locally in our development directory, <code>power1_app</code>, by runnning the following command.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> R <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"library(shiny); runApp('power1_shiny/app.R', launch=T)"</span></span></code></pre></div>
<p>This command will run the <code>R</code> program, load the <code>Shiny</code> package, run the Shiny program to convert the code to <code>HTML</code>, <code>CSS</code> and <code>Javascript</code> and launch the app in our default browser.</p>
<p>After determining the app is working as designed, the next steps are to dockerize the app and set up a secure host on the web, i.e.&nbsp;a server running a web-server supporting encryption and authentication.</p>

<div class="no-row-height column-margin column-container"><div class="">
<p>“A <strong>reverse proxy</strong> is a server, app, or cloud service that sits in f”ront of one or more web servers to intercept and inspect incoming client requests before forwarding them to the web server and subsequently returning the server’s response to the client.” <a href="https://www.zscaler.com/resources/security-terms-glossary/what-is-reverse-proxy
">reference</a></p>
</div></div><section id="hosting" class="level2 page-columns page-full" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="hosting"><span class="header-section-number">2.1</span> Hosting</h2>
<p>How to set up the hosting server? There are many ways to accomplish the hosting. Here we’ll describe a straightforward and efficient approach using mainstream cloud services and open source tools. In other words, we’ll describe how to ‘spin’ up a virtual server on Amazon Web Service EC2, and use Docker, R, Shiny, and Caddy to put in place a secure web app to share with our colleagues.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/dockerize_compose/img/compose_flow.png" class="img-fluid figure-img" width="500"></p>
<figcaption><em>Data flow</em></figcaption>
</figure>
</div>
<p>Figure 2 summarizes the flow of program and configuration files. In order to host <code>power1_app</code> online we’ll need to complete the following tasks:</p>
<p><em>Hosting List</em></p>
<ol type="1">
<li><p>Generate a virtual server with a firewall on EC2.</p></li>
<li><p>Obtain a static IPv4 address (to identify the server online)</p></li>
<li><p>Obtain a custom domain name (a name to associate with the static IP address) from a domain registration provider. E.g <code>rgtlab.org</code></p></li>
<li><p>Install and configure a webserver on the virtual server ( a tool to interact with https protocol requests )</p></li>
<li><p>Obtain and install a TLS (transport layer security) security certificate (to allow encrypted communication between the server and other machines on the network).</p></li>
<li><p>Configure user authentication for the web site.</p></li>
<li><p>configure a reverse proxy method (to translate <code>https</code>, port 443, requests to <code>Shiny</code>, port 3838, requests).</p></li>
</ol>

<div class="no-row-height column-margin column-container"><div class="">
<p><em>“What Is An SSL/TLS Certificate?</em></p>
<p><em>An <strong>SSL/TLS certificate</strong> is a digital object that allows systems to verify the identity &amp; subsequently establish an encrypted network connection to another system using the Secure Sockets Layer/Transport Layer Security (SSL/TLS) protocol. Certificates are used within a cryptographic system known as a public key infrastructure (PKI). PKI provides a way for one party to establish the identity of another party using certificates if they both trust a third-party - known as a certificate authority. SSL/TLS certificates thus act as digital identity cards to secure network communications, establish the identity of websites over the Internet as well as resources on private networks.”</em></p>
<p><font size="1"> <a href="https://aws.amazon.com/what-is/ssl-certificate/">reference</a> </font></p>
</div></div></section>
<section id="select-a-hosting-service" class="level2 page-columns page-full" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="select-a-hosting-service"><span class="header-section-number">2.2</span> Select a hosting service</h2>
<p>In this post we’ll describe the process using AWS EC2. Detailed instructions for setting up a server on EC2, both via the console and the command line interface are covered in earlier posts <a href="https://focusonr.org/posts/server_setup_aws_cli/">(here)</a> and <a href="https://focusonr.org/posts/server_setup_aws_console/">(here)</a>.</p>
<p>In brief, the process is as follows: To get started with <code>AWS</code> create an account or sign in to the <code>AWS EC2</code> dashboard. Once on the dashboard set up an environment in which to host the virtual server.</p>
<p>The components of this environment are: a ssh key-pair, a firewall, a static IP, and a domain name.</p>
<p>With the hosting environment in place, select an instance (AMI, type and disk size), then generate and launch the server.</p>
<p>Once the server is available, connect via ssh, and login.</p>
<p>The only software necessary to install at this point is <code>docker</code> (assuming it wasn’t installed in the server setup process). Install <code>docker</code> with the following commands:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> snap install docker.io</span></code></pre></div>

<div class="no-row-height column-margin column-container"><div class="">
<p>Note: <code>snap</code> is a package management system pre-installed in Ubuntu servers. Not to be confused with the <code>apt</code> package management system.</p>
</div></div><p>Once the host is set up and <code>docker</code> is installed, we’ll have accomplished items 1, 2, and 3 from our <code>hosting</code> list above. i.e.&nbsp;a customized virtual server wtih a static IP address, a unique domain name and firewall in place.</p>
</section>
</section>
<section id="configure" class="level1 page-columns page-full" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Configure</h1>
<p>To configure the web server and containerize our app we need to add three files to the repo, to go along with our Shiny app. We’ll also need a landing page for our web site.</p>
<p>We’ll use <code>Gitlab</code> as an intermediate repository between our workstation and the EC2 server in an indirect route to create and place the necessary files on the server. This approach will allow us to do all our continuing development on our local workstation and have the web app be automatically continually undated. We’ll create the configuration files we need on our workstation and push them to <code>Gitlab</code> and from there they can be accessed from our server.</p>
<p>These three configuation files are:</p>
<section id="docker" class="level2 page-columns page-full" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="docker"><span class="header-section-number">3.1</span> Docker</h2>

<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://focusonr.org/posts/dockerize_compose/img/docker1.jpg" class="img-fluid"> <font size="1"> Photo by <a href="https://unsplash.com/@carrier_lost?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Ian Taylor</a> on <a href="https://unsplash.com/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a> </font></p>
</div></div><p>We’ll use docker to access <code>R</code> and <code>Shiny</code>, and <code>docker-compose</code> to access <code>Caddy</code>, our webserver. The first file is the <code>dockerfile</code>. Here is our minimal <code>dockerfile</code> located in the <code>Shiny</code> development directory:</p>
<details class="code-fold">
<summary>show the <code>Dockerfile</code> code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1">FROM rocker<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>shiny<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>.<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.0</span></span>
<span id="cb6-2">RUN rm <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>rf <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>srv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>shiny<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>server</span>
<span id="cb6-3">COPY <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>power1_shiny<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>srv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>shiny<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>server<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span></span>
<span id="cb6-4">USER shiny</span>
<span id="cb6-5">CMD [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/usr/bin/shiny-server"</span>]</span></code></pre></div>
</details>
<p>This configuration file instructs Docker to build a container based on a Rocker/Shiny image (constructed as a ubuntu image with R and Shiny installed), then copy the <code>power1_shiny/app.R</code> code into the container and finally launch Shiny on (default) port 3838.</p>
<div class="page-columns page-full"><p></p><div class="no-row-height column-margin column-container"><span class="margin-aside">Note: We placed the <code>power1_shiny/app.R</code> code in the default location <code>/srv/shiny-server</code> so we only need to start the Shiny server and it will find the shiny program</span></div></div>
<p>Start by building and pushing the image to the <code>gitlab</code> container registry.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># login to gitlab</span></span>
<span id="cb7-2"></span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> gitlab_access_token <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> login <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-4">registry.gitlab.com <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> rgt47 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--password-stdin</span></span>
<span id="cb7-5"></span>
<span id="cb7-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-7">registry.gitlab.com/rgt47/power1_app/power1_image:v1.0 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-8">        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--platform</span> linux/x86_64 .</span>
<span id="cb7-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> push <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-10">registry.gitlab.com/rgt47/power1_app/power1_image:v1.0</span></code></pre></div>
</section>
<section id="web-server" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="web-server"><span class="header-section-number">3.2</span> Web-server</h2>
<p>One of the most challenging parts of setting up a standalone server is installling and configuring the web server this is because we need our web server to perform several functions” that is 1) Provide a method for receiving and processing packets from the internet 2) Restrict access to https protocol packets. 3) host web-certificates, 4) provide authentication, and 5) forward 443 packets to 3838.</p>
<p>A <code>Caddy</code> web server configuration file (default name <code>Caddyfile</code>)</p>
<p>We’ll use <code>Caddy</code> as our web server. <code>Caddy</code> is an open-source tool that has the very useful feature of automating the acquisition and installing of an SSL certificate. (An <code>SSL</code> cert is required by most browsers to use the encrypted communication protocol https.)</p>
<p>We use the caddy configuration file to specify three critical things.</p>
<ol type="1">
<li>the site domain name.</li>
<li>the ‘reverse proxy’ map that redirects requests to port 443 (ssl port) to port 3838 (Shiny port).</li>
<li>add login credentials for all users (e.g.&nbsp;bob/vanilla47):</li>
</ol>
<p>Our barebones <code>Caddyfile</code> looks like this:</p>
<details class="code-fold">
<summary>Show the <code>Caddyfile</code> code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use caddy auth tool to generate a password via the `bcrypt` algorithm.</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># &gt; caddy hash-password --plaintext hiccup</span></span>
<span id="cb8-3"></span>
<span id="cb8-4">rgtlab.org {</span>
<span id="cb8-5">basicauth <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>power1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> {</span>
<span id="cb8-6">    Bob <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>a<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Zkx19XLiW6VYouLHR5NmfOFU0z2GTNmpkT<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>qqR7hx4IjWJPDhjvG</span>
<span id="cb8-7">}</span>
<span id="cb8-8">    root <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>srv</span>
<span id="cb8-9">    handle_path <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>power1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> {</span>
<span id="cb8-10">        reverse_proxy power1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3838</span></span>
<span id="cb8-11">    }</span>
<span id="cb8-12">    file_server</span>
<span id="cb8-13">}</span></code></pre></div>
</details>
<p>We can accomplish what we need for items 4, 5, and 7 through the Caddyfile.</p>
<p>Note:</p>
<ul>
<li>rgtlab.org is our domain name</li>
<li><code>handle_path</code> maps all https requests to port 3838 where Shiny is listening.</li>
</ul>
<p>Providing our servers domain name, <code>rgtlab.org</code> is sufficient to initiate an exchange with the <code>letsencrypt</code> service to generate an SSL certificate.</p>
</section>
<section id="docker-compose" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="docker-compose"><span class="header-section-number">3.3</span> Docker Compose</h2>
<p>And a third file is a config file for Docker Compose. Docker Compose is a Docker module that provides a framework for running multi-container applications. This docker compose YAML file instructs Docker to containerize our Shiny app, pull a caddy webserver image from Docker Hub and create a local network for the two containers to communicate in.</p>
<p>A Docker-compose configuration file (default name <code>docker-compose.yml</code>).</p>
<p>The <code>docker-compose.yml</code> file:</p>
<details class="code-fold">
<summary><code>docker-compose.yml</code>. Show the code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">version<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3.7"</span></span>
<span id="cb9-2"></span>
<span id="cb9-3">services<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-4">  power1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-5">    image<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> registry.gitlab.com<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>rgt47<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>power1_app<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>power1_image<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>v1<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.0</span></span>
<span id="cb9-6">    restart<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> unless<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>stopped</span>
<span id="cb9-7">    expose<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-8">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3838"</span></span>
<span id="cb9-9">  caddy<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-10">    image<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> caddy<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>.<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.4</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>alpine</span>
<span id="cb9-11">    restart<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> always</span>
<span id="cb9-12">    ports<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-13">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"443:443"</span></span>
<span id="cb9-14">    volumes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-15">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">$</span>PWD<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Caddyfile<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>etc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>caddy<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>Caddyfile</span>
<span id="cb9-16">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">$</span>PWD<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>site<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>srv</span>
<span id="cb9-17">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> caddy_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>data</span>
<span id="cb9-18">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> caddy_config<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>config</span>
<span id="cb9-19">    depends_on<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-20">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> power1</span>
<span id="cb9-21">    environment<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-22">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> HOST<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgtlab.org"</span></span>
<span id="cb9-23">      <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> EMAIL<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rgthomas@ucsd.edu"</span></span>
<span id="cb9-24">volumes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-25">  caddy_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb9-26">  caddy_config<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span></code></pre></div>
</details>
</section>
<section id="landing-page" class="level2" data-number="3.4">
<h2 data-number="3.4" class="anchored" data-anchor-id="landing-page"><span class="header-section-number">3.4</span> Landing Page</h2>
<p>Lastly, we need an html file, <code>index.html</code> in a subdirectory named <code>site</code> that provides the landing page for our server.</p>
<details class="code-fold">
<summary><code>index.html</code>. Show the code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;!</span>DOCTYPE html<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-2"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>html<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-3">  <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>head<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-4">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>meta charset<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utf-8"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-5">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>meta http<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>equiv<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X-UA-Compatible"</span> content<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IE=edge"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-6">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>meta name<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"viewport"</span> content<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"width=device-width, initial-scale=1"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-7">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>title<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>Power Calculators<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>title<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-8">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>link rel<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stylesheet"</span> href<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://unpkg.com/bulma@0.9.0/css/bulma.min.css"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-9">  <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span>head<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-10">  <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>body<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-11">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>div id<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"app"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-12">      <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>section class<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hero is-small"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-13">        <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>div class<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hero-body"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-14">          <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>div class<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"container has-text-centered"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-15">            <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>h1 class<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>RGT Lab Power Calculators<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>h1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-16">          <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span>div<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-17">        <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span>div<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-18">      <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span>section<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-19">            <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>hr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-20"></span>
<span id="cb10-21">            <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>div class<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"columns"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-22">              <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>div class<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"column is-4 is-offset-1"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-23">      <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>img src<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/rgt47/power0/blob/master/power1.png?raw=true"</span></span>
<span id="cb10-24">        width<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"200"</span> height<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"250"</span>  ”float<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> left; padding<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>px <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>px <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>px <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>px;” <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-25">              <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span>div<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-26">              <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>div class<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"column is-6"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-27">                <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>h1 class<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> Power1 App <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>h1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-28">                <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>p<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> Power <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> two<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>sample t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>test <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>p<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-29">                <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>br<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-30">                <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span>a href<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./rebecca/"</span> class<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"button is-info"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>Go to app<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">/</span>a<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-31">              <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span>div<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-32">            <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span>div<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-33"></span>
<span id="cb10-34">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span>div<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-35">  <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span>body<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-36"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span>html<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
</details>
<p>At this point our <code>power1_app</code> repo looks like this:</p>
<pre class="text"><code>.
├── Caddyfile
├── Dockerfile
├── docker-compose.yml
└── site
    └── index.html</code></pre>
</section>
</section>
<section id="gitlab" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Gitlab</h1>
<p>Push the new content to gitlab.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push</span></code></pre></div>
<p>Login to <code>gitlab</code> and issue a personal access token. Save it as <code>gitlab_access_token</code> in the <code>power1_app</code> directory.</p>
<p>Next login to the virtual server and clone the repo from gitlab.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ssh</span> rgtlab.org</span>
<span id="cb13-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> gitlab_access_token <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb13-3">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> login registry.gitlab.com <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> rgt47 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--password-stdin</span></span>
<span id="cb13-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://gitlab.com/rgt47/power1_app.git</span></code></pre></div>
<p>Lastly, cd into <code>power1_app</code> directory and run</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> compose up <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span></span></code></pre></div>
<p>and you’re good to go! The <code>power1_shiny</code> app is available at:</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">https://rgtlab.org/</span></span></code></pre></div>
</section>
<section id="appendices" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Appendices</h1>
<section id="tip-1.-docker-on-m1-macbook." class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="tip-1.-docker-on-m1-macbook."><span class="header-section-number">5.1</span> Tip 1. Docker on M1 macbook.</h2>
<p>To get docker functioning properly with <code>rocker</code> images on M1 Mac desktop use <code>--platform</code> option.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> power1_shiny <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--platform</span> linux/x86_64 .</span>
<span id="cb16-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> run <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> 80:3838 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--platform</span> linux/x86_64 power1_shiny</span></code></pre></div>
</section>
<section id="tip-2-add-user-to-docker-group-on-server." class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="tip-2-add-user-to-docker-group-on-server."><span class="header-section-number">5.2</span> Tip 2 add user to docker group on server.</h2>
<p>Add ubuntu to the docker group to allow docker to run without sudo.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> usermod <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-aG</span> docker <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${USER}</span></span></code></pre></div>
</section>
<section id="tip-3-ssh-config-file." class="level2" data-number="5.3">
<h2 data-number="5.3" class="anchored" data-anchor-id="tip-3-ssh-config-file."><span class="header-section-number">5.3</span> Tip 3 ssh config file.</h2>
<p>For convenience, construct a <code>config</code> file in <code>~/.ssh</code> as:</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb18-1"></span>
<span id="cb18-2"></span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Host</span> rgtlab.org</span>
<span id="cb18-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">HostName</span> 13.57.139.31 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># static IP</span></span>
<span id="cb18-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">User</span> ubuntu <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># default user on ubuntu server</span></span>
<span id="cb18-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Port</span> 22  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the default port ssh uses</span></span>
<span id="cb18-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">IdentityFile</span> ~/.ssh/power1_app.pem</span></code></pre></div>
<p>then you can ssh into the new server with</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sh</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ssh rgtlab.org</span></code></pre></div>
</section>
</section>
<section id="references" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> References</h1>
<ul>
<li><a href="https://focusonr.org/posts/server_setup_aws_console/">Set up a virtual server on AWS (in anticipation of hosting Shiny apps)</a></li>
<li><a href="https://focusonr.org/posts/server_setup_aws_cli/">Set up a virtual server on AWS with AWS CLI</a></li>
<li><a href="https://hosting.analythium.io/shiny-apps-with-docker-compose-part-1-development/">Shiny Apps with Docker Compose, Part 1: Development</a></li>
<li><a href="https://hosting.analythium.io/shiny-apps-with-docker-compose-part-2-production/">Shiny Apps with Docker Compose, Part 2: Production</a></li>
</ul>
</section>
<section id="appendix" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> APPENDIX</h1>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb20-1"></span>
<span id="cb20-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">2023-12-02</span></span>
<span id="cb20-3"></span>
<span id="cb20-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">workflow.</span> steps to go from</span>
<span id="cb20-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">a</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">have</span> an idea for a shiny app to help julia</span>
<span id="cb20-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">to</span></span>
<span id="cb20-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">b</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">a</span> secure app available at https://rgtlab.org/julia_stats</span>
<span id="cb20-8"></span>
<span id="cb20-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">1.</span> log into gitlab to set up the private holding repositories:</span>
<span id="cb20-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rgt47/julia_data</span> and rgt47/julia_images</span>
<span id="cb20-11"></span>
<span id="cb20-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">################################################# in gitlab </span></span>
<span id="cb20-13"></span>
<span id="cb20-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span>   click on <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">New</span> project<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> in upper right corner. Then choose <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Create Blank</span></span>
<span id="cb20-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">  Project"</span>. </span>
<span id="cb20-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Then</span> in <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">repository</span> name<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> field enter <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">julia_data</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span>.</span>
<span id="cb20-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span>   leave <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">deployment</span> target<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> empty.</span>
<span id="cb20-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span>   make the repo private,</span>
<span id="cb20-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span>   Click <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Create</span> project<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">`</span> blue button at the bottom of the page </span>
<span id="cb20-20">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">to</span> create the repo.</span>
<span id="cb20-21"></span>
<span id="cb20-22"> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">repeat</span> for a second project named julia_images.</span>
<span id="cb20-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make</span> project public </span>
<span id="cb20-24"></span>
<span id="cb20-25"></span>
<span id="cb20-26"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">create</span> a personal access token as follows: </span>
<span id="cb20-27"></span>
<span id="cb20-28"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">left</span> sidebar click avatar.</span>
<span id="cb20-29"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">edit</span> profile</span>
<span id="cb20-30">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">access</span> tokens</span>
<span id="cb20-31">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">click</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"add new token"</span></span>
<span id="cb20-32">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">name:</span> julia_prj</span>
<span id="cb20-33">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">expiration</span> date: one month 9/28/24</span>
<span id="cb20-34">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">scope:</span> api</span>
<span id="cb20-35"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">copy</span> token to clipboard</span>
<span id="cb20-36"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">looks</span> something like this: </span>
<span id="cb20-37"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">glpat-hUKXsZKkhVAb4CT7hTZj</span></span>
<span id="cb20-38"></span>
<span id="cb20-39"></span>
<span id="cb20-40"></span>
<span id="cb20-41"></span>
<span id="cb20-42"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">back</span> on laptop</span>
<span id="cb20-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">################################################# on laptop </span></span>
<span id="cb20-44"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone both new directories to ~/sbx</span>
<span id="cb20-45"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://gitlab.com/rgt47/julia_data.git</span>
<span id="cb20-46"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://gitlab.com/rgt47/julia_images.git</span>
<span id="cb20-47"></span>
<span id="cb20-48"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> julia_data</span>
<span id="cb20-49"></span>
<span id="cb20-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create gitlab personal token file. </span></span>
<span id="cb20-51"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> gitlab_token_julia</span>
<span id="cb20-52"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">glpat-hUKXsZKkhVAb4CT7hTZj</span></span>
<span id="cb20-53"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">^D</span></span>
<span id="cb20-54"></span>
<span id="cb20-55"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> shiny_app</span>
<span id="cb20-56"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> website</span>
<span id="cb20-57"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> shiny_app</span>
<span id="cb20-58"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">develop</span> shiny code <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">app.R</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">in</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">shiny_app</span> directory.</span>
<span id="cb20-59"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">run</span> code to validate.</span>
<span id="cb20-60"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">R</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"library(shiny); runApp('app.R', launch=T)"</span></span>
<span id="cb20-61"></span>
<span id="cb20-62"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> back up to repo root</span>
<span id="cb20-63"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ~/sbx/julia_data</span>
<span id="cb20-64"></span>
<span id="cb20-65"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">create</span> dockerfile :</span>
<span id="cb20-66"></span>
<span id="cb20-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Dockerfile</span></span>
<span id="cb20-68"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">FROM</span> rocker/shiny:4.2.0</span>
<span id="cb20-69"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">RUN</span> rm <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-rf</span> /srv/shiny-server</span>
<span id="cb20-70"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">COPY</span> /shiny_app/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> /srv/shiny-server/</span>
<span id="cb20-71"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">USER</span> shiny</span>
<span id="cb20-72"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">CMD</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/usr/bin/shiny-server"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb20-73"></span>
<span id="cb20-74"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">run</span> docker build</span>
<span id="cb20-75"></span>
<span id="cb20-76"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> build <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> registry.gitlab.com/rgt47/julia_data/shiny_image:v1.0 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--platform</span> linux/x86_64 .</span>
<span id="cb20-77"></span>
<span id="cb20-78"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">push</span> image to gitlab</span>
<span id="cb20-79"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># login to gitlab</span></span>
<span id="cb20-80"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> gitlab_token <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> login registry.gitlab.com <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> rgt47 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--password-stdin</span></span>
<span id="cb20-81"></span>
<span id="cb20-82"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> push registry.gitlab.com/rgt47/julia_data/shiny_image:v1.0</span>
<span id="cb20-83"></span>
<span id="cb20-84"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">create</span> Caddyfile, docker-compose.yml, website/index.html</span>
<span id="cb20-85"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">see</span> end of this section for examples<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb20-86"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># push julia_data content to github</span></span>
<span id="cb20-87"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add .</span>
<span id="cb20-88"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"commit support files for Shiny app."</span></span>
<span id="cb20-89"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push</span>
<span id="cb20-90"></span>
<span id="cb20-91"></span>
<span id="cb20-92"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">spin-up</span> server on aws rgtlab.org</span>
<span id="cb20-93"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">need</span> keypair, security group, and instance <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">other</span> parameters known:</span>
<span id="cb20-94"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">vpc</span> id, subnet id, ami id, storage size, static ip</span>
<span id="cb20-95"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">***</span> make sure static IP is available and domain name and IP are associated</span>
<span id="cb20-96"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">before</span> beginning instance install</span>
<span id="cb20-97"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ~/bin/aws/aws_create_keypair.sh <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-k</span> julia_app</span>
<span id="cb20-98"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">key_pair_name</span> is julia_app</span>
<span id="cb20-99"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ~/bin/aws/aws_create_security_group.sh <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-s</span> julia_app</span>
<span id="cb20-100"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">error</span> in command line parsing. Expect options n and p</span>
<span id="cb20-101"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ~/bin/aws/aws_create_security_group.sh <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-n</span> julia_app <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> 22 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> 443</span>
<span id="cb20-102"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">sg</span> group name = julia_app</span>
<span id="cb20-103"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">security</span> group ID = sg-008cace70d32f6267</span>
<span id="cb20-104"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> vz <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">vim</span> .zshrc<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb20-105"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#update sg id and project name in .zshrc and source</span></span>
<span id="cb20-106"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> sz <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> .zshrc<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb20-107"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ~/bin/aws/aws_create_instance.sh <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-p</span> julia_app</span>
<span id="cb20-108"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">i-06c9b50e6c6e03874</span></span>
<span id="cb20-109"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">should</span> be only one instance id. if more than one, check aws console for multiple</span>
<span id="cb20-110"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">instances</span> with same prj name</span>
<span id="cb20-111"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">wait</span> 15 seconds for instance to generate and then associate static IP</span>
<span id="cb20-112"></span>
<span id="cb20-113"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">check</span> ~/.ssh/config to be sure it has correct keypair name and IP</span>
<span id="cb20-114"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">address.</span></span>
<span id="cb20-115"></span>
<span id="cb20-116"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># check that domain name, hostname, and secret key are correct</span></span>
<span id="cb20-117"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Host</span> rgtlab.org</span>
<span id="cb20-118">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">HostName</span> 13.56.101.209</span>
<span id="cb20-119">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">StrictHostKeyChecking</span> no</span>
<span id="cb20-120">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">User</span> ubuntu</span>
<span id="cb20-121">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Port</span> 22</span>
<span id="cb20-122">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">IdentityFile</span> ~/.ssh/julia_app.pem</span>
<span id="cb20-123"></span>
<span id="cb20-124">   <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">should</span> be able to log in as</span>
<span id="cb20-125">   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> ssh <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rgtlab.org</span></span>
<span id="cb20-126"></span>
<span id="cb20-127"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scp</span> files to rgtlab for</span>
<span id="cb20-128"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gitlab</span> access</span>
<span id="cb20-129"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> scp <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gitlab_token</span> rgtlab.org:~</span>
<span id="cb20-130"></span>
<span id="cb20-131"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">login</span> to rgtlab.org</span>
<span id="cb20-132"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">check</span> aws_start_up code worked</span>
<span id="cb20-133"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> /var/log/cloud-init-output.log</span>
<span id="cb20-134"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">clone</span> the code directory from gitlab</span>
<span id="cb20-135"></span>
<span id="cb20-136"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://gitlab.com/rgt47/julia_data.git</span>
<span id="cb20-137"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">login</span> for docker</span>
<span id="cb20-138"></span>
<span id="cb20-139"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">:</span>~/julia_data$ docker login registry.gitlab.com <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> rgt47 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> glpat-hUKXsZKkhVAb4CT7hTZj</span>
<span id="cb20-140"></span>
<span id="cb20-141"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">registry.gitlab.com/rgt47/julia_data/shiny_image:v1.0</span></span>
<span id="cb20-142"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> compose stop</span>
<span id="cb20-143"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> compose rm <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span></span>
<span id="cb20-144"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> compose pull</span>
<span id="cb20-145"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker</span> compose up <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-d</span></span>
<span id="cb20-146"></span>
<span id="cb20-147"></span>
<span id="cb20-148"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">~/master-repo</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">main</span> ✘<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">✖✹</span> ᐅ cat Caddyfile</span>
<span id="cb20-149"></span>
<span id="cb20-150"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rgtlab.org</span> {</span>
<span id="cb20-151"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">basicauth</span> /julia/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> {</span>
<span id="cb20-152">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Bob</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$2</span>a<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$1</span>4<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$Zkx19XLiW6VYouLHR5NmfOFU0z2GTNmpkT</span>/5qqR7hx4IjWJPDhjvG</span>
<span id="cb20-153"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-154"></span>
<span id="cb20-155">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">root</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> /srv</span>
<span id="cb20-156">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">handle_path</span> /julia/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> {</span>
<span id="cb20-157">        <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">reverse_proxy</span> julia:3838</span>
<span id="cb20-158">    <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-159">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">file_server</span></span>
<span id="cb20-160"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-161"></span>
<span id="cb20-162"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> cat <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">docker-compose.yml</span></span>
<span id="cb20-163"></span>
<span id="cb20-164"></span>
<span id="cb20-165"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">version:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3.7"</span></span>
<span id="cb20-166"></span>
<span id="cb20-167"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">services:</span></span>
<span id="cb20-168">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">watchtower:</span></span>
<span id="cb20-169">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">container_name:</span> watchtower</span>
<span id="cb20-170">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">restart:</span> always</span>
<span id="cb20-171">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">environment:</span></span>
<span id="cb20-172">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">WATCHTOWER_POLL_INTERVAL:</span> 3600</span>
<span id="cb20-173">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">TZ:</span> America/Los_Angeles</span>
<span id="cb20-174">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">WATCHTOWER_CLEANUP:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"true"</span></span>
<span id="cb20-175">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">WATCHTOWER_DEBUG:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"true"</span></span>
<span id="cb20-176">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">image:</span> containrrr/watchtower</span>
<span id="cb20-177">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">volumes:</span></span>
<span id="cb20-178">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> /var/run/docker.sock:/var/run/docker.sock</span>
<span id="cb20-179">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> /home/ubuntu/.docker/config.json:/config.json</span>
<span id="cb20-180">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">julia:</span></span>
<span id="cb20-181">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">image:</span> registry.gitlab.com/rgt47/julia_data/shiny_image:v1.0</span>
<span id="cb20-182">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">restart:</span> unless-stopped</span>
<span id="cb20-183">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ports:</span></span>
<span id="cb20-184">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9000:3838"</span></span>
<span id="cb20-185">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">caddy:</span></span>
<span id="cb20-186">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">image:</span> caddy:2.6.4-alpine</span>
<span id="cb20-187">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ports:</span></span>
<span id="cb20-188">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"80:80"</span></span>
<span id="cb20-189">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"443:443"</span></span>
<span id="cb20-190">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">volumes:</span></span>
<span id="cb20-191">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PWD</span>/Caddyfile:/etc/caddy/Caddyfile</span>
<span id="cb20-192">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PWD</span>/website:/srv</span>
<span id="cb20-193">      <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-</span> caddy_data:/data</span>
<span id="cb20-194"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">volumes:</span></span>
<span id="cb20-195">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">caddy_data:</span></span>
<span id="cb20-196"></span>
<span id="cb20-197"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">~/master-repo</span> <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">main</span> ✘<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">✖✹</span> ᐅ cat site/index.html</span>
<span id="cb20-198"></span>
<span id="cb20-199"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>!DOCTYPE <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">html</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-200"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>html<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-201">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>head<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-202">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>meta <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">charset</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"utf-8"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-203">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>meta <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">http-equiv=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X-UA-Compatible"</span> content=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IE=edge"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-204">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>meta <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"viewport"</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">content</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"width=device-width, initial-scale=1"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-205">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>Power <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Calculators</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-206">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>link <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">rel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stylesheet"</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">href</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://unpkg.com/bulma@0.9.0/css/bulma.min.css"</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-207">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/head<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-208">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>body<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-209">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>div <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"app"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-210">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>section <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hero is-small"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-211">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>div <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hero-body"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-212">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>div <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"container has-text-centered"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-213">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>h1 <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>RGT <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Lab</span> Power Calculators<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/h1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-214">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/div<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-215">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/div<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-216">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/section<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-217">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>hr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-218"></span>
<span id="cb20-219">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>div <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"columns"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-220">              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>div <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"column is-4 is-offset-1"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-221">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>img <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">src</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/rgt47/power0/blob/master/power1.png?raw=true"</span></span>
<span id="cb20-222">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"200"</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"250"</span>  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">”float:</span> left<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">padding:</span> 3px 3px 0px 3px<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">”</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-223">              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/div<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-224">              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>div <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"column is-6"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-225">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>h1 <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"title"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> Power1 <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">App</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/h1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-226">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> Power <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> two<span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-sample</span> t-test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-227">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>br<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-228">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>a <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">href</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./julia/"</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">class</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"button is-info"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>Go <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">to</span> app<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-229">              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/div<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-230">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/div<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-231"></span>
<span id="cb20-232"></span>
<span id="cb20-233">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/div<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-234">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/body<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-235"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>/html<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb20-236"></span></code></pre></div>
<section id="prerequisites" class="level2" data-number="7.1">
<h2 data-number="7.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">7.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="7.2">
<h2 data-number="7.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">7.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="7.3">
<h2 data-number="7.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">7.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="7.4">
<h2 data-number="7.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">7.4</span> Further Reading</h2>
<p>In development</p>


</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {A {Concise} {Strategy} to Get Your {Shiny} {App} {Online,}
    {Securely} and {Continuously} {Updated.}},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/dockerize_compose/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“A Concise Strategy to Get Your
Shiny App Online, Securely and Continuously Updated. .”</span> May 13,
2025. <a href="https://focusonr.org/posts/dockerize_compose/">https://focusonr.org/posts/dockerize_compose/</a>.
</div></div></section></div> ]]></description>
  <category>AWS</category>
  <category>Docker</category>
  <category>Shiny</category>
  <category>docker-compose</category>
  <guid>https://focusonr.org/posts/dockerize_compose/</guid>
  <pubDate>Wed, 14 May 2025 02:36:04 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/dockerize_compose/img/aws.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Making optimal use of ChatGPT and other chatbots for data science</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/chatbots_in_stats/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/chatbots_in_stats/img/chatgpt.png" class="img-fluid figure-img"></p>
<figcaption>chatGPT</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>When it comes to data science, having access to the right tools and resources can make a significant difference in the quality and efficiency of your work. Chatbots, such as ChatGPT, have emerged as powerful tools that can assist data scientists in various tasks, from data analysis and visualization to model building and evaluation. In this guide, we’ll explore how you can make optimal use of ChatGPT and other chatbots for data science tasks, providing tips and examples to help you leverage these tools effectively.</p>
<section id="whats-in-a-name" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="whats-in-a-name"><span class="header-section-number">1.1</span> Whats in a name?</h2>
<p>GPT in ChatGPT stands for Generative Pre-trained Transformer. • Generative: It generates text rather than just analyzing or classifying it. • Pre-trained: It is trained on a large dataset before being fine-tuned for specific tasks. • Transformer: It uses the Transformer architecture, a neural network model designed for natural language processing (NLP).</p>
<p>Essentially, ChatGPT is a chatbot built on a GPT model, which is designed to understand and generate human-like text based on prompts</p>
<p>From a recent article in Nature:</p>
<p>“ChatGPT stunned the world on its launch in November 2022. Powered by a large language model (LLM) and trained on much of the text published on the Internet, the artificial intelligence (AI) chatbot, created by OpenAI in San Francisco, California, makes the latest advances in natural-language processing broadly accessible by providing a dialogue-based interface capable of answering complex questions, composing sophisticated essays and generating source code. One obvious question was: how could this tool improve science?”</p>
<p><a href="https://www.nature.com/articles/d41586-024-02630-z?utm_source=Live+Audience&amp;utm_campaign=9cc439b1df-nature-briefing-daily-20240815&amp;utm_medium=email&amp;utm_term=0_b27a691814-9cc439b1df-50792172">Nature: Chatbots in science: What can ChatGPT do for you?</a></p>
<p>Lets start with a couple examples to get an idea of how to use ChatGPT for data science tasks.</p>
</section>
<section id="example-work-up-of-a-regression-analysis-for-the-iris-data-set." class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="example-work-up-of-a-regression-analysis-for-the-iris-data-set."><span class="header-section-number">1.2</span> Example work up of a regression analysis for the iris data set.</h2>
<ol type="1">
<li>Prompt: “I want to do a trial data analysis in R of the Fisher iris data set that is distributed with R. I want to start with logistic regression analysis and want to use K-fold cross-validation. I want to use an ROC curve to visualize the results.”</li>
</ol>
<p>comment: this is a good example of a prompt that is clear and specific. It provides many of the necessary context and requirements for the task. However, it is not completely unambiguous. It does not specify the number of folds for cross-validatikn. It also does not specify the R package to use for the aanalysis. There ae several to choose from.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">install.packages</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"caret"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install if not already installed</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">install.packages</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pROC"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install if not already installed</span></span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">install.packages</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glmnet"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install if not already installed</span></span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">library</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">caret</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">library</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pROC</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">library</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">glmnet</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prepare binary dataset</span></span>
<span id="cb1-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">data</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">iris</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">iris_binary</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- iris[iris<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$Species</span> != <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"setosa"</span>, ]</span>
<span id="cb1-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">iris_binary</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$Species</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- factor<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">iris_binary</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$Species</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Split the data into training and test sets</span></span>
<span id="cb1-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">set.seed</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">42</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">trainIndex</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- createDataPartition<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">iris_binary</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$Species</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> p = 0.8, list = FALSE<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">train_data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- iris_binary[trainIndex, ]</span>
<span id="cb1-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">test_data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- iris_binary[-trainIndex, ]</span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the data into matrix format as required by glmnet</span></span>
<span id="cb1-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">x_train</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- model.matrix<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Species</span> ~ ., train_data<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[,-1]</span></span>
<span id="cb1-21"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">y_train</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- train_data<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$Species</span></span>
<span id="cb1-22"></span>
<span id="cb1-23"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">x_test</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- model.matrix<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Species</span> ~ ., test_data<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[,-1]</span></span>
<span id="cb1-24"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">y_test</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- test_data<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$Species</span></span>
<span id="cb1-25"></span>
<span id="cb1-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up cross-validation for Lasso regression on the training data</span></span>
<span id="cb1-27"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">train_control</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- trainControl<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">method</span> = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cv"</span>, number = 10, classProbs = TRUE, summaryFunction = twoClassSummary<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-28"></span>
<span id="cb1-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the lasso model using glmnet (alpha=1 for Lasso)</span></span>
<span id="cb1-30"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lasso_model</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- train<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">x</span> = x_train, y = y_train, method = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glmnet"</span>, trControl = train_control, tuneGrid = expand.grid<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">alpha</span> = 1, lambda = seq<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">0.001,</span> 0.1, by = 0.001<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> family = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"binomial"</span>, metric = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ROC"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-31"></span>
<span id="cb1-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make predictions on the test set</span></span>
<span id="cb1-33"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">test_predictions</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- predict<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lasso_model,</span> newdata = x_test, type = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prob"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[,2]</span></span>
<span id="cb1-34"></span>
<span id="cb1-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot ROC curve for the test set</span></span>
<span id="cb1-36"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">roc_curve_test</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- roc<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">y_test,</span> test_predictions, levels = rev<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">levels</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">y_test</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)))</span></span>
<span id="cb1-37"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">plot</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">roc_curve_test,</span> col = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, lwd = 2, main = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ROC Curve for Lasso Regression on Test Data"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-38"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">v</span></span>
<span id="cb1-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate AUC and its 95% confidence interval</span></span>
<span id="cb1-40"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">auc_value</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- auc<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">roc_curve_test</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-41"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ci</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- ci.auc<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">roc_curve_test,</span> conf.level = 0.95<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb1-42"></span>
<span id="cb1-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add AUC with 95% confidence interval to the plot</span></span>
<span id="cb1-44"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">legend_text</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>- paste<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AUC ="</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> round<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">auc_value,</span> 2<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"\n95% CI:"</span>, round<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ci</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> 2<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span>, round<span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ci</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> 2<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">))</span></span>
<span id="cb1-45"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">legend</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottomright"</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">,</span> legend = legend_text, col = <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, lwd = 2<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div>
<p>On completion of the analysis, the user may have additional questions or requests. For example, they may ask why use 10 folds specifically? Or why split the 80:20? Why use the lasso regression model?</p>
<p>They can just ask the chatbot directly.</p>
<p>Pronpt: why split the data set if we’re doing 10-fold cross validation?</p>
<p>ChatGPT answer: ### <strong>Why Not Split?</strong> - <strong>10-fold CV inherently splits the data multiple times</strong><br>
- Each fold acts as a validation set once, while the remaining 9 folds serve as the training set. - Every observation is used for both training and testing across different iterations.</p>
<ul>
<li><strong>An additional 80:20 split is redundant</strong>
<ul>
<li>It would unnecessarily reduce the amount of data available for training.</li>
<li>K-fold CV already provides a better estimate of model performance.</li>
</ul></li>
</ul>
<section id="when-would-we-still-use-an-8020-split" class="level3" data-number="1.2.1">
<h3 data-number="1.2.1" class="anchored" data-anchor-id="when-would-we-still-use-an-8020-split"><span class="header-section-number">1.2.1</span> <strong>When Would We Still Use an 80:20 Split?</strong></h3>
<ul>
<li>If we want <strong>one final test set</strong> to evaluate model performance <strong>after tuning</strong> hyperparameters using K-fold CV.
<ul>
<li>Example: Use <strong>80% for training</strong>, perform <strong>10-fold CV on this training set</strong>, and then evaluate on the held-out <strong>20% test set</strong>.</li>
<li>This prevents <strong>data leakage</strong> and ensures the final model is evaluated on completely unseen data.</li>
</ul></li>
</ul>
<hr>
</section>
<section id="best-practice-for-model-selection" class="level3" data-number="1.2.2">
<h3 data-number="1.2.2" class="anchored" data-anchor-id="best-practice-for-model-selection"><span class="header-section-number">1.2.2</span> <strong>Best Practice for Model Selection</strong></h3>
<ol type="1">
<li><strong>Cross-validation alone (no 80:20 split)</strong>
<ul>
<li>When optimizing model parameters and assessing performance.<br>
</li>
<li>Avoids unnecessary data loss.<br>
</li>
<li>Every observation contributes to both training and validation.</li>
</ul></li>
<li><strong>80:20 Split + Cross-validation on training set</strong>
<ul>
<li>If we want to <strong>train the final model on the full dataset</strong>,<br>
</li>
<li>Then evaluate <strong>generalization</strong> on a completely independent holdout test set.</li>
</ul></li>
</ol>
<p>For your Fisher Iris dataset analysis, <strong>just using 10-fold CV is sufficient</strong> unless you plan to tune hyperparameters before a final evaluation. 🚀 for a 95% confidence interval calculationgM “should I split my data set into train and test parts if I’m using k-fold cross-validation?” “add a 95% confidence interval calculation to the AUC annotation in the ROC plot” “do the same analysis but use lasso regression instead of logistic regression”</p>
</section>
</section>
</section>
<section id="r-code" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> R code</h1>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load necessary packages</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Data manipulation</span></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(caret)       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># K-fold cross-validation</span></span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(pROC)        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ROC curve analysis</span></span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the Iris dataset</span></span>
<span id="cb2-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(iris)</span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter to create a binary classification problem</span></span>
<span id="cb2-10">iris_bin <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> iris <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(Species <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"virginica"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use only "setosa" and "versicolor"</span></span>
<span id="cb2-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Species =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(Species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"setosa"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"versicolor"</span>)))</span>
<span id="cb2-13"></span>
<span id="cb2-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up 10-fold cross-validation</span></span>
<span id="cb2-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For reproducibility</span></span>
<span id="cb2-16">cv_folds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createFolds</span>(iris_bin<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">list =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">returnTrain =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb2-17"></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store results</span></span>
<span id="cb2-19">roc_curves <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb2-20">predictions <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">actual =</span> iris_bin<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">predicted_prob =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)</span>
<span id="cb2-21"></span>
<span id="cb2-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Perform K-fold cross-validation</span></span>
<span id="cb2-23"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(cv_folds)) {</span>
<span id="cb2-24">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Split into training and test sets</span></span>
<span id="cb2-25">  train_index <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cv_folds[[i]]</span>
<span id="cb2-26">  train_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> iris_bin[train_index, ]</span>
<span id="cb2-27">  test_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> iris_bin[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>train_index, ]</span>
<span id="cb2-28">  </span>
<span id="cb2-29">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fit logistic regression model</span></span>
<span id="cb2-30">  model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glm</span>(Species <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> ., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> train_data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> binomial)</span>
<span id="cb2-31">  </span>
<span id="cb2-32">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make predictions (probability of being "versicolor")</span></span>
<span id="cb2-33">  test_probs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> test_data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"response"</span>)</span>
<span id="cb2-34">  </span>
<span id="cb2-35">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store predictions</span></span>
<span id="cb2-36">  predictions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>predicted_prob[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>train_index] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> test_probs</span>
<span id="cb2-37">  </span>
<span id="cb2-38">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute ROC curve</span></span>
<span id="cb2-39">  roc_curves[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">roc</span>(test_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species, test_probs, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">levels</span>(iris_bin<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species)))</span>
<span id="cb2-40">}</span>
<span id="cb2-41"></span>
<span id="cb2-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute mean ROC curve</span></span>
<span id="cb2-43">roc_avg <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">roc</span>(predictions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>actual, predictions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>predicted_prob, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">levels</span>(iris_bin<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species)))</span>
<span id="cb2-44"></span>
<span id="cb2-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot ROC curve</span></span>
<span id="cb2-46"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(roc_avg, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ROC Curve for Logistic Regression (Iris Data)"</span>)</span>
<span id="cb2-47"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">a =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">b =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gray"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Diagonal reference line</span></span></code></pre></div>
</section>
<section id="complete-r-code-for-lasso-regression-with-loocv-on-the-entire-dataset" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Complete R Code for Lasso Regression with LOOCV on the Entire Dataset</h1>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prepare binary dataset</span></span>
<span id="cb3-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(iris)</span>
<span id="cb3-4">iris_binary <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> iris[iris<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"setosa"</span>, ]</span>
<span id="cb3-5">iris_binary<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(iris_binary<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species)</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the data into matrix format as required by glmnet</span></span>
<span id="cb3-8">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">model.matrix</span>(Species <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> ., iris_binary)[,<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb3-9">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> iris_binary<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Species</span>
<span id="cb3-10"></span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up LOOCV for Lasso regression on the entire dataset</span></span>
<span id="cb3-12">train_control <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">trainControl</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LOOCV"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">classProbs =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">summaryFunction =</span> twoClassSummary)</span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the lasso model using glmnet (alpha=1 for Lasso)</span></span>
<span id="cb3-15">lasso_model <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">train</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glmnet"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trControl =</span> train_control, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tuneGrid =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">expand.grid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lambda =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span>)), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">family =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"binomial"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metric =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ROC"</span>)</span>
<span id="cb3-16"></span>
<span id="cb3-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make predictions using LOOCV</span></span>
<span id="cb3-18">predictions <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(lasso_model, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">newdata =</span> x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"prob"</span>)[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb3-19"></span>
<span id="cb3-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot ROC curve for the entire dataset</span></span>
<span id="cb3-21">roc_curve <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">roc</span>(y, predictions, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rev</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">levels</span>(y)))</span>
<span id="cb3-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(roc_curve, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ROC Curve for Lasso Regression with LOOCV"</span>)</span>
<span id="cb3-23"></span>
<span id="cb3-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate AUC and its 95% confidence interval</span></span>
<span id="cb3-25">auc_value <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">auc</span>(roc_curve)</span>
<span id="cb3-26">ci <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ci.auc</span>(roc_curve, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conf.level =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>)</span>
<span id="cb3-27"></span>
<span id="cb3-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add AUC with 95% confidence interval to the plot</span></span>
<span id="cb3-29">legend_text <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AUC ="</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(auc_value, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">95% CI:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(ci[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(ci[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb3-30"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottomright"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> legend_text, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</section>
<section id="todays-date-is-2024-11-10" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> today’s date is 2024-11-10</h1>
<p>Trying to get the vim plugin for openai to work. having trouble vim can’t find the python module OpenAI</p>
</section>
<section id="useful-prompts" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> useful prompts:</h1>
<p>Have chatGPT provide the README.md file as a download. “provide the README.md file as a download.”</p>
</section>
<section id="guide-to-building-submitting-and-managing-the-zzlongplot-r-package" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Guide to Building, Submitting, and Managing the <code>zzlongplot</code> R Package</h1>
<section id="step-1-setting-up-the-package-structure" class="level2" data-number="6.1">
<h2 data-number="6.1" class="anchored" data-anchor-id="step-1-setting-up-the-package-structure"><span class="header-section-number">6.1</span> Step 1: Setting Up the Package Structure</h2>
<ol type="1">
<li><strong>Create a New Package Directory</strong>:
<ul>
<li><p>Use <code>usethis</code> to create a package directory:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_package</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"path/to/zzlongplot"</span>)</span></code></pre></div></li>
<li><p>This sets up the necessary directory structure with folders like <code>R/</code> and files like <code>DESCRIPTION</code>.</p></li>
</ul></li>
<li><strong>Add the Core Script</strong>:
<ul>
<li>Place the <code>zzlongplot.R</code> file in the <code>R/</code> directory.</li>
</ul></li>
<li><strong>Set Up the <code>DESCRIPTION</code> File</strong>:
<ul>
<li><p>Edit the <code>DESCRIPTION</code> file to include metadata about the package. Use <code>usethis::use_description()</code> to create and fill this file:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use_description</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fields =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb5-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Flexible Longitudinal Plotting in R"</span>,</span>
<span id="cb5-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Description =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Provides tools for generating observed and change plots in longitudinal datasets."</span>,</span>
<span id="cb5-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Version =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.1.0"</span>,</span>
<span id="cb5-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Author =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Your Name [aut, cre]"</span>,</span>
<span id="cb5-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Maintainer =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Your Name &lt;your_email@example.com&gt;"</span>,</span>
<span id="cb5-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">License =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MIT"</span>,</span>
<span id="cb5-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Encoding =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UTF-8"</span></span>
<span id="cb5-9">))</span></code></pre></div></li>
</ul></li>
<li><strong>Add Dependencies</strong>:
<ul>
<li><p>List package dependencies in the <code>DESCRIPTION</code> file under <code>Imports</code>. For example:</p>
<pre class="plaintext"><code>Imports:
  dplyr,
  ggplot2,
  patchwork</code></pre></li>
</ul></li>
</ol>
<hr>
</section>
<section id="step-2-document-the-package" class="level2" data-number="6.2">
<h2 data-number="6.2" class="anchored" data-anchor-id="step-2-document-the-package"><span class="header-section-number">6.2</span> Step 2: Document the Package</h2>
<ol type="1">
<li><strong>Add Roxygen2 Comments</strong>:
<ul>
<li>Ensure all functions in <code>zzlongplot.R</code> have Roxygen2 comments for documentation.</li>
</ul></li>
<li><strong>Generate Documentation</strong>:
<ul>
<li><p>Run:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">document</span>()</span></code></pre></div></li>
<li><p>This creates help files in the <code>man/</code> directory and updates the <code>NAMESPACE</code> file.</p></li>
</ul></li>
<li><strong>Create a Vignette</strong>:
<ul>
<li><p>Add the vignette to introduce the package:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use_vignette</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Introduction_to_zzlongplot"</span>)</span></code></pre></div></li>
<li><p>Place the provided <code>zzlongplot-vignette.Rmd</code> file in the <code>vignettes/</code> directory and build it:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build_vignettes</span>()</span></code></pre></div></li>
</ul></li>
</ol>
<hr>
</section>
<section id="step-3-test-the-package" class="level2" data-number="6.3">
<h2 data-number="6.3" class="anchored" data-anchor-id="step-3-test-the-package"><span class="header-section-number">6.3</span> Step 3: Test the Package</h2>
<ol type="1">
<li><strong>Add Unit Tests</strong>:
<ul>
<li><p>Use <code>usethis</code> to set up a testing framework:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1">usethis<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use_testthat</span>()</span></code></pre></div></li>
<li><p>Place the <code>test-zzlongplot.R</code> file in <code>tests/testthat/</code>.</p></li>
</ul></li>
<li><strong>Run Tests</strong>:
<ul>
<li><p>Run all tests:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test</span>()</span></code></pre></div></li>
</ul></li>
</ol>
<hr>
</section>
<section id="step-4-check-the-package" class="level2" data-number="6.4">
<h2 data-number="6.4" class="anchored" data-anchor-id="step-4-check-the-package"><span class="header-section-number">6.4</span> Step 4: Check the Package</h2>
<ol type="1">
<li><strong>Build and Check</strong>:
<ul>
<li><p>Build the package:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build</span>()</span></code></pre></div></li>
<li><p>Check the package for CRAN compliance:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">check</span>()</span></code></pre></div></li>
</ul></li>
<li><strong>Fix Issues</strong>:
<ul>
<li>Address any warnings or errors reported by <code>devtools::check()</code>.</li>
</ul></li>
</ol>
<hr>
</section>
<section id="step-5-submit-to-cran" class="level2" data-number="6.5">
<h2 data-number="6.5" class="anchored" data-anchor-id="step-5-submit-to-cran"><span class="header-section-number">6.5</span> Step 5: Submit to CRAN</h2>
<ol type="1">
<li><strong>Prepare for Submission</strong>:
<ul>
<li><p>Ensure the package passes <code>R CMD check</code> with no warnings, errors, or notes.</p></li>
<li><p>Compress the package into a <code>.tar.gz</code> file using:</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1">devtools<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">build</span>()</span></code></pre></div></li>
</ul></li>
<li><strong>Submit to CRAN</strong>:
<ul>
<li>Go to the <a href="https://cran.r-project.org/submit.html">CRAN submission page</a>.</li>
<li>Upload the <code>.tar.gz</code> file and fill out the required metadata.</li>
</ul></li>
<li><strong>Respond to Feedback</strong>:
<ul>
<li>CRAN maintainers might request changes. Address them promptly and resubmit if needed.</li>
</ul></li>
</ol>
<hr>
</section>
<section id="step-6-set-up-a-github-repository" class="level2" data-number="6.6">
<h2 data-number="6.6" class="anchored" data-anchor-id="step-6-set-up-a-github-repository"><span class="header-section-number">6.6</span> Step 6: Set Up a GitHub Repository</h2>
<ol type="1">
<li><strong>Initialize a Git Repository</strong>:
<ul>
<li><p>In the package directory, run:</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> init</span>
<span id="cb15-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add .</span>
<span id="cb15-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Initial commit"</span></span></code></pre></div></li>
</ul></li>
<li><strong>Create a Repository on GitHub</strong>:
<ul>
<li><p>Use the GitHub website or the <code>gh</code> CLI tool:</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gh</span> repo create yourusername/zzlongplot <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--public</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--source</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>.</span></code></pre></div></li>
</ul></li>
<li><strong>Push the Code</strong>:
<ul>
<li><p>Push the code to GitHub:</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> branch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-M</span> main</span>
<span id="cb17-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> origin main</span></code></pre></div></li>
</ul></li>
</ol>
<hr>
</section>
<section id="step-7-manage-the-development-repository" class="level2" data-number="6.7">
<h2 data-number="6.7" class="anchored" data-anchor-id="step-7-manage-the-development-repository"><span class="header-section-number">6.7</span> Step 7: Manage the Development Repository</h2>
<ol type="1">
<li><strong>Add Version Control</strong>:
<ul>
<li><p>Use Git for version control. For example, create a branch for new features:</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb18-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> checkout <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-b</span> feature-new-plot</span></code></pre></div></li>
</ul></li>
<li><strong>Tag Releases</strong>:
<ul>
<li><p>Tag versions for releases:</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb19-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> tag <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-a</span> v0.1.0 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"First release"</span></span>
<span id="cb19-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push origin v0.1.0</span></code></pre></div></li>
</ul></li>
<li><strong>Add Continuous Integration</strong>:
<ul>
<li><p>Set up GitHub Actions for testing:</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">usethis::use_github_action_check_standard()</span></span></code></pre></div></li>
</ul></li>
<li><strong>Publish Development Versions</strong>:
<ul>
<li>Use GitHub to manage development versions and issues.</li>
</ul></li>
</ol>
<hr>
</section>
<section id="step-8-maintain-the-package" class="level2" data-number="6.8">
<h2 data-number="6.8" class="anchored" data-anchor-id="step-8-maintain-the-package"><span class="header-section-number">6.8</span> Step 8: Maintain the Package</h2>
<ol type="1">
<li><strong>Address Issues</strong>:
<ul>
<li>Monitor and address issues reported by users.</li>
</ul></li>
<li><strong>Update the Package</strong>:
<ul>
<li>For updates, increment the version number in <code>DESCRIPTION</code> and tag the new version.</li>
</ul></li>
</ol>
<hr>
</section>
<section id="prerequisites" class="level2" data-number="6.9">
<h2 data-number="6.9" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">6.9</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="6.10">
<h2 data-number="6.10" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">6.10</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="6.11">
<h2 data-number="6.11" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">6.11</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="6.12">
<h2 data-number="6.12" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">6.12</span> Further Reading</h2>
<p>In development</p>


</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Making Optimal Use of {ChatGPT} and Other Chatbots for Data
    Science},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/chatbots_in_stats/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Making Optimal Use of ChatGPT
and Other Chatbots for Data Science.”</span> May 13, 2025. <a href="https://focusonr.org/posts/chatbots_in_stats/">https://focusonr.org/posts/chatbots_in_stats/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/chatbots_in_stats/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/chatbots_in_stats/img/chatGPT" medium="image"/>
</item>
<item>
  <title>coding with genAI</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/coding_with_genAI/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/coding_with_genAI/img/chatgpt.png" class="img-fluid figure-img"></p>
<figcaption>quarto</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>start with notes from two blog posts:</p>
<p><a href="https://learnprompting.org/blog/how_to_use_generative_AI_for_code?srsltid=AfmBOor0napY262j0HcM1DHf3bsQA1cCtiO8t1HPaJmm2mu8d4K-NGxa">How to Use Generative AI for Coding: The Ultimate Guide for Every Programmer</a></p>
<p><a href="https://www.youtube.com/watch?v=b70ME9N-ct0&amp;t=14s">ChatGPT for Data Analysis - YouTube</a></p>
<section id="prerequisites" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">1.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">1.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">1.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">1.4</span> Further Reading</h2>
<p>In development</p>


</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Coding with {genAI}},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/coding_with_genAI/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Coding with genAI.”</span> May
13, 2025. <a href="https://focusonr.org/posts/coding_with_genAI/">https://focusonr.org/posts/coding_with_genAI/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/coding_with_genAI/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/coding_with_genAI/img/chatgpt.png" medium="image" type="image/png" height="81" width="144"/>
</item>
<item>
  <title>Configure the command line for data science development</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/config_term_zsh_p11/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/config_term_zsh_p11/img/iterm2.png" class="img-fluid figure-img"></p>
<figcaption>iterm2</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>The command line is a powerful tool for data science development. It allows you to interact with your computer in a way that is not possible with a graphical user interface. In this guide, we will show you how to configure the command line for data science development on both macOS and Linux.</p>
<p>On both macOS and linux, we will be using kitty as our terminal emulator and zsh as our shell.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">brew</span> install kitty</span></code></pre></div>
<p>Install kitty on Linux mint as follow:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt-get install kitty</span></code></pre></div>
<p>There are a huge number of configuration options for kitty. Here are the few that recommened to change for usability purposes.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ~/.config/kitty/kitty.conf</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">map</span> ctrl+shift+z       toggle_layout stack</span>
<span id="cb3-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">draw_minimal_borders</span> yes</span>
<span id="cb3-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">background_opacity</span> 0.99</span>
<span id="cb3-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">font_family</span>     FiraCode Nerd Font Mono</span>
<span id="cb3-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">font_size</span>       14.0</span>
<span id="cb3-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">window_margin_width</span>    5 </span>
<span id="cb3-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">background_image</span>        /Users/zenn/docs/backgrounds/NxyVIMp.jpeg</span>
<span id="cb3-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">window_border_width</span>     1.5pt</span>
<span id="cb3-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">include</span> current-theme.conf</span></code></pre></div>
</section>
<section id="notes-on-setting-up-iterm2" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Notes on setting up iterm2:</h1>
<p>Useful Keyboard shortcuts</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cmd</span> + shift + enter <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> maximize current window <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">especially</span> useful when you use split windows<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cmd</span> + t <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> open a new tab</span>
<span id="cb4-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cmd</span> + w <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> close focused window</span>
<span id="cb4-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cmd</span> + d <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> split window vertically</span>
<span id="cb4-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cmd</span> + shift + d <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> split window horizontally</span>
<span id="cb4-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cmd</span> + <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">{</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">..</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> Move to tab with number <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">{</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">..</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cmd</span> + i <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> change name of the tab</span></code></pre></div>
<p>Set up the status bar for time, git, directory. This reduces the burden on the shell prompt.</p>
<p>settings/profiles/session/</p>
<p>check “status bar enabled” at bottom of screen</p>
<p>In interactive screen drag “current directory”, “Empty space”, and “git state” into Active components section.</p>
<p>settings/appearance</p>
<p>“Status Bar location” select “Bottom”</p>
<p>or alternatively</p>
<p>cd ~</p>
<p>ln -s ~/Dropbox/dotfiles/iterm2Profiles.json .</p>
<p>in iterm2 profiles/Other Actions/Import JSON profiles iterm2Profiles.json</p>
<p>Set out the configuration needs for the shell</p>
<p>Good place to start:</p>
<p>discuss plugins particularly</p>
<p>z vs scd vs wd</p>
</section>
<section id="zshrc" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> <code>.zshrc</code></h1>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"></span>
<span id="cb5-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PS1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%B%2~ %(?:%F{green}☕%f:%F{red}☔%f)%b '</span></span>
<span id="cb5-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">setopt</span> auto_cd auto_pushd pushd_ignore_dups pushdminus</span>
<span id="cb5-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">bindkey</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span></span>
<span id="cb5-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">autoload</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-U</span> compinit <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">compinit</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-u</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">compinit</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">compdef</span> _dirs d</span>
<span id="cb5-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> /opt/homebrew/etc/profile.d/autojump.sh</span>
<span id="cb5-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> ~/.iterm2_shell_integration.zsh</span>
<span id="cb5-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</span>
<span id="cb5-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span>  /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh</span>
<span id="cb5-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> ~/.config/zsh/.zsh_aliases</span>
<span id="cb5-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> ~/.config/zsh/.zsh_functions</span>
<span id="cb5-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> ~/.config/zsh/.zsh_exports</span></code></pre></div>
<section id="configzsh.zsh_aliases" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="configzsh.zsh_aliases"><span class="header-section-number">3.1</span> <code>~/.config/zsh/.zsh_aliases</code></h2>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb6-1"></span>
<span id="cb6-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> mm=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mutt'</span></span>
<span id="cb6-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> sk=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'open -a Skim'</span></span>
<span id="cb6-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> vc=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vim ~/.vimrc'</span></span>
<span id="cb6-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> vz=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vim ~/.zshrc'</span></span>
<span id="cb6-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> sz=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'source ~/.zshrc'</span></span>
<span id="cb6-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> p2=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enscript -C -2 -r -j --media=Letter'</span></span>
<span id="cb6-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> p1=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'enscript  -j --media=Letter'</span></span>
<span id="cb6-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> yr=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yabai --restart-service"</span></span>
<span id="cb6-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> lt=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'eza -lrFha -sold'</span></span>
<span id="cb6-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> mvim=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Applications/MacVim.app/Contents/bin/mvim"</span></span>
<span id="cb6-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> tp=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'trash-put -v'</span></span>
<span id="cb6-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> rm=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'echo "This is not the command you are looking for."; false'</span></span>
<span id="cb6-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> s=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'scd'</span></span>
<span id="cb6-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> ZZ=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'exit'</span></span>
<span id="cb6-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> r=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"radian"</span></span>
<span id="cb6-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> nt=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nvim"</span></span>
<span id="cb6-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-g</span> ...=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'../..'</span></span>
<span id="cb6-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-g</span> ....=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'../../..'</span></span>
<span id="cb6-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-g</span> .....=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'../../../..'</span></span>
<span id="cb6-21"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-g</span> ......=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'../../../../..'</span></span>
<span id="cb6-22"></span>
<span id="cb6-23"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cd -'</span></span>
<span id="cb6-24"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> 1=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cd -1'</span></span>
<span id="cb6-25"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> 2=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cd -2'</span></span>
<span id="cb6-26"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> 3=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cd -3'</span></span>
<span id="cb6-27"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> 4=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cd -4'</span></span>
<span id="cb6-28"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> 5=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cd -5'</span></span>
<span id="cb6-29"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> 6=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cd -6'</span></span>
<span id="cb6-30"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> 7=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cd -7'</span></span>
<span id="cb6-31"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> 8=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cd -8'</span></span>
<span id="cb6-32"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> 9=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cd -9'</span></span>
<span id="cb6-33"></span>
<span id="cb6-34"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> md=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mkdir -p'</span></span>
<span id="cb6-35"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> rd=rmdir</span>
<span id="cb6-36"></span>
<span id="cb6-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># List directory contents</span></span>
<span id="cb6-38"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> lsa=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ls -lah'</span></span>
<span id="cb6-39"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> l=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ls -lah'</span></span>
<span id="cb6-40"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> ll=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ls -lh'</span></span>
<span id="cb6-41"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> la=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ls -lAh'</span></span>
<span id="cb6-42"></span>
<span id="cb6-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># search for directory and cd to it</span></span>
<span id="cb6-44"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">alias</span> sd=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd ~ &amp;&amp; cd </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\$</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(find * -type d -not -path '*/Library/*' | fzf)"</span></span></code></pre></div>
</section>
<section id="configzsh.zsh_exports" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="configzsh.zsh_exports"><span class="header-section-number">3.2</span> <code>~/.config/zsh/.zsh_exports</code></h2>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb7-1"></span>
<span id="cb7-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">EDITOR</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vim"</span></span>
<span id="cb7-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">TEXINPUTS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.:/Users/zenn/shr/images:/Users/zenn/shr:'</span></span>
<span id="cb7-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PATH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".:.local/bin:/opt/homebrew/sbin:/opt/homebrew/bin:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PATH</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/bin"</span></span>
<span id="cb7-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">vpc_id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vpc-14814b73"</span></span>
<span id="cb7-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">subnet_id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"subnet-f02c90ab"</span></span>
<span id="cb7-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ami_id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ami-014d05e6b24240371"</span></span>
<span id="cb7-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">keypair_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rebecca_app"</span></span>
<span id="cb7-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">proj_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rebecca_app"</span></span>
<span id="cb7-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">instance_type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t2.micro"</span></span>
<span id="cb7-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">storage_size</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"30"</span></span>
<span id="cb7-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ami_id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ami-014d05e6b24240371"</span></span>
<span id="cb7-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">security_grp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sg-008cace70d32f6267"</span></span>
<span id="cb7-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">static_ip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'13.56.101.209'</span></span>
<span id="cb7-15"></span>
<span id="cb7-16"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span> rg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&gt;</span> /dev/null<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb7-17">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">FZF_DEFAULT_COMMAND</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rg --files --hidden --no-ignore-vcs'</span></span>
<span id="cb7-18">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">FZF_DEFAULT_OPTS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-m --height 50% --border'</span></span>
<span id="cb7-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb7-20"></span>
<span id="cb7-21"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fg=011,bg=black,bold,underline"</span></span>
<span id="cb7-22"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">LS_COLORS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pi=01;33:so=01;33:do=01;33:bd=01;33:cd=01;33:su=01;35:sg=01;35:ca=01;35:ex=01;32'</span></span>
<span id="cb7-23"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">export</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">LSCOLORS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ExGxDxDxCxDxDxFxFxexEx'</span></span></code></pre></div>
</section>
<section id="configzsh.zsh_functions" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="configzsh.zsh_functions"><span class="header-section-number">3.3</span> <code>~/.config/zsh/.zsh_functions</code></h2>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb8-1"></span>
<span id="cb8-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"> d ()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb8-3">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-n</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb8-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dirs</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$@</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb8-5">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb8-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dirs</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> 10</span>
<span id="cb8-7">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span>
<span id="cb8-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span>
<span id="cb8-9"></span>
<span id="cb8-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mma ()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/Applications/Mathematica.app/Contents/MacOS/WolframKernel</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-script</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$1</span> }</span>
<span id="cb8-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"> gz()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">{</span></span>
<span id="cb8-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add .</span>
<span id="cb8-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-a</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$1</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb8-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push</span>
<span id="cb8-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="references" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> References</h1>
<p><a href="https://thevaluable.dev/zsh-install-configure-mouseless/">Configuring Zsh Without Dependencies</a></p>
<p>read top 5 medium articles <a href="https://medium.com/weekly-webtips/my-terminal-setu-iterm2-zsh-powerlevel10k-f7101ffc72c2">My Terminal Setup: iTerm2 + ZSH + Powerlevel10k | by Zubair Ahmed | Webtips | Medium</a></p>
<p><a href="https://www.kuda.ai/blog/iterm2">Settings For a Better iTerm2 Experience</a></p>
<p><a href="https://codeahoy.com/learn/macossetup/ch3/">iTerm2 Setup and Customization | CodeAhoy</a></p>
<section id="prerequisites" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">4.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">4.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="4.3">
<h2 data-number="4.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">4.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="4.4">
<h2 data-number="4.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">4.4</span> Further Reading</h2>
<p>In development</p>


</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Configure the Command Line for Data Science Development},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/config_term_zsh_p11/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Configure the Command Line for
Data Science Development.”</span> May 13, 2025. <a href="https://focusonr.org/posts/config_term_zsh_p11/">https://focusonr.org/posts/config_term_zsh_p11/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/config_term_zsh_p11/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/config_term_zsh_p11/img/iterm2.png" medium="image" type="image/png" height="75" width="144"/>
</item>
<item>
  <title>Setting up a vim environment for R data science code development</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/configure_vim_for_r/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/configure_vim_for_r/img/vim.png" class="img-fluid figure-img"></p>
<figcaption>vimlogo</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Setting up a vim for use with R can be accomplished in a few steps. This post offers a basic overview of the choices followed by some specific installation steps. I suggest that these are done incrementally.</p>
<p>Vim may be extended by plugins to add features and simplify usage. Several plugins are recommended for simplifying the coding session with R. These include:</p>
<ul>
<li>Nvim-R <a href="https://github.com/jalvesaq/Nvim-R">GitHub - jalvesaq/Nvim-R: Vim plugin to work with R</a> which helps to</li>
<li>UltiSnips for snippets</li>
<li>Vimtex for Latex with R to generate PDF</li>
</ul>
<p>I test R frequently from within Nvim-R and less frequently run tests from the command line using <code>test_check("mypackage")</code> .</p>
</section>
<section id="what-is-the-result" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> What is the result?</h1>
<ul>
<li>Work on mostly .R files but some .Rmd</li>
<li>See a list of objects in the R environment in a window alongside the code file</li>
<li>Send lines of R code to R running in its own window.</li>
<li>Save time with prebuilt snippets for common tasks.</li>
<li>Automatically check the syntax of code as you work</li>
<li>Run tests on the code as needed</li>
<li>Build the resulting package if needed</li>
<li>Fold long code blocks</li>
<li>Hop around in the document easily</li>
<li>Output PDF (via latex), run in a web browser, or create other document types</li>
</ul>
<p>What you will need:</p>
<ul>
<li>R installed</li>
<li>vim or nvim installed (I’ll show nvim)</li>
<li>an R plugin</li>
<li>a plugin manager</li>
<li>a status line manager</li>
<li>a file explorer</li>
<li>and a few optional items</li>
</ul>
<p>Plugin choice Vim-R-Plugin has been replaced by Nvim-R.</p>
</section>
<section id="setup" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Setup</h1>
<p>I recommend the following steps for Mac or Linux.</p>
<ul>
<li>Install R (I recommend using homebrew or the ubuntu standard installation)</li>
<li>Install Nvim (I prefer Neovim because it has excellent support for LSP (language servers).</li>
<li>Install a plugin manager (I’ll use vim-plug)</li>
<li>Create a minimal configuration</li>
<li>Add plugins</li>
<li>Test</li>
<li>Add more plugins as needed</li>
<li>Add refinements</li>
</ul>
<section id="install-a-plugin-manager-vim-plug" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="install-a-plugin-manager-vim-plug"><span class="header-section-number">3.1</span> Install a plugin manager vim-plug</h2>
<p>Install vim-plug. From the home directory, run:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fLo</span> ~/.vim/autoload/plug.vim <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--create-dirs</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-2">  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim</span></code></pre></div>
</section>
<section id="set-up-a-plugin" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="set-up-a-plugin"><span class="header-section-number">3.2</span> Set up a plugin</h2>
<p>Add to ~/.vim/vimrc or init.vim or init.lua</p>
<pre class="vim"><code>Plug 'neoclide/coc.nvim', {'branch': 'release'}</code></pre>
<p>Then run</p>
<pre class="vim"><code>:PlugInstall</code></pre>
</section>
<section id="setup-language-server" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="setup-language-server"><span class="header-section-number">3.3</span> Setup language server</h2>
<pre class="vim"><code>:CocInstall coc-r-lsp</code></pre>
</section>
<section id="suggested-vim.confignviminit.vim" class="level2" data-number="3.4">
<h2 data-number="3.4" class="anchored" data-anchor-id="suggested-vim.confignviminit.vim"><span class="header-section-number">3.4</span> Suggested vim/.config/nvim/init.vim</h2>
<p>Suggested configuration to get started. I’ll explain after.</p>
<pre class="vim"><code>call plug#begin("~/.vim/plugged")
" Plugin Section
set nocompatible
Plug 'morhetz/gruvbox'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'jalvesaq/Nvim-R', {'branch': 'stable'}
Plug 'ncm2/ncm2'
Plug 'roxma/nvim-yarp'
Plug 'gaalcaras/ncm-R'
Plug 'preservim/nerdtree'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'neoclide/coc.nvim', {'branch': 'release'} " Language Server Protocol (LSP) support
Plug 'SirVer/ultisnips'
Plug 'quangnguyen30192/cmp-nvim-ultisnips'
Plug 'honza/vim-snippets'
Plug 'lervag/vimtex'
Plug 'tmhedberg/SimpylFold'
Plug 'tpope/vim-surround'
Plug 'jalvesaq/vimcmdline'
" End Plugin Section
call plug#end()

" Basic settings
colorscheme gruvbox
set background=dark
syntax enable
filetype plugin indent on
set tabstop=4
set shiftwidth=4
set expandtab
set number
set relativenumber
set textwidth=80
set splitright
set nobackup
set nowritebackup
set updatetime=300
set signcolumn=yes

" R settings (specific to Nvim-R)
" These are some examples of settings for Nvim-R
let R_app = "radian"  " Use radian if you have it installed (pip install radian)
let R_cmd = "R"
let R_hl_term = 0
let R_rconsole_width = 80
let R_min_editor_width = 80
let g:R_auto_start = 2
let R_assign = 2  " Use _ for assignment
let R_silent_term = 1
let R_close_term = 1

" LSP settings (Coc.nvim)
" Autocomplete settings
inoremap &lt;expr&gt; &lt;Tab&gt; pumvisible() ? "\&lt;C-n&gt;" : "\&lt;Tab&gt;"
inoremap &lt;expr&gt; &lt;S-Tab&gt; pumvisible() ? "\&lt;C-p&gt;" : "\&lt;S-Tab&gt;"
inoremap &lt;silent&gt;&lt;expr&gt; &lt;CR&gt; pumvisible() ? coc#_select_confirm() : "\&lt;C-g&gt;u\&lt;CR&gt;"

" UltiSnips settings
let g:UltiSnipsExpandTrigger="&lt;c-j&gt;"
let g:UltiSnipsJumpForwardTrigger="&lt;c-j&gt;"
let g:UltiSnipsJumpBackwardTrigger="&lt;c-k&gt;"

" Custom keymappings
nmap &lt;C-n&gt; :NERDTreeToggle&lt;CR&gt;
nnoremap &lt;leader&gt;f :Files&lt;CR&gt;
nnoremap &lt;leader&gt;g :Rg&lt;CR&gt;

" Key mappings for sending lines to R
nmap &lt;localleader&gt;ss &lt;Plug&gt;RStart
vmap &lt;localleader&gt;ss &lt;Plug&gt;RStart
nmap &lt;localleader&gt;r &lt;Plug&gt;RSendLine
vmap &lt;localleader&gt;r &lt;Plug&gt;RSendSelection
nmap &lt;localleader&gt;l &lt;Plug&gt;RSendLine
nmap &lt;localleader&gt;p &lt;Plug&gt;RSendParagraph</code></pre>
<p>Verify that the plugins were installed by starting nvim and typing <code>:checkhealth</code>. You should have most of these items working. If not, either disable the troublesome plugin by commenting it out with a ” character at beginning of the line or looking up the solution.</p>
<p>Most problems here are solvable with a few web searches.</p>
</section>
</section>
<section id="troubleshooting-plugin-issues" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Troubleshooting plugin issues</h1>
<p>Here are some issues that I have found:</p>
<ol type="1">
<li>Language server (COC.nvim) requires nodejs to be installed</li>
<li>Nvim-R calls out to R, but can’t find it - make sure R is in your PATH</li>
<li>Some plugins have incompatible keybindings - remapping can solve this</li>
</ol>
<section id="solution-to-nodejs-issue" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="solution-to-nodejs-issue"><span class="header-section-number">4.1</span> Solution to nodejs issue</h2>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># On Mac </span></span>
<span id="cb6-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">brew</span> install node</span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># On Ubuntu</span></span>
<span id="cb6-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-fsSL</span> https://deb.nodesource.com/setup_lts.x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-E</span> bash <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span></span>
<span id="cb6-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt-get install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> nodejs</span></code></pre></div>
</section>
</section>
<section id="advanced-enhancements" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Advanced enhancements</h1>
<section id="ultisnips---adding-custom-snippets" class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="ultisnips---adding-custom-snippets"><span class="header-section-number">5.1</span> UltiSnips - adding custom snippets</h2>
<p>UltiSnips is a powerful snippet engine. You can create custom snippets for R in a file like <code>~/.config/nvim/UltiSnips/r.snippets</code>.</p>
<p>Here’s an example of some useful R snippets:</p>
<pre class="vim"><code>snippet df "Create data frame"
data.frame(
  ${1:col1} = ${2:value1},
  ${3:col2} = ${4:value2}
)
endsnippet

snippet fun "Function definition"
${1:function_name} &lt;- function(${2:arguments}) {
  ${3:body}
}
endsnippet

snippet for "For loop"
for (${1:i} in ${2:sequence}) {
  ${3:body}
}
endsnippet</code></pre>
</section>
<section id="vim-fugitive-for-git-integration" class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="vim-fugitive-for-git-integration"><span class="header-section-number">5.2</span> Vim-Fugitive for Git integration</h2>
<p>If you’re using Git for version control, vim-fugitive is an excellent plugin that gives you Git capabilities right from Vim:</p>
<pre class="vim"><code>" Add to your plugin section
Plug 'tpope/vim-fugitive'

" Common commands:
" :Git - equivalent to git status
" :Git commit - commit changes
" :Git push - push to remote
" :Git pull - pull from remote
" :Git blame - see who wrote what</code></pre>
</section>
<section id="learning-path" class="level2" data-number="5.3">
<h2 data-number="5.3" class="anchored" data-anchor-id="learning-path"><span class="header-section-number">5.3</span> Learning Path</h2>
<p>Learning Vim + R can be overwhelming at first. Here’s a suggested pathway:</p>
<ol type="1">
<li>Start with basic Vim movements (hjkl, w, b, etc.)</li>
<li>Learn how to send code to R using Nvim-R (<localleader>r)</localleader></li>
<li>Gradually add more plugins and learn their features</li>
<li>Customize your configuration as you identify pain points</li>
</ol>
<p>Remember that the goal is to make your workflow more efficient. Don’t try to learn everything at once - add features gradually as you get comfortable.</p>
</section>
</section>
<section id="using-with-devtools-package" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Using with devtools package</h1>
<p>When developing R packages, the devtools package is incredibly useful. You can integrate it with Nvim-R:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># In your R session</span></span>
<span id="cb9-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(devtools)</span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a new package</span></span>
<span id="cb9-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_package</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"~/path/to/mypackage"</span>)</span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test your package</span></span>
<span id="cb9-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">test</span>()</span>
<span id="cb9-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Document your package</span></span>
<span id="cb9-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">document</span>()</span>
<span id="cb9-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install your package</span></span>
<span id="cb9-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install</span>()</span></code></pre></div>
</section>
<section id="one-more-thing" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> One more thing…</h1>
<p>I’ll update this guide with more tips and tricks in the future. Happy coding! ## Prerequisites</p>
<p>In development</p>
<section id="step-by-step-implementation" class="level2" data-number="7.1">
<h2 data-number="7.1" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">7.1</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="7.2">
<h2 data-number="7.2" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">7.2</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="7.3">
<h2 data-number="7.3" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">7.3</span> Further Reading</h2>
<p>In development</p>


</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Setting up a Vim Environment for {R} Data Science Code
    Development},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/configure_vim_for_r/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Setting up a Vim Environment
for R Data Science Code Development.”</span> May 13, 2025. <a href="https://focusonr.org/posts/configure_vim_for_r/">https://focusonr.org/posts/configure_vim_for_r/</a>.
</div></div></section></div> ]]></description>
  <category>Vim</category>
  <guid>https://focusonr.org/posts/configure_vim_for_r/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/configure_vim_for_r/img/vim.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Adding Windows as a Second OS on Thinkpad</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/dual_boot_thinkpad/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/dual_boot_thinkpad/img/windows.png" class="img-fluid figure-img" style="width:50.0%"></p>
<figcaption>Windows</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Step by step instructions for adding Windows as a second OS on a thinkpad.</p>
<section id="setting-and-motivation" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="setting-and-motivation"><span class="header-section-number">1.1</span> Setting and motivation</h2>
<p><strong>check thinkpad model</strong> I have a relatively new Lenova Thinkpad, Carbon X1 Gen 9. It came with Ubuntu installed and now I want to add Windows 11 as a second OS.</p>
<p>I have a 1TB SSD and I have allocated 500GB to Ubuntu. I want to allocate 500GB to Windows.</p>
</section>
</section>
<section id="steps" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Steps</h1>
<ol type="1">
<li><em>Create a <code>Windows</code> bootable USB</em>. On the <code>thinkpad</code> running <code>Ubuntu</code> open <code>firefox</code> and download a <code>Windows</code> ISO from the <code>Microsoft</code> website to the <code>~/Downloads</code> directory. <a href="https://www.microsoft.com/en-us/software-download/windows11">Download Windows 11</a> <strong>check</strong> I tried using balenaEtcher on my macbook but that was a no go since the Windows ISO did not have a partition table. Use Ventoy to create a bootable USB. <a href="https://www.ventoy.net/en/index.html">Ventoy</a></li>
</ol>
<p>From the Ventoy website:</p>
<blockquote class="blockquote">
<p>“What is Ventoy Ventoy is an open source tool to create bootable USB drive for ISO/WIM/IMG/VHD(x)/EFI files. With ventoy, you don’t need to format the disk over and over, you just need to copy the ISO/WIM/IMG/VHD(x)/EFI files to the USB drive and boot them directly. You can copy many files at a time and ventoy will give you a boot menu to select them (screenshot). You can also browse ISO/WIM/IMG/VHD(x)/EFI files in local disks and boot them. x86 Legacy BIOS, IA32 UEFI, x86_64 UEFI, ARM64 UEFI and MIPS64EL UEFI are supported in the same way. Most types of OS supported (Windows/WinPE/Linux/ChromeOS/Unix/VMware/Xen…) 1200+ image files are tested (list), 90%+ distros in distrowatch.com supported (details)”</p>
</blockquote>
<p>From Wikipedia:</p>
<blockquote class="blockquote">
<p>“Ventoy is a free and open-source utility used for creating bootable USB media storage devices with files such as .iso, .wim, .img, .vhd(x), and .efi. Once Ventoy is installed onto a USB drive, there is no need to reformat the USB drive to add new installation files. Instead, it is enough to copy .iso, .wim, .img, .vhd(x), or .efi file(s) to the USB drive.[2][3][4] Ventoy presents the user with a boot menu to select one of the installation files held on the USB drive.”</p>
</blockquote>
<p>Download Ventoy from https://www.ventoy.net/ Extract the downloaded package Run the installation script:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ventoy-x.x.xx</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ./Ventoy2Disk.sh <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> /dev/sdX</span></code></pre></div>
<p>where <code>x.x.xx</code> is the version number and <code>sdX</code> is the USB drive.</p>
<ol start="2" type="1">
<li><em>Create a <code>Linux Mint</code> bootable USB</em>. On the <code>thinkpad</code> running <code>Ubuntu</code> open <code>firefox</code> and download a <code>Mint</code> ISO from the <code>Mint</code> website to the <code>~/Downloads</code> directory. <a href="https://www.linuxmint.com/edition.php?id=319">Linux Mint 22.1 "Xia" - Linux Mint</a></li>
</ol>
<section id="prerequisites" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">2.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">2.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">2.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">2.4</span> Further Reading</h2>
<p>In development</p>


</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Adding {Windows} as a {Second} {OS} on {Thinkpad}},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/dual_boot_thinkpad/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Adding Windows as a Second OS
on Thinkpad.”</span> May 13, 2025. <a href="https://focusonr.org/posts/dual_boot_thinkpad/">https://focusonr.org/posts/dual_boot_thinkpad/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/dual_boot_thinkpad/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/dual_boot_thinkpad/img/windows.png" medium="image" type="image/png" height="26" width="144"/>
</item>
<item>
  <title>RCT validation language</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/rct_validation_lang/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://focusonr.org/posts/rct_validation_lang/img/lua.png" class="img-fluid"></p>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Consider a simple programming language to capture the essence of clinical trial data base validation logic.</p>
<p>Similar in concept to Coffeescript (compiles to Lua) or Moonscript (compiles to Javascript).</p>
<p>Idea is for trial design and initiation team to collaborate (say on gppgle docs) to develop the quality control validation logic and then translate that language into a series of snippets in Lua (using Lpeg)</p>
<p>https://www.inf.puc-rio.br/~roberto/lpeg/</p>
<section id="consider-matlab-to-r-converter" class="level3" data-number="1.0.1">
<h3 data-number="1.0.1" class="anchored" data-anchor-id="consider-matlab-to-r-converter"><span class="header-section-number">1.0.1</span> consider matlab to R converter</h3>
<p><a href="https://cran.r-project.org/web/packages/matconv/index.html">CRAN - Package matconv</a></p>
<p>Consider using openClinica as a starting point.</p>
<p>Ensuring data accuracy and integrity is crucial in clinical trials, as it directly impacts the reliability of study outcomes and regulatory compliance. Data validation encompasses a series of processes aimed at verifying that the collected data is accurate, complete, and consistent.</p>
<p>Key Components of Data Validation: 1. Edit Checks: Automated rules applied during data entry to identify discrepancies, such as out-of-range values or logical inconsistencies. These checks prompt immediate corrections, enhancing data quality. 2. Source Data Verification (SDV): A process where data entered into the case report forms (CRFs) is cross-verified with original source documents to ensure accuracy. While traditional SDV involves comprehensive verification, targeted SDV focuses on critical data points, optimizing resources without compromising data integrity. ￼ 3. Batch Validation: Periodic reviews of accumulated data to identify trends or patterns indicating potential errors, allowing for timely interventions.</p>
<p>Implementing Effective Data Validation: • Standardization: Utilizing standardized data formats and terminologies ensures uniformity across multiple sites and studies, facilitating easier data aggregation and analysis. • Validation Plans: Developing comprehensive data validation plans that outline specific checks, procedures, and responsible personnel helps in systematically ensuring data quality. • Advanced Technologies: Employing Electronic Data Capture (EDC) systems with built-in validation functionalities streamlines data entry and validation processes, reducing manual errors. ￼</p>
<p>Regulatory Compliance:</p>
<p>Adhering to regulatory guidelines, such as those from the FDA and EMA, is essential. These guidelines emphasize the importance of data integrity and provide frameworks for implementing effective data validation processes. ￼</p>
<p>Challenges and Considerations:</p>
<p>Common challenges in data validation include managing large volumes of data, ensuring consistency across multiple sites, and maintaining data integrity throughout the trial. Addressing these challenges requires a combination of robust validation procedures, continuous training for personnel, and leveraging technological solutions to automate and monitor data validation activities.</p>
<p>In summary, data validation is a critical aspect of clinical data management, ensuring that the information collected during trials is reliable and accurate. Implementing structured validation processes, supported by technology and adherence to regulatory standards, enhances the credibility of clinical trial outcomes.</p>
<p>Electronic Data Capture (EDC) systems allow for advanced, automated data validation checks to ensure high data quality and integrity in clinical trials. In addition to basic range and format checks, here are some complex validation checks that can be programmed into EDC systems:</p>
<ol type="1">
<li><p>Temporal Consistency Checks • Ensures that date/time fields follow logical sequences. • Example: Visit date cannot be earlier than screening date or Adverse event resolution date must be after the event start date.</p></li>
<li><p>Cross-field Logical Consistency Checks • Validates relationships between multiple data fields. • Example: If a participant is marked as pregnant, then gender must be female. • Example: If a patient has received a COVID-19 vaccine, they should not be marked as “unvaccinated.”</p></li>
<li><p>Protocol Adherence Checks • Ensures data aligns with the study protocol. • Example: Weight-based drug dosage should be within protocol-defined limits based on patient body weight. • Example: Inclusion/exclusion criteria verification (e.g., Age must be between 18-65 years for eligibility).</p></li>
<li><p>Range Checks with Dynamic Thresholds • Instead of using static limits, thresholds are dynamically adjusted based on patient demographics or prior values. • Example: A hemoglobin level drop greater than 2 g/dL from baseline triggers a flag, rather than using a fixed normal range.</p></li>
<li><p>Plausibility Checks Using Historical Data • Detects outliers based on patient history or known disease patterns. • Example: A patient’s blood pressure should not suddenly drop from 140/90 to 80/40 unless a serious adverse event is recorded.</p></li>
<li><p>Missing Data Pattern Recognition • Flags missing data based on expected entry patterns. • Example: If “Yes” is marked for “Did the patient receive treatment?”, then treatment details must be entered.</p></li>
<li><p>MedDRA/WHO Drug Dictionary Validation • Checks that reported adverse events and medications match standardized medical dictionaries. • Example: If “Headache” is entered as an adverse event, it must map to the correct MedDRA term.</p></li>
<li><p>Conditional Queries Based on Risk-Based Monitoring • Uses machine learning or statistical rules to prioritize data review. • Example: If a site has a higher rate of protocol deviations, trigger additional data validation checks.</p></li>
<li><p>Visit and Event Sequencing Checks • Ensures that study visits and procedures occur in the correct order. • Example: Randomization must occur before the first dose of study drug is recorded.</p></li>
<li><p>Duplicate Record Detection • Identifies duplicate patients or entries using probabilistic matching. • Example: If two records have identical name, DOB, and enrollment date, trigger an alert for possible duplicate entry.</p></li>
</ol>
</section>
</section>
<section id="tools-for-implementing-complex-data-validation-checks-in-edc-systems" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> <strong>Tools for Implementing Complex Data Validation Checks in EDC Systems</strong></h1>
<section id="proprietary-edc-systems-with-built-in-validation" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="proprietary-edc-systems-with-built-in-validation"><span class="header-section-number">2.1</span> <strong>1. Proprietary EDC Systems with Built-in Validation</strong></h2>
<ul>
<li><strong>Medidata Rave</strong> (uses Medidata Rave Edit Check Scripts)</li>
<li><strong>Oracle Clinical / InForm</strong> (PL/SQL-based validation)</li>
<li><strong>IBM Clinical Development</strong></li>
<li><strong>Veeva Vault EDC</strong></li>
<li><strong>Castor EDC</strong></li>
<li>Provide graphical interfaces or scripting languages for validation rules.</li>
</ul>
<hr>
</section>
<section id="open-source-edc-systems-with-custom-validation-capabilities" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="open-source-edc-systems-with-custom-validation-capabilities"><span class="header-section-number">2.2</span> <strong>2. Open-Source EDC Systems with Custom Validation Capabilities</strong></h2>
<section id="a.-openclinica" class="level3" data-number="2.2.1">
<h3 data-number="2.2.1" class="anchored" data-anchor-id="a.-openclinica"><span class="header-section-number">2.2.1</span> <strong>a. OpenClinica</strong></h3>
<ul>
<li><p><strong>Validation Features:</strong></p>
<ul>
<li>Real-time edit checks (range, cross-field, logic-based).</li>
<li>Uses <strong>XPath expressions</strong> for validation.</li>
</ul></li>
<li><p><strong>Example Implementation:</strong></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode xml code-with-copy"><code class="sourceCode xml"><span id="cb1-1">&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rule</span>&gt;</span>
<span id="cb1-2">    &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">when</span>&gt;</span>
<span id="cb1-3">        /StudyEventData/FormData/ItemGroupData/ItemData[@ItemOID='AGE'] &gt; 100</span>
<span id="cb1-4">    &lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">when</span>&gt;</span>
<span id="cb1-5">    &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span>&gt;</span>
<span id="cb1-6">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">message</span>&gt;Age cannot be greater than 100 years.&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">message</span>&gt;</span>
<span id="cb1-7">    &lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span>&gt;</span>
<span id="cb1-8">&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rule</span>&gt;</span></code></pre></div></li>
<li><p><strong>Website:</strong> <a href="https://www.openclinica.com/">openclinica.com</a></p></li>
</ul>
<hr>
</section>
<section id="b.-redcap" class="level3" data-number="2.2.2">
<h3 data-number="2.2.2" class="anchored" data-anchor-id="b.-redcap"><span class="header-section-number">2.2.2</span> <strong>b. REDCap</strong></h3>
<ul>
<li><p><strong>Validation Features:</strong></p>
<ul>
<li>Real-time <strong>range and logic checks</strong>.</li>
<li>Uses <strong>branching logic</strong> and <strong>calculated fields</strong>.</li>
<li>Custom <strong>data quality rules</strong> via SQL queries.</li>
</ul></li>
<li><p><strong>Example Implementation:</strong></p>
<pre class="text"><code>[age] &gt; 18 AND [age] &lt; 65</code></pre></li>
<li><p><strong>Website:</strong> <a href="https://projectredcap.org/">projectredcap.org</a></p></li>
</ul>
<hr>
</section>
<section id="c.-clincapture" class="level3" data-number="2.2.3">
<h3 data-number="2.2.3" class="anchored" data-anchor-id="c.-clincapture"><span class="header-section-number">2.2.3</span> <strong>c.&nbsp;ClinCapture</strong></h3>
<ul>
<li><strong>Validation Features:</strong>
<ul>
<li>JavaScript-based validation for logic and range checks.</li>
<li>Custom queries to detect missing or inconsistent data.</li>
</ul></li>
<li><strong>Website:</strong> <a href="https://www.clincapture.com/">clincapture.com</a></li>
</ul>
<hr>
</section>
</section>
<section id="custom-validation-using-general-purpose-tools" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="custom-validation-using-general-purpose-tools"><span class="header-section-number">2.3</span> <strong>3. Custom Validation Using General-Purpose Tools</strong></h2>
<section id="a.-r-for-data-validation" class="level3" data-number="2.3.1">
<h3 data-number="2.3.1" class="anchored" data-anchor-id="a.-r-for-data-validation"><span class="header-section-number">2.3.1</span> <strong>a. R for Data Validation</strong></h3>
<ul>
<li><p><strong>Libraries:</strong> <code>validate</code>, <code>pointblank</code></p></li>
<li><p><strong>Example:</strong></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(validate)</span>
<span id="cb3-2">rules <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">validator</span>(</span>
<span id="cb3-3">  age <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>,</span>
<span id="cb3-4">  bmi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> bmi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,</span>
<span id="cb3-5">  start_date <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> end_date</span>
<span id="cb3-6">)</span>
<span id="cb3-7">check_results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">confront</span>(data, rules)</span>
<span id="cb3-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(check_results)</span></code></pre></div></li>
</ul>
<hr>
</section>
<section id="b.-python-for-data-validation" class="level3" data-number="2.3.2">
<h3 data-number="2.3.2" class="anchored" data-anchor-id="b.-python-for-data-validation"><span class="header-section-number">2.3.2</span> <strong>b. Python for Data Validation</strong></h3>
<ul>
<li><p><strong>Libraries:</strong> <code>pandera</code>, <code>cerberus</code></p></li>
<li><p><strong>Example:</strong></p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pandera <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DataFrameSchema, Column, Check</span>
<span id="cb4-2"></span>
<span id="cb4-3">schema <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataFrameSchema({</span>
<span id="cb4-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>: Column(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, Check(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">65</span>, error<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Age must be 18-65"</span>)),</span>
<span id="cb4-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bmi"</span>: Column(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>, Check(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, error<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BMI must be realistic"</span>)),</span>
<span id="cb4-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"start_date"</span>: Column(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>),</span>
<span id="cb4-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"end_date"</span>: Column(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, Check(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x, y: x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> y, error<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Start date must be before end date"</span>))</span>
<span id="cb4-8">})</span>
<span id="cb4-9"></span>
<span id="cb4-10">validated_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> schema.validate(df)</span></code></pre></div></li>
</ul>
<hr>
</section>
<section id="c.-sql-for-data-integrity-checks" class="level3" data-number="2.3.3">
<h3 data-number="2.3.3" class="anchored" data-anchor-id="c.-sql-for-data-integrity-checks"><span class="header-section-number">2.3.3</span> <strong>c.&nbsp;SQL for Data Integrity Checks</strong></h3>
<ul>
<li><p><strong>Example:</strong></p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">SELECT</span> patient_id, age</span>
<span id="cb5-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">FROM</span> clinical_data</span>
<span id="cb5-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">WHERE</span> age <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">OR</span> age <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>;</span></code></pre></div></li>
</ul>
<hr>
</section>
</section>
<section id="integrating-validation-into-edc-workflows" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="integrating-validation-into-edc-workflows"><span class="header-section-number">2.4</span> <strong>4. Integrating Validation into EDC Workflows</strong></h2>
<ul>
<li><strong>Automated Validation Pipelines:</strong> Apache NiFi, Talend, Pentaho for ETL-based validation.</li>
<li><strong>FHIR/CDISC Compliance:</strong> OpenCDISC Validator for CDISC standards (SDTM/ADaM).</li>
</ul>
<hr>
</section>
<section id="conclusion" class="level2" data-number="2.5">
<h2 data-number="2.5" class="anchored" data-anchor-id="conclusion"><span class="header-section-number">2.5</span> <strong>Conclusion</strong></h2>
<ul>
<li><strong>For real-time validation:</strong> OpenClinica, REDCap, and ClinCapture provide built-in rule engines.</li>
<li><strong>For custom validation:</strong> R, Python, and SQL offer greater flexibility. <strong>Which approach fits your use case best?</strong></li>
</ul>
</section>
</section>
<section id="shiny-form-validation-with-relational-data-and-machine-learning" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> <strong>Shiny Form Validation with Relational Data and Machine Learning</strong></h1>
<section id="can-shiny-create-forms-with-real-time-validation" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="can-shiny-create-forms-with-real-time-validation"><span class="header-section-number">3.1</span> <strong>Can Shiny Create Forms with Real-Time Validation?</strong></h2>
<p>Yes, <strong>Shiny</strong> can create forms with <strong>real-time validation</strong> by using built-in reactive validation functions and JavaScript-based checks. Shiny provides several approaches for validating user input before submission.</p>
<hr>
</section>
<section id="methods-for-real-time-validation-in-shiny" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="methods-for-real-time-validation-in-shiny"><span class="header-section-number">3.2</span> <strong>Methods for Real-Time Validation in Shiny</strong></h2>
<section id="validate-and-need-for-simple-input-validation" class="level3" data-number="3.2.1">
<h3 data-number="3.2.1" class="anchored" data-anchor-id="validate-and-need-for-simple-input-validation"><span class="header-section-number">3.2.1</span> <strong>1. <code>validate()</code> and <code>need()</code> for Simple Input Validation</strong></h3>
<ul>
<li>These functions allow dynamic validation of form inputs.</li>
<li>Error messages are displayed <strong>instantly</strong> when an invalid input is detected.</li>
</ul>
<section id="example-age-validation-must-be-between-18-65" class="level4" data-number="3.2.1.1">
<h4 data-number="3.2.1.1" class="anchored" data-anchor-id="example-age-validation-must-be-between-18-65"><span class="header-section-number">3.2.1.1</span> <strong>Example: Age Validation (Must be Between 18-65)</strong></h4>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb6-2"></span>
<span id="cb6-3">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb6-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">titlePanel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Real-Time Validation Example"</span>),</span>
<span id="cb6-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarLayout</span>(</span>
<span id="cb6-6">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarPanel</span>(</span>
<span id="cb6-7">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numericInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter Age:"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>),</span>
<span id="cb6-8">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">verbatimTextOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation_message"</span>),</span>
<span id="cb6-9">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"submit"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Submit"</span>)</span>
<span id="cb6-10">        ),</span>
<span id="cb6-11">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainPanel</span>()</span>
<span id="cb6-12">    )</span>
<span id="cb6-13">)</span>
<span id="cb6-14"></span>
<span id="cb6-15">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {</span>
<span id="cb6-16">    output<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>validation_message <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">renderText</span>({</span>
<span id="cb6-17">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">validate</span>(</span>
<span id="cb6-18">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">need</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>age <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Age must be at least 18"</span>),</span>
<span id="cb6-19">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">need</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>age <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">65</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Age must be 65 or below"</span>)</span>
<span id="cb6-20">        )</span>
<span id="cb6-21">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Valid input!"</span></span>
<span id="cb6-22">    })</span>
<span id="cb6-23">}</span>
<span id="cb6-24"></span>
<span id="cb6-25"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(ui, server)</span></code></pre></div>
<hr>
</section>
</section>
<section id="shinyvalidate-package-for-advanced-form-validation" class="level3" data-number="3.2.2">
<h3 data-number="3.2.2" class="anchored" data-anchor-id="shinyvalidate-package-for-advanced-form-validation"><span class="header-section-number">3.2.2</span> <strong>2. <code>shinyvalidate</code> Package for Advanced Form Validation</strong></h3>
<p>The <code>shinyvalidate</code> package allows multiple <strong>dependent</strong> form inputs to be validated <strong>before submission</strong>.</p>
<section id="example-multiple-field-validation-email-age" class="level4" data-number="3.2.2.1">
<h4 data-number="3.2.2.1" class="anchored" data-anchor-id="example-multiple-field-validation-email-age"><span class="header-section-number">3.2.2.1</span> <strong>Example: Multiple Field Validation (Email &amp; Age)</strong></h4>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shinyvalidate)</span>
<span id="cb7-3"></span>
<span id="cb7-4">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb7-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">titlePanel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shinyvalidate Example"</span>),</span>
<span id="cb7-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter Email:"</span>),</span>
<span id="cb7-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numericInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter Age:"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>),</span>
<span id="cb7-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"submit"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Submit"</span>),</span>
<span id="cb7-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">verbatimTextOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation_message"</span>)</span>
<span id="cb7-10">)</span>
<span id="cb7-11"></span>
<span id="cb7-12">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {</span>
<span id="cb7-13">    iv <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> InputValidator<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">new</span>()</span>
<span id="cb7-14">    </span>
<span id="cb7-15">    iv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_rule</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sv_email</span>()) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Validates email format</span></span>
<span id="cb7-16">    iv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">add_rule</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sv_between</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">65</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Age must be between 18 and 65</span></span>
<span id="cb7-17">    </span>
<span id="cb7-18">    iv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enable</span>()</span>
<span id="cb7-19">    </span>
<span id="cb7-20">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observeEvent</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>submit, {</span>
<span id="cb7-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (iv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is_valid</span>()) {</span>
<span id="cb7-22">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">showModal</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">modalDialog</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Form submitted successfully!"</span>))</span>
<span id="cb7-23">        } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb7-24">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">showModal</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">modalDialog</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Please fix errors before submitting."</span>))</span>
<span id="cb7-25">        }</span>
<span id="cb7-26">    })</span>
<span id="cb7-27">}</span>
<span id="cb7-28"></span>
<span id="cb7-29"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(ui, server)</span></code></pre></div>
<hr>
</section>
</section>
<section id="javascript-based-validation-for-immediate-feedback" class="level3" data-number="3.2.3">
<h3 data-number="3.2.3" class="anchored" data-anchor-id="javascript-based-validation-for-immediate-feedback"><span class="header-section-number">3.2.3</span> <strong>3. JavaScript-Based Validation for Immediate Feedback</strong></h3>
<p>Shiny supports <strong>JavaScript validation</strong> for client-side real-time validation <strong>before</strong> sending data to the server.</p>
<section id="example-real-time-numeric-input-restriction" class="level4" data-number="3.2.3.1">
<h4 data-number="3.2.3.1" class="anchored" data-anchor-id="example-real-time-numeric-input-restriction"><span class="header-section-number">3.2.3.1</span> <strong>Example: Real-Time Numeric Input Restriction</strong></h4>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb8-2"></span>
<span id="cb8-3">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb8-4">    tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">script</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">HTML</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb8-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        function validateNumericInput() {</span></span>
<span id="cb8-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            var input = document.getElementById('numInput').value;</span></span>
<span id="cb8-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            if (isNaN(input) || input &lt; 1 || input &gt; 100) {</span></span>
<span id="cb8-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                document.getElementById('error').innerHTML = 'Enter a valid number (1-100)';</span></span>
<span id="cb8-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            } else {</span></span>
<span id="cb8-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                document.getElementById('error').innerHTML = '';</span></span>
<span id="cb8-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            }</span></span>
<span id="cb8-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        }</span></span>
<span id="cb8-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    "</span>)),</span>
<span id="cb8-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"numInput"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter a number:"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">oninput =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validateNumericInput()"</span>),</span>
<span id="cb8-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">span</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color: red;"</span>)</span>
<span id="cb8-16">)</span>
<span id="cb8-17"></span>
<span id="cb8-18">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {}</span>
<span id="cb8-19"></span>
<span id="cb8-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(ui, server)</span></code></pre></div>
<hr>
</section>
</section>
</section>
<section id="can-javascript-access-relational-data-and-machine-learning-tools" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="can-javascript-access-relational-data-and-machine-learning-tools"><span class="header-section-number">3.3</span> <strong>Can JavaScript Access Relational Data and Machine Learning Tools?</strong></h2>
<p>Yes, <strong>JavaScript</strong> can access <strong>relational datasets</strong> and <strong>machine learning tools</strong> for real-time validation. This can be achieved through:</p>
<ol type="1">
<li><strong>Client-Side Validation via IndexedDB</strong> (local relational database in browser)</li>
<li><strong>AJAX Requests to Query a Remote Database</strong> (MySQL, PostgreSQL, etc.)</li>
<li><strong>Calling a Machine Learning Model via an API</strong> (TensorFlow.js, Python API)</li>
<li><strong>WebAssembly (WASM) for Local ML Computation</strong></li>
</ol>
<hr>
</section>
<section id="using-indexeddb-for-local-relational-data-validation" class="level2" data-number="3.4">
<h2 data-number="3.4" class="anchored" data-anchor-id="using-indexeddb-for-local-relational-data-validation"><span class="header-section-number">3.4</span> <strong>1. Using IndexedDB for Local Relational Data Validation</strong></h2>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb9-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb9-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> db<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-3">  </span>
<span id="cb9-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Open IndexedDB database</span></span>
<span id="cb9-5">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> request <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> indexedDB<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ClinicalDB"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-6">  request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">onsuccess</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">event</span>) {</span>
<span id="cb9-7">      db <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">event</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">target</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">result</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-8">  }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-9">  </span>
<span id="cb9-10">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">validateUserID</span>() {</span>
<span id="cb9-11">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> inputID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"userID"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-12">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> transaction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> db<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transaction</span>([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"patients"</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-13">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> objectStore <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transaction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">objectStore</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"patients"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-14">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> request <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectStore<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get</span>(inputID)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-15">      </span>
<span id="cb9-16">      request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">onsuccess</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>() {</span>
<span id="cb9-17">          <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">result</span>) {</span>
<span id="cb9-18">              <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">innerHTML</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invalid Patient ID!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-19">          } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb9-20">              <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">innerHTML</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-21">          }</span>
<span id="cb9-22">      }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-23">  }</span>
<span id="cb9-24"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb9-25"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">input</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"userID"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> oninput</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validateUserID()"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb9-26"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">span</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> style</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color: red;"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">span</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<hr>
</section>
<section id="using-ajax-to-query-a-remote-sql-database" class="level2" data-number="3.5">
<h2 data-number="3.5" class="anchored" data-anchor-id="using-ajax-to-query-a-remote-sql-database"><span class="header-section-number">3.5</span> <strong>2. Using AJAX to Query a Remote SQL Database</strong></h2>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb10-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">checkPatientID</span>() {</span>
<span id="cb10-3">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> userID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"userID"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-4">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fetch</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`/validate_id?userID=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>userID<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)</span>
<span id="cb10-5">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span>(response <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> response<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">json</span>())</span>
<span id="cb10-6">          <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span>(data <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb10-7">              <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">valid</span>) {</span>
<span id="cb10-8">                  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">innerHTML</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-9">              } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb10-10">                  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">innerHTML</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invalid Patient ID!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-11">              }</span>
<span id="cb10-12">          })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-13">  }</span>
<span id="cb10-14"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-15"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">input</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"userID"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> oninput</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"checkPatientID()"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb10-16"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">span</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> style</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color: red;"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">span</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<hr>
</section>
<section id="calling-a-machine-learning-model-for-validation" class="level2" data-number="3.6">
<h2 data-number="3.6" class="anchored" data-anchor-id="calling-a-machine-learning-model-for-validation"><span class="header-section-number">3.6</span> <strong>3. Calling a Machine Learning Model for Validation</strong></h2>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode html code-with-copy"><code class="sourceCode html"><span id="cb11-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb11-2">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">validateAdverseEvent</span>() {</span>
<span id="cb11-3">      <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">let</span> eventText <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"eventText"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-4">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fetch</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`/predict_adverse_event`</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> {</span>
<span id="cb11-5">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">method</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"POST"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb11-6">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">headers</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> { <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Content-Type"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"application/json"</span> }<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb11-7">          <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">body</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">JSON</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stringify</span>({ <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> eventText })</span>
<span id="cb11-8">      })</span>
<span id="cb11-9">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span>(response <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> response<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">json</span>())</span>
<span id="cb11-10">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span>(data <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb11-11">          <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getElementById</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">innerHTML</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> </span>
<span id="cb11-12">              data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">valid</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Potentially invalid event!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-13">      })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-14">  }</span>
<span id="cb11-15"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">script</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb11-16"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">input</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"eventText"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> oninput</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validateAdverseEvent()"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb11-17"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">span</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> id</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"error"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> style</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"color: red;"</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;&lt;/</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">span</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span></code></pre></div>
<hr>
</section>
<section id="choosing-the-best-approach" class="level2" data-number="3.7">
<h2 data-number="3.7" class="anchored" data-anchor-id="choosing-the-best-approach"><span class="header-section-number">3.7</span> <strong>Choosing the Best Approach</strong></h2>
<table class="caption-top table">
<thead>
<tr class="header">
<th>Approach</th>
<th>Best For</th>
<th>Needs Server?</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>IndexedDB</strong></td>
<td>Local relational checks</td>
<td>❌ No</td>
</tr>
<tr class="even">
<td><strong>AJAX (SQL Backend)</strong></td>
<td>Large relational datasets</td>
<td>✅ Yes</td>
</tr>
<tr class="odd">
<td><strong>ML API (Python/Flask)</strong></td>
<td>Advanced validation via AI</td>
<td>✅ Yes</td>
</tr>
<tr class="even">
<td><strong>TensorFlow.js</strong></td>
<td>Local ML without server</td>
<td>❌ No</td>
</tr>
</tbody>
</table>
<hr>
</section>
<section id="conclusion-1" class="level2" data-number="3.8">
<h2 data-number="3.8" class="anchored" data-anchor-id="conclusion-1"><span class="header-section-number">3.8</span> <strong>Conclusion</strong></h2>
<ul>
<li><strong>For small datasets</strong>, use <strong>IndexedDB</strong> (local relational validation).</li>
<li><strong>For real-time database validation</strong>, use <strong>AJAX + SQL backend</strong>.</li>
<li><strong>For AI-powered checks</strong>, use <strong>Flask ML API</strong> or <strong>TensorFlow.js</strong>.</li>
</ul>
</section>
</section>
<section id="spreadsheet-driven-validation-system-for-shiny-forms" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> <strong>Spreadsheet-Driven Validation System for Shiny Forms</strong></h1>
<section id="your-idea-spreadsheet-driven-validation-system" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="your-idea-spreadsheet-driven-validation-system"><span class="header-section-number">4.1</span> <strong>Your Idea: Spreadsheet-Driven Validation System</strong></h2>
<p>Your idea of defining <strong>data validation rules in a spreadsheet</strong>, then <strong>processing them with Lua</strong> to generate <strong>JavaScript</strong> for <strong>Shiny validation</strong> is a <strong>great idea</strong>. This approach would: - Allow non-programmers (e.g., clinicians, data managers) to define <strong>custom validation rules</strong> in a familiar format (Excel, Google Sheets, CSV). - Automate the generation of <strong>JavaScript validation logic</strong> from a structured input (spreadsheet). - Integrate validation logic into <strong>Shiny</strong> dynamically, enabling real-time data validation.</p>
<hr>
</section>
<section id="has-this-been-done-before" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="has-this-been-done-before"><span class="header-section-number">4.2</span> <strong>Has This Been Done Before?</strong></h2>
<p>Yes, similar approaches have been explored, but not exactly in the way you describe.</p>
<ol type="1">
<li><strong>Spreadsheet-Driven Validation Rules</strong>
<ul>
<li><strong>Medidata Rave</strong> (commercial EDC system) allows validation checks to be defined in a <strong>spreadsheet-like rule editor</strong>.</li>
<li><strong>OpenClinica</strong> supports rule definitions in a <strong>spreadsheet format</strong> (ODK XLSForm).</li>
<li><strong>RedCAP</strong> allows some rule-based constraints in CSV.</li>
</ul></li>
<li><strong>Code Generation from Spreadsheets</strong>
<ul>
<li><strong>Google Sheets + Apps Script</strong>: People generate <strong>JavaScript validation</strong> from structured spreadsheet data.</li>
<li><strong>Lua for Code Generation</strong>: Lua is used in game engines and <strong>config-driven</strong> workflows, but it has not been widely used to generate <strong>JavaScript validation rules from spreadsheets</strong>.</li>
</ul></li>
</ol>
<p>Thus, <strong>your approach is novel in the clinical data validation context</strong>—this could be <strong>a powerful open-source tool</strong>.</p>
<hr>
</section>
<section id="why-this-is-a-good-idea" class="level2" data-number="4.3">
<h2 data-number="4.3" class="anchored" data-anchor-id="why-this-is-a-good-idea"><span class="header-section-number">4.3</span> <strong>Why This is a Good Idea</strong></h2>
<table class="caption-top table">
<colgroup>
<col style="width: 50%">
<col style="width: 50%">
</colgroup>
<thead>
<tr class="header">
<th>Feature</th>
<th>Benefit</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>Spreadsheet as Validation Rule Storage</strong></td>
<td>Easy for non-programmers to modify rules</td>
</tr>
<tr class="even">
<td><strong>Lua as Code Generator</strong></td>
<td>Fast, lightweight, and excellent for text processing</td>
</tr>
<tr class="odd">
<td><strong>JavaScript for Validation</strong></td>
<td>Enables <strong>real-time validation</strong> in <strong>Shiny</strong> without server overhead</td>
</tr>
<tr class="even">
<td><strong>Dynamic Validation Updates</strong></td>
<td>Changing the spreadsheet updates validation logic without modifying code</td>
</tr>
</tbody>
</table>
<hr>
</section>
<section id="how-it-would-work" class="level2" data-number="4.4">
<h2 data-number="4.4" class="anchored" data-anchor-id="how-it-would-work"><span class="header-section-number">4.4</span> <strong>How It Would Work</strong></h2>
<section id="define-rules-in-a-spreadsheet" class="level3" data-number="4.4.1">
<h3 data-number="4.4.1" class="anchored" data-anchor-id="define-rules-in-a-spreadsheet"><span class="header-section-number">4.4.1</span> <strong>1. Define Rules in a Spreadsheet</strong></h3>
<p>Each field in the Shiny app gets a validation rule in <strong>one cell per field</strong>.</p>
<table class="caption-top table">
<colgroup>
<col style="width: 30%">
<col style="width: 69%">
</colgroup>
<thead>
<tr class="header">
<th>Field</th>
<th>Validation Rule</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>age</td>
<td><code>age &gt;= 18 &amp;&amp; age &lt;= 65</code></td>
</tr>
<tr class="even">
<td>email</td>
<td><code>/^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$/i.test(email)</code></td>
</tr>
<tr class="odd">
<td>height</td>
<td><code>height &gt; 50 &amp;&amp; height &lt; 250</code></td>
</tr>
<tr class="even">
<td>bmi</td>
<td><code>weight / (height / 100) ** 2 &gt; 15 &amp;&amp; weight / (height / 100) ** 2 &lt; 50</code></td>
</tr>
</tbody>
</table>
<hr>
</section>
<section id="lua-script-processes-the-spreadsheet" class="level3" data-number="4.4.2">
<h3 data-number="4.4.2" class="anchored" data-anchor-id="lua-script-processes-the-spreadsheet"><span class="header-section-number">4.4.2</span> <strong>2. Lua Script Processes the Spreadsheet</strong></h3>
<p>A <strong>Lua script</strong> reads the spreadsheet (CSV, Excel) and <strong>generates JavaScript validation functions</strong>.</p>
<section id="example-lua-script-process_validation.lua" class="level4" data-number="4.4.2.1">
<h4 data-number="4.4.2.1" class="anchored" data-anchor-id="example-lua-script-process_validation.lua"><span class="header-section-number">4.4.2.1</span> <strong>Example Lua Script (<code>process_validation.lua</code>)</strong></h4>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode lua code-with-copy"><code class="sourceCode lua"><span id="cb12-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">csv</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"csv"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- Use a CSV library like `luacsv`</span></span>
<span id="cb12-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">file</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">io.open</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation_rules.csv"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb12-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">parsed_data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">csv</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*all"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb12-4"></span>
<span id="cb12-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">js_code</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"const validationRules = {</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb12-6"></span>
<span id="cb12-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">i</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">row</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ipairs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">parsed_data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb12-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">field</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">rule</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">row</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">row</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb12-9">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">js_code</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">js_code</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">string.format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'    "%s": function(value) { return %s; },</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">field</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">rule</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb12-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">end</span></span>
<span id="cb12-11"></span>
<span id="cb12-12"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">js_code</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">js_code</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">..</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"};</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb12-13"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">close</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb12-14"></span>
<span id="cb12-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">js_file</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">io.open</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation.js"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb12-16"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">js_file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">js_code</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb12-17"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">js_file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">close</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb12-18"></span>
<span id="cb12-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Validation JavaScript generated successfully!"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
<hr>
</section>
</section>
<section id="javascript-file-is-included-in-shiny" class="level3" data-number="4.4.3">
<h3 data-number="4.4.3" class="anchored" data-anchor-id="javascript-file-is-included-in-shiny"><span class="header-section-number">4.4.3</span> <strong>3. JavaScript File is Included in Shiny</strong></h3>
<p>The <strong>generated JavaScript file (<code>validation.js</code>)</strong> is included in the Shiny app.</p>
<section id="example-of-integrating-validation.js-in-shiny" class="level4" data-number="4.4.3.1">
<h4 data-number="4.4.3.1" class="anchored" data-anchor-id="example-of-integrating-validation.js-in-shiny"><span class="header-section-number">4.4.3.1</span> <strong>Example of Integrating <code>validation.js</code> in Shiny</strong></h4>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb13-2"></span>
<span id="cb13-3">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb13-4">    tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">script</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">src=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation.js"</span>)),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Include generated JS</span></span>
<span id="cb13-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numericInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter Age:"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>),</span>
<span id="cb13-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter Email:"</span>),</span>
<span id="cb13-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"submit"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Submit"</span>),</span>
<span id="cb13-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">verbatimTextOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation_message"</span>)</span>
<span id="cb13-9">)</span>
<span id="cb13-10"></span>
<span id="cb13-11">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {</span>
<span id="cb13-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observeEvent</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>submit, {</span>
<span id="cb13-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Call JavaScript function to validate fields</span></span>
<span id="cb13-14">        shinyjs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runjs</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"if (!validationRules.age(input$age)) alert('Invalid Age!');"</span>)</span>
<span id="cb13-15">        shinyjs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runjs</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"if (!validationRules.email(input$email)) alert('Invalid Email!');"</span>)</span>
<span id="cb13-16">    })</span>
<span id="cb13-17">}</span>
<span id="cb13-18"></span>
<span id="cb13-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(ui, server)</span></code></pre></div>
<hr>
</section>
</section>
</section>
<section id="advantages-of-this-approach" class="level2" data-number="4.5">
<h2 data-number="4.5" class="anchored" data-anchor-id="advantages-of-this-approach"><span class="header-section-number">4.5</span> <strong>Advantages of This Approach</strong></h2>
<p>✅ <strong>Non-programmers can define validation rules</strong> in spreadsheets<br>
✅ <strong>Lua is fast &amp; lightweight for generating JavaScript</strong><br>
✅ <strong>JavaScript validation happens instantly in the browser</strong><br>
✅ <strong>Shiny remains reactive while offloading validation to the client</strong></p>
<hr>
</section>
<section id="potential-enhancements" class="level2" data-number="4.6">
<h2 data-number="4.6" class="anchored" data-anchor-id="potential-enhancements"><span class="header-section-number">4.6</span> <strong>Potential Enhancements</strong></h2>
<p>🚀 <strong>Support relational data</strong>: Extend Lua to query databases and include dynamic constraints<br>
🚀 <strong>Integrate ML</strong>: Add <strong>TensorFlow.js</strong> or an API to use machine learning for validation<br>
🚀 <strong>Validation UI</strong>: Build a Shiny app to visualize and edit validation rules dynamically</p>
<hr>
<section id="next-steps" class="level3" data-number="4.6.1">
<h3 data-number="4.6.1" class="anchored" data-anchor-id="next-steps"><span class="header-section-number">4.6.1</span> <strong>Next Steps</strong></h3>
<p>Would you like a <strong>working prototype</strong> where we generate JavaScript from a spreadsheet and use it in a Shiny app? 🚀</p>
</section>
</section>
</section>
<section id="dynamic-rule-reloading-and-database-integration-for-shiny-forms" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> <strong>Dynamic Rule Reloading and Database Integration for Shiny Forms</strong></h1>
<section id="dynamic-rule-reloading-spreadsheet-based" class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="dynamic-rule-reloading-spreadsheet-based"><span class="header-section-number">5.1</span> <strong>1. Dynamic Rule Reloading (Spreadsheet-Based)</strong></h2>
<section id="a.-spreadsheet-format-validation_rules.csv" class="level3" data-number="5.1.1">
<h3 data-number="5.1.1" class="anchored" data-anchor-id="a.-spreadsheet-format-validation_rules.csv"><span class="header-section-number">5.1.1</span> <strong>A. Spreadsheet Format (<code>validation_rules.csv</code>)</strong></h3>
<pre class="csv"><code>field,rule
age,age &gt;= 18 &amp;&amp; age &lt;= 65
email,/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(email)
height,height &gt; 50 &amp;&amp; height &lt; 250
bmi,weight / (height / 100) ** 2 &gt; 15 &amp;&amp; weight / (height / 100) ** 2 &lt; 50</code></pre>
<hr>
</section>
<section id="b.-lua-script-to-convert-csv-to-javascript-process_validation.lua" class="level3" data-number="5.1.2">
<h3 data-number="5.1.2" class="anchored" data-anchor-id="b.-lua-script-to-convert-csv-to-javascript-process_validation.lua"><span class="header-section-number">5.1.2</span> <strong>B. Lua Script to Convert CSV to JavaScript (<code>process_validation.lua</code>)</strong></h3>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode lua code-with-copy"><code class="sourceCode lua"><span id="cb15-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">csv</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"luacsv"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-- Requires CSV parser library</span></span>
<span id="cb15-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">file</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">io.open</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation_rules.csv"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb15-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">parsed_data</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">csv</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">file</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*all"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb15-4"></span>
<span id="cb15-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">js_code</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"const validationRules = {</span></span>
<span id="cb15-6"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb15-7"></span>
<span id="cb15-8"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">for i, row in ipairs(parsed_data) do</span></span>
<span id="cb15-9"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">    local field, rule = row[1], row[2]</span></span>
<span id="cb15-10"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">    js_code = js_code .. string.format('    "%s": function(value) { return %s; },</span></span>
<span id="cb15-11"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">', field, rule)</span></span>
<span id="cb15-12"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb15-13"></span>
<span id="cb15-14"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">js_code = js_code .. "};</span></span>
<span id="cb15-15"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb15-16"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">file:close()</span></span>
<span id="cb15-17"></span>
<span id="cb15-18"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">local js_file = io.open("validation.js", "w")</span></span>
<span id="cb15-19"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">js_file:write(js_code)</span></span>
<span id="cb15-20"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">js_file:close()</span></span>
<span id="cb15-21"></span>
<span id="cb15-22"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">print("Validation JavaScript generated successfully!")</span></span></code></pre></div>
<hr>
</section>
<section id="c.-shiny-app-with-automatic-rule-reloading-app.r" class="level3" data-number="5.1.3">
<h3 data-number="5.1.3" class="anchored" data-anchor-id="c.-shiny-app-with-automatic-rule-reloading-app.r"><span class="header-section-number">5.1.3</span> <strong>C. Shiny App with Automatic Rule Reloading (<code>app.R</code>)</strong></h3>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shiny)</span>
<span id="cb16-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(shinyjs)</span>
<span id="cb16-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(fs)</span>
<span id="cb16-4"></span>
<span id="cb16-5">ui <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fluidPage</span>(</span>
<span id="cb16-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useShinyjs</span>(),</span>
<span id="cb16-7">    tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(tags<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">script</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">src =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation.js"</span>)),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Include JS dynamically</span></span>
<span id="cb16-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">titlePanel</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dynamic Validation Rules in Shiny"</span>),</span>
<span id="cb16-9">    </span>
<span id="cb16-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarLayout</span>(</span>
<span id="cb16-11">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sidebarPanel</span>(</span>
<span id="cb16-12">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numericInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"age"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter Age:"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>),</span>
<span id="cb16-13">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"email"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter Email:"</span>),</span>
<span id="cb16-14">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numericInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"height"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter Height (cm):"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>),</span>
<span id="cb16-15">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numericInput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"weight"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Enter Weight (kg):"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>),</span>
<span id="cb16-16">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">actionButton</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"submit"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Submit"</span>),</span>
<span id="cb16-17">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">verbatimTextOutput</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation_message"</span>)</span>
<span id="cb16-18">        ),</span>
<span id="cb16-19">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainPanel</span>()</span>
<span id="cb16-20">    )</span>
<span id="cb16-21">)</span>
<span id="cb16-22"></span>
<span id="cb16-23">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {</span>
<span id="cb16-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Watch for changes in the validation rules file</span></span>
<span id="cb16-25">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observe</span>({</span>
<span id="cb16-26">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">invalidateLater</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>, session)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check every 5 seconds</span></span>
<span id="cb16-27">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runjs</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"delete window.validationRules; $.getScript('validation.js');"</span>)</span>
<span id="cb16-28">    })</span>
<span id="cb16-29">    </span>
<span id="cb16-30">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observeEvent</span>(input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>submit, {</span>
<span id="cb16-31">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runjs</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-32"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            let ageValid = validationRules['age'](parseFloat($('#age').val()));</span></span>
<span id="cb16-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            let emailValid = validationRules['email']($('#email').val());</span></span>
<span id="cb16-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            let heightValid = validationRules['height'](parseFloat($('#height').val()));</span></span>
<span id="cb16-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            let bmi = parseFloat($('#weight').val()) / ((parseFloat($('#height').val()) / 100) ** 2);</span></span>
<span id="cb16-36"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            let bmiValid = validationRules['bmi'](bmi);</span></span>
<span id="cb16-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            </span></span>
<span id="cb16-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            let messages = [];</span></span>
<span id="cb16-39"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            if (!ageValid) messages.push('Invalid Age!');</span></span>
<span id="cb16-40"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            if (!emailValid) messages.push('Invalid Email!');</span></span>
<span id="cb16-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            if (!heightValid) messages.push('Invalid Height!');</span></span>
<span id="cb16-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            if (!bmiValid) messages.push('Invalid BMI!');</span></span>
<span id="cb16-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            </span></span>
<span id="cb16-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            if (messages.length &gt; 0) {</span></span>
<span id="cb16-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                alert(messages.join('</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'));</span></span>
<span id="cb16-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            } else {</span></span>
<span id="cb16-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">                alert('All inputs are valid!');</span></span>
<span id="cb16-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">            }</span></span>
<span id="cb16-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">        "</span>);</span>
<span id="cb16-50">    })</span>
<span id="cb16-51">}</span>
<span id="cb16-52"></span>
<span id="cb16-53"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shinyApp</span>(ui, server)</span></code></pre></div>
<p>✔ <strong>Every 5 seconds</strong>, Shiny reloads <code>validation.js</code> if <code>validation_rules.csv</code> was modified.<br>
✔ The new validation rules apply <strong>immediately</strong> in the browser.<br>
✔ No need to restart the Shiny app.</p>
<hr>
</section>
</section>
<section id="database-integration-for-validation-rules" class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="database-integration-for-validation-rules"><span class="header-section-number">5.2</span> <strong>2. Database Integration for Validation Rules</strong></h2>
<p>Instead of a CSV file, the validation rules can be <strong>stored in a database</strong> (e.g., MySQL, PostgreSQL, SQLite).</p>
<section id="a.-database-schema" class="level3" data-number="5.2.1">
<h3 data-number="5.2.1" class="anchored" data-anchor-id="a.-database-schema"><span class="header-section-number">5.2.1</span> <strong>A. Database Schema</strong></h3>
<p>Table: <strong>validation_rules</strong></p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb17-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">CREATE</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">TABLE</span> validation_rules (</span>
<span id="cb17-2">    field TEXT <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">PRIMARY</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">KEY</span>,</span>
<span id="cb17-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rule</span> TEXT</span>
<span id="cb17-4">);</span></code></pre></div>
<p>Example data:</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode sql code-with-copy"><code class="sourceCode sql"><span id="cb18-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">INSERT</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">INTO</span> validation_rules (field, <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">rule</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">VALUES</span></span>
<span id="cb18-2">(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'age'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'age &gt;= 18 &amp;&amp; age &lt;= 65'</span>),</span>
<span id="cb18-3">(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'email'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(email)'</span>),</span>
<span id="cb18-4">(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'height'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'height &gt; 50 &amp;&amp; height &lt; 250'</span>),</span>
<span id="cb18-5">(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bmi'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'weight / (height / 100) ** 2 &gt; 15 &amp;&amp; weight / (height / 100) ** 2 &lt; 50'</span>);</span></code></pre></div>
<hr>
</section>
<section id="b.-lua-script-to-fetch-rules-from-database-process_validation_db.lua" class="level3" data-number="5.2.2">
<h3 data-number="5.2.2" class="anchored" data-anchor-id="b.-lua-script-to-fetch-rules-from-database-process_validation_db.lua"><span class="header-section-number">5.2.2</span> <strong>B. Lua Script to Fetch Rules from Database (<code>process_validation_db.lua</code>)</strong></h3>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode lua code-with-copy"><code class="sourceCode lua"><span id="cb19-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sqlite3</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">require</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lsqlite3"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb19-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">db</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sqlite3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>open<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"validation.db"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb19-3"></span>
<span id="cb19-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">local</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">js_code</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"const validationRules = {</span></span>
<span id="cb19-5"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb19-6"></span>
<span id="cb19-7"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">for row in db:nrows("SELECT * FROM validation_rules") do</span></span>
<span id="cb19-8"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">    js_code = js_code .. string.format('    "%s": function(value) { return %s; },</span></span>
<span id="cb19-9"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">', row.field, row.rule)</span></span>
<span id="cb19-10"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb19-11"></span>
<span id="cb19-12"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">js_code = js_code .. "};</span></span>
<span id="cb19-13"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb19-14"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">local js_file = io.open("validation.js", "w")</span></span>
<span id="cb19-15"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">js_file:write(js_code)</span></span>
<span id="cb19-16"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">js_file:close()</span></span>
<span id="cb19-17"></span>
<span id="cb19-18"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">db:close()</span></span>
<span id="cb19-19"><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">print("Validation JavaScript generated from database successfully!")</span></span></code></pre></div>
<p>This script queries the database and <strong>generates <code>validation.js</code> dynamically</strong>.</p>
<hr>
</section>
<section id="c.-modify-shiny-to-fetch-rules-from-database" class="level3" data-number="5.2.3">
<h3 data-number="5.2.3" class="anchored" data-anchor-id="c.-modify-shiny-to-fetch-rules-from-database"><span class="header-section-number">5.2.3</span> <strong>C. Modify Shiny to Fetch Rules from Database</strong></h3>
<p>Modify the <strong>Shiny <code>server</code> function</strong> to reload validation rules <strong>every 5 seconds</strong>.</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">server <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(input, output, session) {</span>
<span id="cb20-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">observe</span>({</span>
<span id="cb20-3">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">invalidateLater</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>, session)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reload every 5 seconds</span></span>
<span id="cb20-4">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">system</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lua process_validation_db.lua"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run Lua script</span></span>
<span id="cb20-5">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runjs</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"delete window.validationRules; $.getScript('validation.js');"</span>)</span>
<span id="cb20-6">    })</span>
<span id="cb20-7">}</span></code></pre></div>
<p>✔ <strong>Shiny queries the database every 5 seconds</strong> and updates validation rules dynamically.<br>
✔ Users can <strong>edit validation rules in the database</strong>, and they apply instantly.<br>
✔ <strong>No restart required</strong>.</p>
<hr>
</section>
</section>
<section id="comparison-spreadsheet-vs.-database" class="level2" data-number="5.3">
<h2 data-number="5.3" class="anchored" data-anchor-id="comparison-spreadsheet-vs.-database"><span class="header-section-number">5.3</span> <strong>Comparison: Spreadsheet vs.&nbsp;Database</strong></h2>
<table class="caption-top table">
<thead>
<tr class="header">
<th>Feature</th>
<th>CSV-Based Dynamic Rules</th>
<th>Database-Based Dynamic Rules</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><strong>Storage</strong></td>
<td>Local file</td>
<td>Centralized database</td>
</tr>
<tr class="even">
<td><strong>Scalability</strong></td>
<td>Best for small teams</td>
<td>Ideal for large-scale use</td>
</tr>
<tr class="odd">
<td><strong>User Interface</strong></td>
<td>Spreadsheet</td>
<td>Web-based admin panel</td>
</tr>
<tr class="even">
<td><strong>Performance</strong></td>
<td>Fast</td>
<td>Requires DB query</td>
</tr>
</tbody>
</table>
<hr>
</section>
<section id="next-steps-1" class="level2" data-number="5.4">
<h2 data-number="5.4" class="anchored" data-anchor-id="next-steps-1"><span class="header-section-number">5.4</span> <strong>Next Steps</strong></h2>
<p>🔥 <strong>Would you like an admin panel in Shiny to edit validation rules directly?</strong><br>
🔥 <strong>Would you like to store validation rules in a NoSQL database (MongoDB)?</strong><br>
🚀 Let me know what enhancements you’d like! 🚀</p>
</section>
<section id="prerequisites" class="level2" data-number="5.5">
<h2 data-number="5.5" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">5.5</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="5.6">
<h2 data-number="5.6" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">5.6</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="5.7">
<h2 data-number="5.7" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">5.7</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="5.8">
<h2 data-number="5.8" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">5.8</span> Further Reading</h2>
<p>In development</p>


</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {RCT Validation Language},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/rct_validation_lang/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“RCT Validation
Language.”</span> May 13, 2025. <a href="https://focusonr.org/posts/rct_validation_lang/">https://focusonr.org/posts/rct_validation_lang/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/rct_validation_lang/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/rct_validation_lang/img/lua.png" medium="image" type="image/png" height="96" width="144"/>
</item>
<item>
  <title>Mac Workflow for Tracking Daily Research Progress</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/research_management/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/research_management/img/organized.jpg" class="img-fluid figure-img"></p>
<figcaption>quarto</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Tracking daily research progress can quickly become overwhelming without a structured workflow. This guide outlines an efficient system using a well-organized directory structure, automated logging, ChatGPT for dictation and summarization, and Git for version control. By implementing this workflow, you can maintain clear, searchable research logs while reducing manual overhead.</p>
</section>
<section id="step-1-organize-your-research-folder-structure" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Step 1: Organize Your Research Folder Structure</h1>
<p>A structured directory keeps your research files easily accessible and prevents clutter. Use the following command to create a research workspace:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> ~/prj/research_update ~/prj/<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">{X1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">X2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">X3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">X4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">X5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">X6</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">X7</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">X8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">X9</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">X10}</span></span></code></pre></div>
<p>Each project folder should contain:</p>
<ul>
<li><code>notes.md</code> – Running log of project progress</li>
<li><code>references.bib</code> – Citation management</li>
<li><code>data/</code> – Datasets and related files</li>
<li><code>coding/</code> – Code and analyses</li>
<li><code>figures/</code> – Graphs and visualizations</li>
<li><code>tables/</code> – Data summaries</li>
<li><code>archive/</code> – Storage for non-current files</li>
</ul>
</section>
<section id="step-2-implement-a-daily-logging-system" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Step 2: Implement a Daily Logging System</h1>
<p>Maintaining a centralized daily log helps consolidate research updates. Store daily progress for each repository in:</p>
<pre><code>
```sh
~/prj/research_update/daily_log.md</code></pre>
<p>To streamline the process, we use a script to automatically generate a structured prompt for ChatGPT.</p>
</section>
<section id="step-3-automate-dictation-summarization-via-chatgpt" class="level1 page-columns page-full" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Step 3: Automate Dictation &amp; Summarization via ChatGPT</h1>
<p>Use macos built-in dictation tool to provide audio summary, not necessary to follow normal dictation rules e.g.&nbsp;“new line” ChatGPT refines dictated notes into concise summaries.</p>
<section id="step-3.1-initialize-a-chatgpt-dictation-prompt-by" class="level2 page-columns page-full" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="step-3.1-initialize-a-chatgpt-dictation-prompt-by"><span class="header-section-number">4.1</span> Step 3.1: Initialize a chatGPT dictation prompt by</h2>
<p>running this <code>bash</code> script to copy a prelude to the chatGPT prompt to your clipboard: Call it <code>dp</code> (dictation prompt).</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb3-2"></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get current date and time</span></span>
<span id="cb3-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">current_time</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span> +<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y-%m-%d %H:%M:%S"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the current directory name</span></span>
<span id="cb3-7"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">current_dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">basename</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PWD</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the prompt with explicit instructions</span></span>
<span id="cb3-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">prompt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"I'm an academic biostatistician. I'm working on a data analysis project.</span></span>
<span id="cb3-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">I'm about to dictate daily research progress notes.  </span></span>
<span id="cb3-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">When I'm done, provide a concise summary that includes:  </span></span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">1. The date  and time of dictation (</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$current_time</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">).  The line with date and time</span></span>
<span id="cb3-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">should be the second line of the summary. The first line should be blank. The</span></span>
<span id="cb3-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">date and time line shound be enclosed in a box of ascii characters to set it apart.</span></span>
<span id="cb3-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">2. The name of the current research project directory (</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$current_dir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">).  </span></span>
<span id="cb3-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">3. Each line of the summary including the blank line and the date and time line</span></span>
<span id="cb3-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">and enclosing box lines should begin with </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$current_dir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> so that it can be</span></span>
<span id="cb3-20"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">extracted using ripgrep.  </span></span>
<span id="cb3-21"></span>
<span id="cb3-22"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">The notes start here: "</span></span>
<span id="cb3-23"></span>
<span id="cb3-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Copy the prompt to clipboard (MacOS pbcopy)</span></span>
<span id="cb3-25"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-n</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$prompt</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pbcopy</span></span>
<span id="cb3-26"></span>
<span id="cb3-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Notify the user</span></span>
<span id="cb3-28"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Prompt copied to clipboard. Paste it into ChatGPT when ready."</span></span></code></pre></div>

<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><embed src="img/flow.pdf" class="img-fluid"></p>
<figcaption>workflow</figcaption>
</figure>
</div>
</div></div></section>
<section id="step-3.2-dictating-notes" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="step-3.2-dictating-notes"><span class="header-section-number">4.2</span> Step 3.2: Dictating Notes</h2>
<ol type="1">
<li>Open ChatGPT (done automatically by “dp” script) and follow these steps:</li>
<li>copy text from clipboard into the prompt box.</li>
<li>submit prompt to prep chatGPT for summarization.</li>
<li>Click chatGPT microphone and Dictate your research notes.</li>
<li>When finished dictating submit prompt to ChatGPT for summarization.</li>
<li>Copy and generated summary onto the clipboard.</li>
</ol>
<p>Use the following script to append the summary to your daily log: and push the changes to daily_log.md to the remote repository on GitHub.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the current directory name</span></span>
<span id="cb4-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">current_dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">basename</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PWD</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the current date and time</span></span>
<span id="cb4-7"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">current_time</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span> +<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y-%m-%d %H:%M:%S"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-8"></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the clipboard content (MacOS pbpaste)</span></span>
<span id="cb4-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">clipboard_content</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pbpaste</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-11"></span>
<span id="cb4-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Echo the output</span></span>
<span id="cb4-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span id="cb4-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$clipboard_content</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> ~/prj/research_update/daily_log.md</span>
<span id="cb4-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> ~/prj/research_update/daily_log.md</span>
<span id="cb4-16"></span>
<span id="cb4-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Confirm success</span></span>
<span id="cb4-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Update for </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$current_dir</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> appended to daily_log.md in ~/prj/research_update"</span></span>
<span id="cb4-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ~/prj/research_update</span>
<span id="cb4-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> add .</span>
<span id="cb4-21">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> commit <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-a</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Daily log update </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">date</span> +<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'%Y-%m-%d'</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb4-22">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> push</span></code></pre></div>
</section>
</section>
<section id="step-5-search-retrieve-past-notes" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Step 5: Search &amp; Retrieve Past Notes</h1>
<p>Use <code>grep</code> to find past research logs:</p>
<p>The following script searches the daily log for the current project directory and displays the results: Call it “sp” (search project).</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/bin/bash</span></span>
<span id="cb5-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">current_dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">basename</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PWD</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">rg</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$current_dir</span> ~/prj/research_update/daily_log.md <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cut</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c6-</span></span></code></pre></div>
</section>
<section id="summary-of-the-workflow" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Summary of the Workflow</h1>
<ol type="1">
<li>Organize project folders.</li>
<li>Set up a centralized daily log.</li>
<li>Use ChatGPT for dictation and summarization.</li>
<li>Automate log updates with a script.</li>
<li>Track changes with Git.</li>
<li>Easily search and retrieve past notes.</li>
</ol>
<p>By integrating this workflow, you’ll add structured daily documentation with minimal effort.</p>
</section>
<section id="appendix-experimental-approach" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> Appendix: Experimental Approach</h1>
<p>In theory it should be possible to use ChatGPT to generate the daily log directly</p>
<section id="prerequisites" class="level2" data-number="7.1">
<h2 data-number="7.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">7.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="7.2">
<h2 data-number="7.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">7.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="7.3">
<h2 data-number="7.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">7.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="7.4">
<h2 data-number="7.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">7.4</span> Further Reading</h2>
<p>In development</p>


<!-- -->

</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Mac {Workflow} for {Tracking} {Daily} {Research} {Progress}},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/research_management/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Mac Workflow for Tracking Daily
Research Progress.”</span> May 13, 2025. <a href="https://focusonr.org/posts/research_management/">https://focusonr.org/posts/research_management/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/research_management/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/research_management/img/organized.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Setting up OBS for webcasting</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/setup_obs_p09/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<p><img src="https://focusonr.org/posts/setup_obs_p09/img/obs.png" class="img-fluid"></p>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Webcasting for biostatistics is the challenge.</p>
<p>Lets take it one step at a time.</p>
<p>Start with the open source project <code>OBS</code>.</p>
<p><a href="https://obsproject.com/welcome">Welcome | OBS</a></p>
<p>Steps to get started. Work with youtube video.</p>
<p><a href="https://www.youtube.com/watch?v=-puA85ciDEM">How to Use OBS Studio</a></p>
<p>goal is to be able to create short, 5 minute, videos demonstrating “real time” data analysis.</p>
<p>first project:</p>
<ul>
<li><p>work through first 10 minutes of Dave Robinson “water” tidytuesday analysis.</p></li>
<li><p>create a 5 minute version of the analysis in vim using rgt-R tools and ultisnips.</p></li>
<li><p>create a simple OBS framework for the screencast.</p></li>
<li><p>Sections TBD</p></li>
<li><p>Youtube channel</p></li>
<li><p>Background blur</p></li>
<li><p>Keycastr</p></li>
<li><p>High contrast colorscheme</p></li>
<li><p>hotkeys</p></li>
<li><p>audio setup</p></li>
<li><p>video setup</p></li>
<li><p>format ?</p></li>
<li><p>scenes</p></li>
<li><p>twitter</p></li>
<li><p>blog</p></li>
<li><p>stack</p></li>
<li><p>podcast</p></li>
<li><p>vimcasts</p></li>
<li><p>twitch</p></li>
<li><p>tidytuesday</p></li>
<li><p>imovie for editing</p></li>
</ul>
<section id="prerequisites" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">1.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">1.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">1.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">1.4</span> Further Reading</h2>
<p>In development</p>


</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Setting up {OBS} for Webcasting},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/setup_obs_p09/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Setting up OBS for
Webcasting.”</span> May 13, 2025. <a href="https://focusonr.org/posts/setup_obs_p09/">https://focusonr.org/posts/setup_obs_p09/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/setup_obs_p09/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/setup_obs_p09/img/obs.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Configure the tiling window manager yabai for macos</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/setup_yabai/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/setup_yabai/img/yabai.svg" class="img-fluid figure-img" style="width:2in"></p>
<figcaption>quarto</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Yabai is a tiling window manager for macOS.</p>
<p>What is a tiling window manager? According to Wikipedia, “In computing, a tiling window manager is a window manager with an organization of the screen into mutually non-overlapping frames, as opposed to the more common approach (used by stacking window managers) of coordinate-based stacking of overlapping objects (windows) that tries to fully emulate the desktop metaphor”</p>
<p>Specifically, yabai is a tiling window manager for macOS. The user interface allows close control of windows, spaces, and displays. It automatically modifies the window layout throughout yur workspace using a binary space partitioning algorithm.</p>
<p>The github page for yabai is <a href="https://github.com/koekeishiya/yabai">here</a>.</p>
<p>Check out blog : <a href="https://www.steven-braun.com/blog/2022/i3wm-to-yabai/">Tiling macOS: Moving from i3wm to Yabai | Steven Braun</a></p>
</section>
<section id="installation" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Installation</h1>
<p>Yabai can be install using homebrew. The following commands will install yabai and start the service.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">brew</span> install koekeishiya/formulae/yabai</span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># start or restart yabai</span></span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--start-service</span></span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--restart-service</span></span></code></pre></div>
<p>Keyboard shortcuts can be defined with ↗ skhd or any other suitable software you may prefer. ## .yabairc</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb2-1"></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#!/usr/bin/env bash</span></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--load-sa</span></span>
<span id="cb2-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> signal <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--add</span> event=dock_did_restart action=<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sudo yabai --load-sa"</span></span>
<span id="cb2-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-x</span></span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ====== Variables =============================</span></span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">declare</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-A</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">gaps</span></span>
<span id="cb2-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">declare</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-A</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">color</span></span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">gaps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12"</span></span>
<span id="cb2-13"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">gaps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12"</span></span>
<span id="cb2-14"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">gaps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12"</span></span>
<span id="cb2-15"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">gaps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12"</span></span>
<span id="cb2-16"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">gaps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"inner"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12"</span></span>
<span id="cb2-17"></span>
<span id="cb2-18"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"focused"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0xE0808080"</span></span>
<span id="cb2-19"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normal"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0x00010101"</span></span>
<span id="cb2-20"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"preselect"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0xE02d74da"</span></span>
<span id="cb2-21"></span>
<span id="cb2-22"></span>
<span id="cb2-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===== Loading Scripting Additions ============</span></span>
<span id="cb2-24"></span>
<span id="cb2-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># See: https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)#macos-big-sur---automatically-load-scripting-addition-on-startup</span></span>
<span id="cb2-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sudo yabai --load-sa</span></span>
<span id="cb2-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"</span></span>
<span id="cb2-28"></span>
<span id="cb2-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===== Tiling setting =========================</span></span>
<span id="cb2-30"></span>
<span id="cb2-31"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config layout                      bsp</span>
<span id="cb2-32"></span>
<span id="cb2-33"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config top_padding                 <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${gaps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-34"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config bottom_padding              <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${gaps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-35"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config left_padding                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${gaps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"left"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-36"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config right_padding               <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${gaps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"right"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-37"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config window_gap                  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${gaps</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"inner"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-38"></span>
<span id="cb2-39"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config mouse_follows_focus         on</span>
<span id="cb2-40"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config focus_follows_mouse         on</span>
<span id="cb2-41"></span>
<span id="cb2-42"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config window_topmost              off</span>
<span id="cb2-43"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config window_opacity              off</span>
<span id="cb2-44"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config window_shadow               float</span>
<span id="cb2-45"></span>
<span id="cb2-46"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config window_border               on</span>
<span id="cb2-47"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config window_border_width         2</span>
<span id="cb2-48"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config active_window_border_color  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"focused"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-49"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config normal_window_border_color  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normal"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-50"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config insert_feedback_color       <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"preselect"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb2-51"></span>
<span id="cb2-52"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config active_window_opacity       1.0</span>
<span id="cb2-53"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config normal_window_opacity       0.90</span>
<span id="cb2-54"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config split_ratio                 0.50</span>
<span id="cb2-55"></span>
<span id="cb2-56"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config auto_balance                on</span>
<span id="cb2-57"></span>
<span id="cb2-58"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config mouse_modifier              fn</span>
<span id="cb2-59"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config mouse_action1               move</span>
<span id="cb2-60"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> config mouse_action2               resize</span>
<span id="cb2-61"></span>
<span id="cb2-62"></span>
<span id="cb2-63"></span>
<span id="cb2-64"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span> +x</span>
<span id="cb2-65"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">printf</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yabai: configuration loaded...</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">n"</span></span></code></pre></div>
</section>
<section id="skhd" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> skhd</h1>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode sh code-with-copy"><code class="sourceCode bash"><span id="cb3-1"></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># experimental </span></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># # move window to display left and right</span></span>
<span id="cb3-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> s : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--display</span> west<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> display <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> west<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span></span>
<span id="cb3-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> g : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--display</span> east<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> display <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> east<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># opens iTerm2</span></span>
<span id="cb3-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">alt</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> return : <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${HOME}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>/bin/open_iterm.sh</span>
<span id="cb3-8"></span>
<span id="cb3-9"></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Navigation</span></span>
<span id="cb3-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">alt</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> h : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> west</span>
<span id="cb3-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">alt</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> j : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> south</span>
<span id="cb3-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">alt</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> k : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> north</span>
<span id="cb3-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">alt</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> l : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> east</span>
<span id="cb3-15"></span>
<span id="cb3-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Moving windows</span></span>
<span id="cb3-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> h : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warp</span> west</span>
<span id="cb3-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> j : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warp</span> south</span>
<span id="cb3-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> k : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warp</span> north</span>
<span id="cb3-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> l : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--warp</span> east</span>
<span id="cb3-21"></span>
<span id="cb3-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Move focus container to workspace</span></span>
<span id="cb3-23"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> m : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--space</span> last<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> last</span>
<span id="cb3-24"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> p : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--space</span> prev<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> prev</span>
<span id="cb3-25"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> n : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--space</span> next<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> next</span>
<span id="cb3-26"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> 1 : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--space</span> 1<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> 1</span>
<span id="cb3-27"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> 2 : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--space</span> 2<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> 2</span>
<span id="cb3-28"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> 3 : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--space</span> 3<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> 3</span>
<span id="cb3-29"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> 4 : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--space</span> 4<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--focus</span> 4</span>
<span id="cb3-30"></span>
<span id="cb3-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Resize windows</span></span>
<span id="cb3-32"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lctrl</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> h : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--resize</span> left:-50:0<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-33">                  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--resize</span> right:-50:0</span>
<span id="cb3-34"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lctrl</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> j : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--resize</span> bottom:0:50<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-35">                  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--resize</span> top:0:50</span>
<span id="cb3-36"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lctrl</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> k : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--resize</span> top:0:-50<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-37">                  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--resize</span> bottom:0:-50</span>
<span id="cb3-38"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lctrl</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> l : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--resize</span> right:50:0<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-39">                  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--resize</span> left:50:0</span>
<span id="cb3-40"></span>
<span id="cb3-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Equalize size of windows</span></span>
<span id="cb3-42"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lctrl</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> e : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--balance</span></span>
<span id="cb3-43"></span>
<span id="cb3-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Enable / Disable gaps in current workspace</span></span>
<span id="cb3-45"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lctrl</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> g : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--toggle</span> padding<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--toggle</span> gap</span>
<span id="cb3-46"></span>
<span id="cb3-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rotate windows clockwise and anticlockwise</span></span>
<span id="cb3-48"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">alt</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> r         : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rotate</span> 270</span>
<span id="cb3-49"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> r : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--rotate</span> 90</span>
<span id="cb3-50"></span>
<span id="cb3-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rotate on X and Y Axis</span></span>
<span id="cb3-52"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> x : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--mirror</span> x-axis</span>
<span id="cb3-53"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> y : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> space <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--mirror</span> y-axis</span>
<span id="cb3-54"></span>
<span id="cb3-55"></span>
<span id="cb3-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Float / Unfloat window</span></span>
<span id="cb3-57"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> space : <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-58">    yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--toggle</span> float<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-59">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">yabai</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--toggle</span> border</span>
<span id="cb3-60"></span>
<span id="cb3-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Restart Yabai</span></span>
<span id="cb3-62"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + lctrl + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> r : <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-63">    /usr/bin/env osascript <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-64">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"display notification </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Restarting Yabai</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> with title </span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Yabai</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-65">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">launchctl</span> kickstart <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-k</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gui/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${UID}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/homebrew.mxcl.yabai"</span></span>
<span id="cb3-66"></span>
<span id="cb3-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make window native fullscreen</span></span>
<span id="cb3-68"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">alt</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> f         : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--toggle</span> zoom-fullscreen</span>
<span id="cb3-69"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">shift</span> + alt <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> f : yabai <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> window <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--toggle</span> native-fullscreen</span>
<span id="cb3-70"></span></code></pre></div>
<p>References:</p>
<p><a href="https://github.com/koekeishiya/yabai">GitHub - koekeishiya/yabai: A tiling window manager for macOS based on binary space partitioning</a></p>
<p><a href="https://en.wikipedia.org/wiki/Tiling_window_manager">Tiling window manager - Wikipedia</a></p>
<p><a href="https://bryce-s.com/yabai/">MacOS - Yabai Configuration | Bryce Smith</a></p>
<p><a href="https://evantravers.com/articles/2024/02/15/yabai-tiling-window-management-for-osx/">Configuring Yabai for Focus</a></p>
<p><a href="https://www.youtube.com/watch?v=9SQG5ogWEug">youtube Yabai configuration updates 2024</a></p>
<section id="prerequisites" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">3.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">3.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">3.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="3.4">
<h2 data-number="3.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">3.4</span> Further Reading</h2>
<p>In development</p>


</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Configure the Tiling Window Manager Yabai for Macos},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/setup_yabai/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Configure the Tiling Window
Manager Yabai for Macos.”</span> May 13, 2025. <a href="https://focusonr.org/posts/setup_yabai/">https://focusonr.org/posts/setup_yabai/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/setup_yabai/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/setup_yabai/img/yabai.svg" medium="image" type="image/svg+xml"/>
</item>
<item>
  <title>Converting R data.frames to pdf for better placement control in latex pdf report</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/table_placement_rmarkdown/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/table_placement_rmarkdown/img/rmarkdown.png" class="img-fluid figure-img" style="width:1.5in"></p>
<figcaption>purrr</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>As a longtime rmarkdown user, I have often been frustrated by the lack of control over the placement of tables in the pdf output.</p>
<p>I recently came across a stackoverflow post that expressed the same frustration.</p>
<blockquote class="blockquote">
<p>“I have read what feels like 100 articles and threads on the topic and tried so many things I have lost count of it all but am still stuck. I have managed to make some minor improvements but still not all tables and plots are being placed where I am intending them to be.”</p>
</blockquote>
<p>https://stackoverflow.com/questions/73515608/how-to-control-placement-of-tables-and-plots-in-rmarkdown-for-pdf-output</p>
<p>https://stackoverflow.com/users/17846738/k-j</p>
<section id="prerequisites" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">1.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="1.2">
<h2 data-number="1.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">1.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="1.3">
<h2 data-number="1.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">1.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="1.4">
<h2 data-number="1.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">1.4</span> Further Reading</h2>
<p>In development</p>


</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Converting {R} Data.frames to Pdf for Better Placement
    Control in Latex Pdf Report},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/table_placement_rmarkdown/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Converting R Data.frames to Pdf
for Better Placement Control in Latex Pdf Report.”</span> May 13, 2025.
<a href="https://focusonr.org/posts/table_placement_rmarkdown/">https://focusonr.org/posts/table_placement_rmarkdown/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/table_placement_rmarkdown/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/table_placement_rmarkdown/img/rmarkdown.png" medium="image" type="image/png" height="166" width="144"/>
</item>
<item>
  <title>Configure ultisnips to streamline R and Rmd coding</title>
  <dc:creator>Ronald (Ryy) Glenn Thomas</dc:creator>
  <link>https://focusonr.org/posts/config_ultisnips/</link>
  <description><![CDATA[ 





<div class="no-row-height column-margin column-container"><div class="">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://focusonr.org/posts/config_ultisnips/img/vimR.png" class="img-fluid figure-img"></p>
<figcaption>iterm2</figcaption>
</figure>
</div>
</div></div><section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Snippets are a useful mechanism to streamline coding in R, Rmarkdown, and Quarto and really any other programming language. They are code templates that can be inserted as replacements for trigger strings the progammer enters. They can be set up to be automatic or on-demand or contingent on ??.</p>
<div class="quarto-video"><video id="video_shortcode_videojs_video1" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title=""><source src="img/test.mp4"></video></div>
</section>
<section id="references" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> References</h1>
<ul>
<li><p><a href="https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt">The ultisnips help page on github</a></p></li>
<li><p><a href="https://ejmastnak.com/tutorials/vim-latex/ultisnips/">UltiSnips Plugin Guide for LaTeX | Vim and LaTeX Series Part 2 | ejmastnak</a></p></li>
</ul>
<section id="prerequisites" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="prerequisites"><span class="header-section-number">2.1</span> Prerequisites</h2>
<p>In development</p>
</section>
<section id="step-by-step-implementation" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="step-by-step-implementation"><span class="header-section-number">2.2</span> Step-by-Step Implementation</h2>
<p>In development</p>
</section>
<section id="key-takeaways" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="key-takeaways"><span class="header-section-number">2.3</span> Key Takeaways</h2>
<p>In development</p>
</section>
<section id="further-reading" class="level2" data-number="2.4">
<h2 data-number="2.4" class="anchored" data-anchor-id="further-reading"><span class="header-section-number">2.4</span> Further Reading</h2>
<p>In development</p>


</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{(ryy)_glenn_thomas2025,
  author = {(Ryy) Glenn Thomas, Ronald},
  title = {Configure Ultisnips to Streamline {R} and {Rmd} Coding},
  date = {2025-05-13},
  url = {https://focusonr.org/posts/config_ultisnips/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-(ryy)_glenn_thomas2025" class="csl-entry quarto-appendix-citeas">
(Ryy) Glenn Thomas, Ronald. 2025. <span>“Configure Ultisnips to
Streamline R and Rmd Coding.”</span> May 13, 2025. <a href="https://focusonr.org/posts/config_ultisnips/">https://focusonr.org/posts/config_ultisnips/</a>.
</div></div></section></div> ]]></description>
  <guid>https://focusonr.org/posts/config_ultisnips/</guid>
  <pubDate>Tue, 13 May 2025 18:32:11 GMT</pubDate>
  <media:content url="https://focusonr.org/posts/config_ultisnips/img/iterm2.png" medium="image" type="image/png"/>
</item>
</channel>
</rss>
